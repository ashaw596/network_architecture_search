albert@albert-desktop:~/git/network_architecture_search$ python2 experiment_cifar.py
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally
[{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 0, 'episode': 0, 'encoding': [1, 3, 2, 0], 'train_time_seconds': 368.049252, 'test_accuracy': 0.54039999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 1, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2], 'train_time_seconds': 408.275522, 'test_accuracy': 0.70669999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 2, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1], 'train_time_seconds': 475.116003, 'test_accuracy': 0.74450000000000005}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 3, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0], 'train_time_seconds': 573.275197, 'test_accuracy': 0.78920000000000001}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 4, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3], 'train_time_seconds': 610.236321, 'test_accuracy': 0.7974}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}], 'index': 5, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3], 'train_time_seconds': 616.56595, 'test_accuracy': 0.76959999999999995}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 6, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2], 'train_time_seconds': 638.756012, 'test_accuracy': 0.71870000000000001}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 7, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3], 'train_time_seconds': 673.490203, 'test_accuracy': 0.71870000000000001}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 8, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0], 'train_time_seconds': 701.666276, 'test_accuracy': 0.72009999999999996}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 9, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2], 'train_time_seconds': 734.279322, 'test_accuracy': 0.71040000000000003}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 10, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2, 0, 2, 1, 3], 'train_time_seconds': 759.138101, 'test_accuracy': 0.71120000000000005}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 11, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2, 0, 2, 1, 3, 0, 2, 1, 3], 'train_time_seconds': 785.593478, 'test_accuracy': 0.7016}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 12, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2, 0, 2, 1, 3, 0, 2, 1, 3, 2, 0, 3, 1], 'train_time_seconds': 811.026095, 'test_accuracy': 0.70509999999999995}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 13, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2, 0, 2, 1, 3, 0, 2, 1, 3, 2, 0, 3, 1, 1, 0, 3, 2], 'train_time_seconds': 836.35241, 'test_accuracy': 0.70469999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 14, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2, 0, 2, 1, 3, 0, 2, 1, 3, 2, 0, 3, 1, 1, 0, 3, 2, 0, 3, 1, 2], 'train_time_seconds': 858.769875, 'test_accuracy': 0.69899999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 15, 'episode': 1, 'encoding': [0, 1, 2, 3], 'train_time_seconds': 150.175051, 'test_accuracy': 0.52459999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 16, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1], 'train_time_seconds': 189.038294, 'test_accuracy': 0.61439999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 17, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1], 'train_time_seconds': 250.080138, 'test_accuracy': 0.68889999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 18, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1], 'train_time_seconds': 288.146287, 'test_accuracy': 0.70369999999999999}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 19, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3], 'train_time_seconds': 310.580743, 'test_accuracy': 0.67169999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 20, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0], 'train_time_seconds': 341.077389, 'test_accuracy': 0.69030000000000002}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 21, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2], 'train_time_seconds': 369.405306, 'test_accuracy': 0.69579999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 22, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1], 'train_time_seconds': 397.396746, 'test_accuracy': 0.69259999999999999}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 23, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0], 'train_time_seconds': 423.511957, 'test_accuracy': 0.6865}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 24, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0], 'train_time_seconds': 446.028381, 'test_accuracy': 0.69640000000000002}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 25, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0, 3, 2, 1, 0], 'train_time_seconds': 473.146224, 'test_accuracy': 0.69279999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 26, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0, 3, 2, 1, 0, 0, 3, 2, 1], 'train_time_seconds': 495.503059, 'test_accuracy': 0.6875}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 27, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0, 3, 2, 1, 0, 0, 3, 2, 1, 3, 0, 1, 2], 'train_time_seconds': 519.678454, 'test_accuracy': 0.69220000000000004}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 28, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0, 3, 2, 1, 0, 0, 3, 2, 1, 3, 0, 1, 2, 2, 3, 1, 0], 'train_time_seconds': 542.799009, 'test_accuracy': 0.69099999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 29, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0, 3, 2, 1, 0, 0, 3, 2, 1, 3, 0, 1, 2, 2, 3, 1, 0, 0, 1, 2, 3], 'train_time_seconds': 565.664945, 'test_accuracy': 0.68340000000000001}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 30, 'episode': 2, 'encoding': [3, 0, 2, 1], 'train_time_seconds': 363.186491, 'test_accuracy': 0.46729999999999999}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 31, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0], 'train_time_seconds': 734.629674, 'test_accuracy': 0.68469999999999998}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 32, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3], 'train_time_seconds': 755.385455, 'test_accuracy': 0.73999999999999999}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 33, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2], 'train_time_seconds': 790.358784, 'test_accuracy': 0.73740000000000006}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 34, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3], 'train_time_seconds': 818.245828, 'test_accuracy': 0.73909999999999998}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 35, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0], 'train_time_seconds': 850.62952, 'test_accuracy': 0.7429}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 36, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0], 'train_time_seconds': 878.000302, 'test_accuracy': 0.75749999999999995}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 37, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0], 'train_time_seconds': 910.815702, 'test_accuracy': 0.76060000000000005}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 38, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0], 'train_time_seconds': 932.361959, 'test_accuracy': 0.75309999999999999}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 39, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2], 'train_time_seconds': 971.975253, 'test_accuracy': 0.74570000000000003}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 40, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1], 'train_time_seconds': 991.470465, 'test_accuracy': 0.74160000000000004}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 41, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 0, 2, 3, 1], 'train_time_seconds': 1013.129267, 'test_accuracy': 0.73560000000000003}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 42, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 0, 2, 3, 1, 1, 2, 3, 0], 'train_time_seconds': 1039.030533, 'test_accuracy': 0.73950000000000005}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 43, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 0, 2, 3, 1, 1, 2, 3, 0, 2, 0, 3, 1], 'train_time_seconds': 1061.343818, 'test_accuracy': 0.73560000000000003}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 44, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 0, 2, 3, 1, 1, 2, 3, 0, 2, 0, 3, 1, 1, 0, 3, 2], 'train_time_seconds': 1090.086285, 'test_accuracy': 0.7359}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 45, 'episode': 3, 'encoding': [0, 1, 2, 3], 'train_time_seconds': 154.492417, 'test_accuracy': 0.52590000000000003}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 46, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2], 'train_time_seconds': 177.56699, 'test_accuracy': 0.59079999999999999}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 47, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0], 'train_time_seconds': 216.361385, 'test_accuracy': 0.64070000000000005}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 48, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3], 'train_time_seconds': 244.415507, 'test_accuracy': 0.6482}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 49, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3], 'train_time_seconds': 271.270051, 'test_accuracy': 0.64049999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 50, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3], 'train_time_seconds': 293.775519, 'test_accuracy': 0.64200000000000002}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 51, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2], 'train_time_seconds': 321.128231, 'test_accuracy': 0.63749999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 52, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0], 'train_time_seconds': 350.131566, 'test_accuracy': 0.64039999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 53, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1], 'train_time_seconds': 379.47718, 'test_accuracy': 0.6351}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 54, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3], 'train_time_seconds': 402.270577, 'test_accuracy': 0.62239999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 55, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3, 0, 2, 3, 1], 'train_time_seconds': 422.82807, 'test_accuracy': 0.627}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 56, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3, 0, 2, 3, 1, 3, 2, 0, 1], 'train_time_seconds': 440.262341, 'test_accuracy': 0.63019999999999998}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 57, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3, 0, 2, 3, 1, 3, 2, 0, 1, 3, 2, 1, 0], 'train_time_seconds': 465.008078, 'test_accuracy': 0.62660000000000005}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 58, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3, 0, 2, 3, 1, 3, 2, 0, 1, 3, 2, 1, 0, 1, 2, 0, 3], 'train_time_seconds': 487.055249, 'test_accuracy': 0.62949999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 59, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3, 0, 2, 3, 1, 3, 2, 0, 1, 3, 2, 1, 0, 1, 2, 0, 3, 1, 0, 3, 2], 'train_time_seconds': 513.123642, 'test_accuracy': 0.62309999999999999}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 60, 'episode': 4, 'encoding': [2, 3, 0, 1], 'train_time_seconds': 267.085217, 'test_accuracy': 0.54620000000000002}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 61, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3], 'train_time_seconds': 284.421141, 'test_accuracy': 0.68279999999999996}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 62, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0], 'train_time_seconds': 338.823722, 'test_accuracy': 0.75360000000000005}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 63, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2], 'train_time_seconds': 364.37943, 'test_accuracy': 0.77049999999999996}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 64, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1], 'train_time_seconds': 395.799564, 'test_accuracy': 0.76759999999999995}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 65, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1], 'train_time_seconds': 428.267988, 'test_accuracy': 0.7681}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 66, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3], 'train_time_seconds': 449.424833, 'test_accuracy': 0.78010000000000002}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 67, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3], 'train_time_seconds': 475.862533, 'test_accuracy': 0.77280000000000004}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 68, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3], 'train_time_seconds': 502.726014, 'test_accuracy': 0.77569999999999995}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 69, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2], 'train_time_seconds': 524.395997, 'test_accuracy': 0.76919999999999999}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 70, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2, 3, 1, 2, 0], 'train_time_seconds': 550.039473, 'test_accuracy': 0.77190000000000003}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 71, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2, 3, 1, 2, 0, 3, 1, 0, 2], 'train_time_seconds': 580.835388, 'test_accuracy': 0.76659999999999995}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 72, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2, 3, 1, 2, 0, 3, 1, 0, 2, 2, 0, 1, 3], 'train_time_seconds': 617.589614, 'test_accuracy': 0.76980000000000004}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 73, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2, 3, 1, 2, 0, 3, 1, 0, 2, 2, 0, 1, 3, 3, 1, 2, 0], 'train_time_seconds': 621.520654, 'test_accuracy': 0.77159999999999995}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}], 'index': 74, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2, 3, 1, 2, 0, 3, 1, 0, 2, 2, 0, 1, 3, 3, 1, 2, 0, 1, 0, 2, 3], 'train_time_seconds': 646.391962, 'test_accuracy': 0.7702}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 75, 'episode': 5, 'encoding': [1, 3, 2, 0], 'train_time_seconds': 378.526842, 'test_accuracy': 0.54700000000000004}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 76, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1], 'train_time_seconds': 613.117144, 'test_accuracy': 0.71630000000000005}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 77, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2], 'train_time_seconds': 672.673485, 'test_accuracy': 0.76419999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 78, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3], 'train_time_seconds': 697.167486, 'test_accuracy': 0.77470000000000006}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 79, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2], 'train_time_seconds': 732.365333, 'test_accuracy': 0.7802}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 80, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2], 'train_time_seconds': 763.005842, 'test_accuracy': 0.75790000000000002}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 81, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2], 'train_time_seconds': 792.734367, 'test_accuracy': 0.72540000000000004}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 82, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2], 'train_time_seconds': 831.112687, 'test_accuracy': 0.72389999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 83, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3], 'train_time_seconds': 842.719176, 'test_accuracy': 0.72230000000000005}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 84, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1], 'train_time_seconds': 863.49351, 'test_accuracy': 0.71289999999999998}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 85, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1, 0, 2, 3, 1], 'train_time_seconds': 896.333535, 'test_accuracy': 0.71760000000000002}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 86, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1, 0, 2, 3, 1, 1, 2, 0, 3], 'train_time_seconds': 938.671745, 'test_accuracy': 0.7087}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 87, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1, 0, 2, 3, 1, 1, 2, 0, 3, 1, 0, 3, 2], 'train_time_seconds': 966.307771, 'test_accuracy': 0.70109999999999995}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 88, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1, 0, 2, 3, 1, 1, 2, 0, 3, 1, 0, 3, 2, 2, 0, 1, 3], 'train_time_seconds': 982.092296, 'test_accuracy': 0.69510000000000005}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 89, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1, 0, 2, 3, 1, 1, 2, 0, 3, 1, 0, 3, 2, 2, 0, 1, 3, 0, 2, 3, 1], 'train_time_seconds': 1005.653968, 'test_accuracy': 0.70760000000000001}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 90, 'episode': 6, 'encoding': [1, 0, 3, 2], 'train_time_seconds': 217.36723, 'test_accuracy': 0.50649999999999995}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 91, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0], 'train_time_seconds': 325.730985, 'test_accuracy': 0.68720000000000003}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 92, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2], 'train_time_seconds': 354.765124, 'test_accuracy': 0.72430000000000005}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 93, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1], 'train_time_seconds': 383.179029, 'test_accuracy': 0.74270000000000003}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 94, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0], 'train_time_seconds': 422.943928, 'test_accuracy': 0.77510000000000001}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 95, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3], 'train_time_seconds': 446.665906, 'test_accuracy': 0.7581}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 96, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1], 'train_time_seconds': 467.661666, 'test_accuracy': 0.76160000000000005}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 97, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0], 'train_time_seconds': 494.685742, 'test_accuracy': 0.76100000000000001}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 98, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2], 'train_time_seconds': 525.112334, 'test_accuracy': 0.76529999999999998}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 99, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0], 'train_time_seconds': 547.659506, 'test_accuracy': 0.7581}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}], 'index': 100, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3], 'train_time_seconds': 583.304301, 'test_accuracy': 0.76359999999999995}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 101, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0], 'train_time_seconds': 603.572402, 'test_accuracy': 0.76339999999999997}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 102, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 2, 3, 1, 0], 'train_time_seconds': 623.686917, 'test_accuracy': 0.7591}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 103, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 2, 3, 1, 0, 1, 2, 3, 0], 'train_time_seconds': 656.305087, 'test_accuracy': 0.75380000000000003}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 104, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 2, 3, 1, 0, 1, 2, 3, 0, 3, 2, 1, 0], 'train_time_seconds': 685.639853, 'test_accuracy': 0.76439999999999997}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 105, 'episode': 7, 'encoding': [1, 3, 2, 0], 'train_time_seconds': 397.291285, 'test_accuracy': 0.53420000000000001}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 106, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0], 'train_time_seconds': 748.507339, 'test_accuracy': 0.73029999999999995}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 107, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1], 'train_time_seconds': 989.022638, 'test_accuracy': 0.76780000000000004}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 108, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1], 'train_time_seconds': 1276.368707, 'test_accuracy': 0.79220000000000002}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 109, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0], 'train_time_seconds': 1699.364921, 'test_accuracy': 0.80959999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 110, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0], 'train_time_seconds': 2111.088991, 'test_accuracy': 0.82550000000000001}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 111, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3], 'train_time_seconds': 2104.299741, 'test_accuracy': 0.83130000000000004}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 112, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3], 'train_time_seconds': 2132.377165, 'test_accuracy': 0.83069999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 113, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0], 'train_time_seconds': 2171.730766, 'test_accuracy': 0.82840000000000003}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 114, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1], 'train_time_seconds': 2206.168697, 'test_accuracy': 0.82630000000000003}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 115, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1, 0, 2, 1, 3], 'train_time_seconds': 2242.754186, 'test_accuracy': 0.82430000000000003}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 116, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1, 0, 2, 1, 3, 1, 3, 0, 2], 'train_time_seconds': 2274.455987, 'test_accuracy': 0.82630000000000003}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 117, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1, 0, 2, 1, 3, 1, 3, 0, 2, 3, 2, 0, 1], 'train_time_seconds': 2316.529541, 'test_accuracy': 0.82720000000000005}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 118, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1, 0, 2, 1, 3, 1, 3, 0, 2, 3, 2, 0, 1, 1, 0, 3, 2], 'train_time_seconds': 2379.46011, 'test_accuracy': 0.82069999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 119, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1, 0, 2, 1, 3, 1, 3, 0, 2, 3, 2, 0, 1, 1, 0, 3, 2, 3, 0, 2, 1], 'train_time_seconds': 2433.691472, 'test_accuracy': 0.82250000000000001}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 120, 'episode': 8, 'encoding': [1, 2, 0, 3], 'train_time_seconds': 161.413152, 'test_accuracy': 0.5978}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 121, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2], 'train_time_seconds': 185.344027, 'test_accuracy': 0.6431}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 122, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2], 'train_time_seconds': 215.021043, 'test_accuracy': 0.59589999999999999}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 123, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0], 'train_time_seconds': 245.733207, 'test_accuracy': 0.61529999999999996}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 124, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1], 'train_time_seconds': 264.548333, 'test_accuracy': 0.61990000000000001}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 125, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1], 'train_time_seconds': 285.328789, 'test_accuracy': 0.60960000000000003}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 126, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0], 'train_time_seconds': 319.425223, 'test_accuracy': 0.63100000000000001}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 127, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1], 'train_time_seconds': 335.917864, 'test_accuracy': 0.61739999999999995}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 128, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1], 'train_time_seconds': 358.294132, 'test_accuracy': 0.62070000000000003}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 129, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0], 'train_time_seconds': 388.465621, 'test_accuracy': 0.6089}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 130, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0, 2, 0, 3, 1], 'train_time_seconds': 409.902896, 'test_accuracy': 0.61370000000000002}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 131, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0, 2, 0, 3, 1, 1, 3, 0, 2], 'train_time_seconds': 443.674932, 'test_accuracy': 0.61609999999999998}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 132, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0, 2, 0, 3, 1, 1, 3, 0, 2, 2, 3, 0, 1], 'train_time_seconds': 488.961076, 'test_accuracy': 0.61170000000000002}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 133, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0, 2, 0, 3, 1, 1, 3, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0], 'train_time_seconds': 511.302676, 'test_accuracy': 0.61760000000000004}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 134, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0, 2, 0, 3, 1, 1, 3, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 0, 2, 1, 3], 'train_time_seconds': 530.143553, 'test_accuracy': 0.60750000000000004}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 135, 'episode': 9, 'encoding': [2, 0, 1, 3], 'train_time_seconds': 157.400615, 'test_accuracy': 0.53779999999999994}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 136, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2], 'train_time_seconds': 196.925042, 'test_accuracy': 0.61409999999999998}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 137, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1], 'train_time_seconds': 223.804903, 'test_accuracy': 0.64980000000000004}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 138, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0], 'train_time_seconds': 257.687301, 'test_accuracy': 0.67300000000000004}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 139, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0], 'train_time_seconds': 295.501348, 'test_accuracy': 0.67579999999999996}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 140, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2], 'train_time_seconds': 324.733899, 'test_accuracy': 0.67779999999999996}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 141, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0], 'train_time_seconds': 356.384986, 'test_accuracy': 0.68010000000000004}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 142, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2], 'train_time_seconds': 402.409268, 'test_accuracy': 0.67079999999999995}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 143, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0], 'train_time_seconds': 409.400216, 'test_accuracy': 0.67449999999999999}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 144, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3], 'train_time_seconds': 421.938602, 'test_accuracy': 0.67259999999999998}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 145, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3, 3, 0, 2, 1], 'train_time_seconds': 435.248074, 'test_accuracy': 0.68240000000000001}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 146, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3, 3, 0, 2, 1, 0, 1, 2, 3], 'train_time_seconds': 462.21662, 'test_accuracy': 0.67500000000000004}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 147, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3, 3, 0, 2, 1, 0, 1, 2, 3, 2, 3, 0, 1], 'train_time_seconds': 491.823731, 'test_accuracy': 0.67259999999999998}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 148, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3, 3, 0, 2, 1, 0, 1, 2, 3, 2, 3, 0, 1, 1, 3, 0, 2], 'train_time_seconds': 512.468166, 'test_accuracy': 0.6764}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 149, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3, 3, 0, 2, 1, 0, 1, 2, 3, 2, 3, 0, 1, 1, 3, 0, 2, 1, 2, 0, 3], 'train_time_seconds': 537.465466, 'test_accuracy': 0.66690000000000005}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 150, 'episode': 10, 'encoding': [0, 1, 3, 2], 'train_time_seconds': 204.35711, 'test_accuracy': 0.52669999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 151, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0], 'train_time_seconds': 324.407284, 'test_accuracy': 0.69799999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 152, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0], 'train_time_seconds': 445.498025, 'test_accuracy': 0.76629999999999998}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 153, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3], 'train_time_seconds': 473.396815, 'test_accuracy': 0.77300000000000002}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 154, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0], 'train_time_seconds': 518.905977, 'test_accuracy': 0.78359999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 155, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2], 'train_time_seconds': 548.873619, 'test_accuracy': 0.78849999999999998}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 156, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3], 'train_time_seconds': 574.437914, 'test_accuracy': 0.74019999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 157, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0], 'train_time_seconds': 607.126441, 'test_accuracy': 0.74209999999999998}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 158, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0], 'train_time_seconds': 633.15937, 'test_accuracy': 0.7379}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 159, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1], 'train_time_seconds': 666.399921, 'test_accuracy': 0.73819999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 160, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1, 2, 3, 0, 1], 'train_time_seconds': 690.871556, 'test_accuracy': 0.72729999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 161, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1, 2, 3, 0, 1, 1, 2, 3, 0], 'train_time_seconds': 730.167116, 'test_accuracy': 0.72819999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 162, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1, 2, 3, 0, 1, 1, 2, 3, 0, 1, 3, 0, 2], 'train_time_seconds': 754.783345, 'test_accuracy': 0.73229999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 163, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1, 2, 3, 0, 1, 1, 2, 3, 0, 1, 3, 0, 2, 1, 2, 0, 3], 'train_time_seconds': 785.892116, 'test_accuracy': 0.72750000000000004}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 164, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1, 2, 3, 0, 1, 1, 2, 3, 0, 1, 3, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1], 'train_time_seconds': 814.671564, 'test_accuracy': 0.73280000000000001}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 165, 'episode': 11, 'encoding': [2, 0, 1, 3], 'train_time_seconds': 157.271983, 'test_accuracy': 0.52690000000000003}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 166, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0], 'train_time_seconds': 233.474871, 'test_accuracy': 0.65869999999999995}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 167, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3], 'train_time_seconds': 262.682646, 'test_accuracy': 0.66420000000000001}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 168, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2], 'train_time_seconds': 297.093558, 'test_accuracy': 0.66069999999999995}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 169, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1], 'train_time_seconds': 325.904775, 'test_accuracy': 0.66359999999999997}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 170, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0], 'train_time_seconds': 355.178112, 'test_accuracy': 0.6724}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 171, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2], 'train_time_seconds': 391.736665, 'test_accuracy': 0.66679999999999995}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 172, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3], 'train_time_seconds': 439.901093, 'test_accuracy': 0.66990000000000005}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 173, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2], 'train_time_seconds': 456.230258, 'test_accuracy': 0.65820000000000001}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 174, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2], 'train_time_seconds': 496.393112, 'test_accuracy': 0.65529999999999999}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 175, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2, 2, 1, 3, 0], 'train_time_seconds': 530.433642, 'test_accuracy': 0.65849999999999997}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 176, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2, 2, 1, 3, 0, 2, 3, 0, 1], 'train_time_seconds': 559.024114, 'test_accuracy': 0.65629999999999999}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 177, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2, 2, 1, 3, 0, 2, 3, 0, 1, 1, 0, 3, 2], 'train_time_seconds': 596.622685, 'test_accuracy': 0.65110000000000001}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 178, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2, 2, 1, 3, 0, 2, 3, 0, 1, 1, 0, 3, 2, 1, 2, 0, 3], 'train_time_seconds': 616.373219, 'test_accuracy': 0.65580000000000005}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 179, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2, 2, 1, 3, 0, 2, 3, 0, 1, 1, 0, 3, 2, 1, 2, 0, 3, 0, 3, 2, 1], 'train_time_seconds': 676.854992, 'test_accuracy': 0.65059999999999996}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 180, 'episode': 12, 'encoding': [3, 2, 0, 1], 'train_time_seconds': 293.76242, 'test_accuracy': 0.55510000000000004}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 181, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1], 'train_time_seconds': 551.089466, 'test_accuracy': 0.69889999999999997}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 182, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0], 'train_time_seconds': 950.409513, 'test_accuracy': 0.75729999999999997}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 183, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2], 'train_time_seconds': 1036.382422, 'test_accuracy': 0.76900000000000002}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 184, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0], 'train_time_seconds': 1154.141058, 'test_accuracy': 0.81140000000000001}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 185, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0], 'train_time_seconds': 1269.286342, 'test_accuracy': 0.82820000000000005}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 186, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1], 'train_time_seconds': 1363.497621, 'test_accuracy': 0.83960000000000001}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 187, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3], 'train_time_seconds': 1403.803183, 'test_accuracy': 0.83540000000000003}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 188, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1], 'train_time_seconds': 1446.00596, 'test_accuracy': 0.84099999999999997}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 189, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2], 'train_time_seconds': 1507.046853, 'test_accuracy': 0.84509999999999996}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 190, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2, 0, 1, 3, 2], 'train_time_seconds': 1530.718416, 'test_accuracy': 0.84450000000000003}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 191, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2, 0, 1, 3, 2, 0, 3, 2, 1], 'train_time_seconds': 1558.745384, 'test_accuracy': 0.83979999999999999}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 192, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 0, 3], 'train_time_seconds': 1599.975824, 'test_accuracy': 0.84260000000000002}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 193, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 0, 3, 1, 3, 2, 0], 'train_time_seconds': 1650.997569, 'test_accuracy': 0.84060000000000001}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 194, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 0, 3, 1, 3, 2, 0, 1, 3, 2, 0], 'train_time_seconds': 1690.082677, 'test_accuracy': 0.83389999999999997}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 195, 'episode': 13, 'encoding': [3, 0, 2, 1], 'train_time_seconds': 365.873635, 'test_accuracy': 0.4556}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 196, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1], 'train_time_seconds': 598.482514, 'test_accuracy': 0.61229999999999996}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 197, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1], 'train_time_seconds': 842.344528, 'test_accuracy': 0.70999999999999996}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 198, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1], 'train_time_seconds': 1157.51381, 'test_accuracy': 0.75229999999999997}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 199, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1], 'train_time_seconds': 1424.06651, 'test_accuracy': 0.78280000000000005}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 200, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1], 'train_time_seconds': 1738.255843, 'test_accuracy': 0.79020000000000001}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 201, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0], 'train_time_seconds': 2140.066035, 'test_accuracy': 0.80230000000000001}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 202, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3], 'train_time_seconds': 2160.915993, 'test_accuracy': 0.81859999999999999}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 203, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1], 'train_time_seconds': 2207.766397, 'test_accuracy': 0.83160000000000001}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 204, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2], 'train_time_seconds': 2235.92257, 'test_accuracy': 0.82840000000000003}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 205, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2, 3, 1, 2, 0], 'train_time_seconds': 2272.867442, 'test_accuracy': 0.83360000000000001}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 206, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2, 3, 1, 2, 0, 1, 3, 2, 0], 'train_time_seconds': 2307.68152, 'test_accuracy': 0.83799999999999997}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 207, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2, 3, 1, 2, 0, 1, 3, 2, 0, 0, 1, 2, 3], 'train_time_seconds': 2328.187231, 'test_accuracy': 0.84199999999999997}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 208, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2, 3, 1, 2, 0, 1, 3, 2, 0, 0, 1, 2, 3, 2, 3, 0, 1], 'train_time_seconds': 2362.919202, 'test_accuracy': 0.83740000000000003}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 209, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2, 3, 1, 2, 0, 1, 3, 2, 0, 0, 1, 2, 3, 2, 3, 0, 1, 2, 3, 1, 0], 'train_time_seconds': 2384.74204, 'test_accuracy': 0.83199999999999996}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 210, 'episode': 14, 'encoding': [1, 0, 3, 2], 'train_time_seconds': 200.91298, 'test_accuracy': 0.50819999999999999}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 211, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3], 'train_time_seconds': 204.204818, 'test_accuracy': 0.60199999999999998}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 212, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2], 'train_time_seconds': 234.25001, 'test_accuracy': 0.59370000000000001}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 213, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1], 'train_time_seconds': 260.086691, 'test_accuracy': 0.60860000000000003}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 214, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0], 'train_time_seconds': 290.663732, 'test_accuracy': 0.625}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 215, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1], 'train_time_seconds': 314.332969, 'test_accuracy': 0.62939999999999996}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 216, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0], 'train_time_seconds': 337.433161, 'test_accuracy': 0.62570000000000003}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 217, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3], 'train_time_seconds': 363.36702, 'test_accuracy': 0.6169}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 218, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2], 'train_time_seconds': 388.91541, 'test_accuracy': 0.61760000000000004}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 219, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0], 'train_time_seconds': 416.198265, 'test_accuracy': 0.62660000000000005}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 220, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0, 1, 2, 3, 0], 'train_time_seconds': 437.925206, 'test_accuracy': 0.62260000000000004}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 221, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0, 1, 2, 3, 0, 2, 3, 1, 0], 'train_time_seconds': 458.853452, 'test_accuracy': 0.61209999999999998}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 222, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0, 1, 2, 3, 0, 2, 3, 1, 0, 1, 3, 0, 2], 'train_time_seconds': 479.228323, 'test_accuracy': 0.61339999999999995}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 223, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0, 1, 2, 3, 0, 2, 3, 1, 0, 1, 3, 0, 2, 3, 1, 0, 2], 'train_time_seconds': 498.58568, 'test_accuracy': 0.60960000000000003}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 224, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0, 1, 2, 3, 0, 2, 3, 1, 0, 1, 3, 0, 2, 3, 1, 0, 2, 3, 0, 2, 1], 'train_time_seconds': 519.7138, 'test_accuracy': 0.61019999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 225, 'episode': 15, 'encoding': [0, 1, 3, 2], 'train_time_seconds': 199.220851, 'test_accuracy': 0.52270000000000005}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 226, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0], 'train_time_seconds': 312.060704, 'test_accuracy': 0.70289999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 227, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0], 'train_time_seconds': 429.476669, 'test_accuracy': 0.7641}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 228, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2], 'train_time_seconds': 465.341865, 'test_accuracy': 0.77780000000000005}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 229, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3], 'train_time_seconds': 495.706224, 'test_accuracy': 0.77470000000000006}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 230, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0], 'train_time_seconds': 521.955509, 'test_accuracy': 0.78849999999999998}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 231, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1], 'train_time_seconds': 536.656378, 'test_accuracy': 0.77800000000000002}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 232, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0], 'train_time_seconds': 566.993774, 'test_accuracy': 0.78059999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 233, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2], 'train_time_seconds': 589.901111, 'test_accuracy': 0.78200000000000003}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 234, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 0, 3, 2], 'train_time_seconds': 621.67322, 'test_accuracy': 0.78049999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 235, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 0, 3, 2, 0, 3, 2, 1], 'train_time_seconds': 654.441952, 'test_accuracy': 0.77990000000000004}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 236, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 0, 3, 2, 0, 3, 2, 1, 3, 0, 2, 1], 'train_time_seconds': 680.37746, 'test_accuracy': 0.77690000000000003}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 237, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 0, 3, 2, 0, 3, 2, 1, 3, 0, 2, 1, 0, 1, 3, 2], 'train_time_seconds': 718.327948, 'test_accuracy': 0.78200000000000003}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 238, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 0, 3, 2, 0, 3, 2, 1, 3, 0, 2, 1, 0, 1, 3, 2, 2, 0, 3, 1], 'train_time_seconds': 739.12453, 'test_accuracy': 0.77170000000000005}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 239, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 0, 3, 2, 0, 3, 2, 1, 3, 0, 2, 1, 0, 1, 3, 2, 2, 0, 3, 1, 3, 2, 1, 0], 'train_time_seconds': 756.728983, 'test_accuracy': 0.78059999999999996}]
episode: 0
Traceback (most recent call last):
  File "experiment_cifar.py", line 252, in <module>
    main()
  File "experiment_cifar.py", line 20, in main
    run_experiment_finetuning()
  File "experiment_cifar.py", line 56, in run_experiment_finetuning
    assert(layer == len(replay['layers'])-1)
AssertionError
albert@albert-desktop:~/git/network_architecture_search$ python2 experiment_cifar.py
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally
[{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 0, 'episode': 0, 'encoding': [1, 3, 2, 0], 'train_time_seconds': 368.049252, 'test_accuracy': 0.54039999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 1, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2], 'train_time_seconds': 408.275522, 'test_accuracy': 0.70669999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 2, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1], 'train_time_seconds': 475.116003, 'test_accuracy': 0.74450000000000005}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 3, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0], 'train_time_seconds': 573.275197, 'test_accuracy': 0.78920000000000001}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 4, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3], 'train_time_seconds': 610.236321, 'test_accuracy': 0.7974}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}], 'index': 5, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3], 'train_time_seconds': 616.56595, 'test_accuracy': 0.76959999999999995}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 6, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2], 'train_time_seconds': 638.756012, 'test_accuracy': 0.71870000000000001}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 7, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3], 'train_time_seconds': 673.490203, 'test_accuracy': 0.71870000000000001}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 8, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0], 'train_time_seconds': 701.666276, 'test_accuracy': 0.72009999999999996}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 9, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2], 'train_time_seconds': 734.279322, 'test_accuracy': 0.71040000000000003}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 10, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2, 0, 2, 1, 3], 'train_time_seconds': 759.138101, 'test_accuracy': 0.71120000000000005}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 11, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2, 0, 2, 1, 3, 0, 2, 1, 3], 'train_time_seconds': 785.593478, 'test_accuracy': 0.7016}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 12, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2, 0, 2, 1, 3, 0, 2, 1, 3, 2, 0, 3, 1], 'train_time_seconds': 811.026095, 'test_accuracy': 0.70509999999999995}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 13, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2, 0, 2, 1, 3, 0, 2, 1, 3, 2, 0, 3, 1, 1, 0, 3, 2], 'train_time_seconds': 836.35241, 'test_accuracy': 0.70469999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 14, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2, 0, 2, 1, 3, 0, 2, 1, 3, 2, 0, 3, 1, 1, 0, 3, 2, 0, 3, 1, 2], 'train_time_seconds': 858.769875, 'test_accuracy': 0.69899999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 15, 'episode': 1, 'encoding': [0, 1, 2, 3], 'train_time_seconds': 150.175051, 'test_accuracy': 0.52459999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 16, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1], 'train_time_seconds': 189.038294, 'test_accuracy': 0.61439999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 17, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1], 'train_time_seconds': 250.080138, 'test_accuracy': 0.68889999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 18, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1], 'train_time_seconds': 288.146287, 'test_accuracy': 0.70369999999999999}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 19, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3], 'train_time_seconds': 310.580743, 'test_accuracy': 0.67169999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 20, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0], 'train_time_seconds': 341.077389, 'test_accuracy': 0.69030000000000002}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 21, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2], 'train_time_seconds': 369.405306, 'test_accuracy': 0.69579999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 22, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1], 'train_time_seconds': 397.396746, 'test_accuracy': 0.69259999999999999}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 23, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0], 'train_time_seconds': 423.511957, 'test_accuracy': 0.6865}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 24, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0], 'train_time_seconds': 446.028381, 'test_accuracy': 0.69640000000000002}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 25, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0, 3, 2, 1, 0], 'train_time_seconds': 473.146224, 'test_accuracy': 0.69279999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 26, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0, 3, 2, 1, 0, 0, 3, 2, 1], 'train_time_seconds': 495.503059, 'test_accuracy': 0.6875}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 27, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0, 3, 2, 1, 0, 0, 3, 2, 1, 3, 0, 1, 2], 'train_time_seconds': 519.678454, 'test_accuracy': 0.69220000000000004}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 28, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0, 3, 2, 1, 0, 0, 3, 2, 1, 3, 0, 1, 2, 2, 3, 1, 0], 'train_time_seconds': 542.799009, 'test_accuracy': 0.69099999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 29, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0, 3, 2, 1, 0, 0, 3, 2, 1, 3, 0, 1, 2, 2, 3, 1, 0, 0, 1, 2, 3], 'train_time_seconds': 565.664945, 'test_accuracy': 0.68340000000000001}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 30, 'episode': 2, 'encoding': [3, 0, 2, 1], 'train_time_seconds': 363.186491, 'test_accuracy': 0.46729999999999999}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 31, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0], 'train_time_seconds': 734.629674, 'test_accuracy': 0.68469999999999998}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 32, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3], 'train_time_seconds': 755.385455, 'test_accuracy': 0.73999999999999999}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 33, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2], 'train_time_seconds': 790.358784, 'test_accuracy': 0.73740000000000006}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 34, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3], 'train_time_seconds': 818.245828, 'test_accuracy': 0.73909999999999998}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 35, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0], 'train_time_seconds': 850.62952, 'test_accuracy': 0.7429}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 36, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0], 'train_time_seconds': 878.000302, 'test_accuracy': 0.75749999999999995}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 37, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0], 'train_time_seconds': 910.815702, 'test_accuracy': 0.76060000000000005}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 38, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0], 'train_time_seconds': 932.361959, 'test_accuracy': 0.75309999999999999}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 39, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2], 'train_time_seconds': 971.975253, 'test_accuracy': 0.74570000000000003}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 40, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1], 'train_time_seconds': 991.470465, 'test_accuracy': 0.74160000000000004}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 41, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 0, 2, 3, 1], 'train_time_seconds': 1013.129267, 'test_accuracy': 0.73560000000000003}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 42, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 0, 2, 3, 1, 1, 2, 3, 0], 'train_time_seconds': 1039.030533, 'test_accuracy': 0.73950000000000005}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 43, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 0, 2, 3, 1, 1, 2, 3, 0, 2, 0, 3, 1], 'train_time_seconds': 1061.343818, 'test_accuracy': 0.73560000000000003}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 44, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 0, 2, 3, 1, 1, 2, 3, 0, 2, 0, 3, 1, 1, 0, 3, 2], 'train_time_seconds': 1090.086285, 'test_accuracy': 0.7359}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 45, 'episode': 3, 'encoding': [0, 1, 2, 3], 'train_time_seconds': 154.492417, 'test_accuracy': 0.52590000000000003}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 46, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2], 'train_time_seconds': 177.56699, 'test_accuracy': 0.59079999999999999}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 47, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0], 'train_time_seconds': 216.361385, 'test_accuracy': 0.64070000000000005}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 48, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3], 'train_time_seconds': 244.415507, 'test_accuracy': 0.6482}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 49, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3], 'train_time_seconds': 271.270051, 'test_accuracy': 0.64049999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 50, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3], 'train_time_seconds': 293.775519, 'test_accuracy': 0.64200000000000002}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 51, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2], 'train_time_seconds': 321.128231, 'test_accuracy': 0.63749999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 52, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0], 'train_time_seconds': 350.131566, 'test_accuracy': 0.64039999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 53, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1], 'train_time_seconds': 379.47718, 'test_accuracy': 0.6351}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 54, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3], 'train_time_seconds': 402.270577, 'test_accuracy': 0.62239999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 55, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3, 0, 2, 3, 1], 'train_time_seconds': 422.82807, 'test_accuracy': 0.627}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 56, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3, 0, 2, 3, 1, 3, 2, 0, 1], 'train_time_seconds': 440.262341, 'test_accuracy': 0.63019999999999998}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 57, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3, 0, 2, 3, 1, 3, 2, 0, 1, 3, 2, 1, 0], 'train_time_seconds': 465.008078, 'test_accuracy': 0.62660000000000005}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 58, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3, 0, 2, 3, 1, 3, 2, 0, 1, 3, 2, 1, 0, 1, 2, 0, 3], 'train_time_seconds': 487.055249, 'test_accuracy': 0.62949999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 59, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3, 0, 2, 3, 1, 3, 2, 0, 1, 3, 2, 1, 0, 1, 2, 0, 3, 1, 0, 3, 2], 'train_time_seconds': 513.123642, 'test_accuracy': 0.62309999999999999}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 60, 'episode': 4, 'encoding': [2, 3, 0, 1], 'train_time_seconds': 267.085217, 'test_accuracy': 0.54620000000000002}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 61, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3], 'train_time_seconds': 284.421141, 'test_accuracy': 0.68279999999999996}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 62, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0], 'train_time_seconds': 338.823722, 'test_accuracy': 0.75360000000000005}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 63, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2], 'train_time_seconds': 364.37943, 'test_accuracy': 0.77049999999999996}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 64, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1], 'train_time_seconds': 395.799564, 'test_accuracy': 0.76759999999999995}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 65, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1], 'train_time_seconds': 428.267988, 'test_accuracy': 0.7681}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 66, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3], 'train_time_seconds': 449.424833, 'test_accuracy': 0.78010000000000002}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 67, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3], 'train_time_seconds': 475.862533, 'test_accuracy': 0.77280000000000004}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 68, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3], 'train_time_seconds': 502.726014, 'test_accuracy': 0.77569999999999995}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 69, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2], 'train_time_seconds': 524.395997, 'test_accuracy': 0.76919999999999999}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 70, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2, 3, 1, 2, 0], 'train_time_seconds': 550.039473, 'test_accuracy': 0.77190000000000003}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 71, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2, 3, 1, 2, 0, 3, 1, 0, 2], 'train_time_seconds': 580.835388, 'test_accuracy': 0.76659999999999995}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 72, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2, 3, 1, 2, 0, 3, 1, 0, 2, 2, 0, 1, 3], 'train_time_seconds': 617.589614, 'test_accuracy': 0.76980000000000004}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 73, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2, 3, 1, 2, 0, 3, 1, 0, 2, 2, 0, 1, 3, 3, 1, 2, 0], 'train_time_seconds': 621.520654, 'test_accuracy': 0.77159999999999995}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}], 'index': 74, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2, 3, 1, 2, 0, 3, 1, 0, 2, 2, 0, 1, 3, 3, 1, 2, 0, 1, 0, 2, 3], 'train_time_seconds': 646.391962, 'test_accuracy': 0.7702}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 75, 'episode': 5, 'encoding': [1, 3, 2, 0], 'train_time_seconds': 378.526842, 'test_accuracy': 0.54700000000000004}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 76, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1], 'train_time_seconds': 613.117144, 'test_accuracy': 0.71630000000000005}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 77, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2], 'train_time_seconds': 672.673485, 'test_accuracy': 0.76419999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 78, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3], 'train_time_seconds': 697.167486, 'test_accuracy': 0.77470000000000006}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 79, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2], 'train_time_seconds': 732.365333, 'test_accuracy': 0.7802}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 80, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2], 'train_time_seconds': 763.005842, 'test_accuracy': 0.75790000000000002}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 81, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2], 'train_time_seconds': 792.734367, 'test_accuracy': 0.72540000000000004}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 82, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2], 'train_time_seconds': 831.112687, 'test_accuracy': 0.72389999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 83, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3], 'train_time_seconds': 842.719176, 'test_accuracy': 0.72230000000000005}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 84, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1], 'train_time_seconds': 863.49351, 'test_accuracy': 0.71289999999999998}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 85, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1, 0, 2, 3, 1], 'train_time_seconds': 896.333535, 'test_accuracy': 0.71760000000000002}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 86, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1, 0, 2, 3, 1, 1, 2, 0, 3], 'train_time_seconds': 938.671745, 'test_accuracy': 0.7087}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 87, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1, 0, 2, 3, 1, 1, 2, 0, 3, 1, 0, 3, 2], 'train_time_seconds': 966.307771, 'test_accuracy': 0.70109999999999995}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 88, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1, 0, 2, 3, 1, 1, 2, 0, 3, 1, 0, 3, 2, 2, 0, 1, 3], 'train_time_seconds': 982.092296, 'test_accuracy': 0.69510000000000005}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 89, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1, 0, 2, 3, 1, 1, 2, 0, 3, 1, 0, 3, 2, 2, 0, 1, 3, 0, 2, 3, 1], 'train_time_seconds': 1005.653968, 'test_accuracy': 0.70760000000000001}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 90, 'episode': 6, 'encoding': [1, 0, 3, 2], 'train_time_seconds': 217.36723, 'test_accuracy': 0.50649999999999995}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 91, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0], 'train_time_seconds': 325.730985, 'test_accuracy': 0.68720000000000003}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 92, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2], 'train_time_seconds': 354.765124, 'test_accuracy': 0.72430000000000005}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 93, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1], 'train_time_seconds': 383.179029, 'test_accuracy': 0.74270000000000003}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 94, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0], 'train_time_seconds': 422.943928, 'test_accuracy': 0.77510000000000001}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 95, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3], 'train_time_seconds': 446.665906, 'test_accuracy': 0.7581}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 96, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1], 'train_time_seconds': 467.661666, 'test_accuracy': 0.76160000000000005}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 97, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0], 'train_time_seconds': 494.685742, 'test_accuracy': 0.76100000000000001}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 98, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2], 'train_time_seconds': 525.112334, 'test_accuracy': 0.76529999999999998}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 99, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0], 'train_time_seconds': 547.659506, 'test_accuracy': 0.7581}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}], 'index': 100, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3], 'train_time_seconds': 583.304301, 'test_accuracy': 0.76359999999999995}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 101, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0], 'train_time_seconds': 603.572402, 'test_accuracy': 0.76339999999999997}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 102, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 2, 3, 1, 0], 'train_time_seconds': 623.686917, 'test_accuracy': 0.7591}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 103, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 2, 3, 1, 0, 1, 2, 3, 0], 'train_time_seconds': 656.305087, 'test_accuracy': 0.75380000000000003}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 104, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 2, 3, 1, 0, 1, 2, 3, 0, 3, 2, 1, 0], 'train_time_seconds': 685.639853, 'test_accuracy': 0.76439999999999997}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 105, 'episode': 7, 'encoding': [1, 3, 2, 0], 'train_time_seconds': 397.291285, 'test_accuracy': 0.53420000000000001}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 106, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0], 'train_time_seconds': 748.507339, 'test_accuracy': 0.73029999999999995}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 107, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1], 'train_time_seconds': 989.022638, 'test_accuracy': 0.76780000000000004}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 108, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1], 'train_time_seconds': 1276.368707, 'test_accuracy': 0.79220000000000002}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 109, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0], 'train_time_seconds': 1699.364921, 'test_accuracy': 0.80959999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 110, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0], 'train_time_seconds': 2111.088991, 'test_accuracy': 0.82550000000000001}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 111, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3], 'train_time_seconds': 2104.299741, 'test_accuracy': 0.83130000000000004}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 112, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3], 'train_time_seconds': 2132.377165, 'test_accuracy': 0.83069999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 113, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0], 'train_time_seconds': 2171.730766, 'test_accuracy': 0.82840000000000003}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 114, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1], 'train_time_seconds': 2206.168697, 'test_accuracy': 0.82630000000000003}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 115, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1, 0, 2, 1, 3], 'train_time_seconds': 2242.754186, 'test_accuracy': 0.82430000000000003}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 116, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1, 0, 2, 1, 3, 1, 3, 0, 2], 'train_time_seconds': 2274.455987, 'test_accuracy': 0.82630000000000003}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 117, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1, 0, 2, 1, 3, 1, 3, 0, 2, 3, 2, 0, 1], 'train_time_seconds': 2316.529541, 'test_accuracy': 0.82720000000000005}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 118, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1, 0, 2, 1, 3, 1, 3, 0, 2, 3, 2, 0, 1, 1, 0, 3, 2], 'train_time_seconds': 2379.46011, 'test_accuracy': 0.82069999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 119, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1, 0, 2, 1, 3, 1, 3, 0, 2, 3, 2, 0, 1, 1, 0, 3, 2, 3, 0, 2, 1], 'train_time_seconds': 2433.691472, 'test_accuracy': 0.82250000000000001}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 120, 'episode': 8, 'encoding': [1, 2, 0, 3], 'train_time_seconds': 161.413152, 'test_accuracy': 0.5978}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 121, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2], 'train_time_seconds': 185.344027, 'test_accuracy': 0.6431}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 122, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2], 'train_time_seconds': 215.021043, 'test_accuracy': 0.59589999999999999}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 123, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0], 'train_time_seconds': 245.733207, 'test_accuracy': 0.61529999999999996}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 124, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1], 'train_time_seconds': 264.548333, 'test_accuracy': 0.61990000000000001}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 125, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1], 'train_time_seconds': 285.328789, 'test_accuracy': 0.60960000000000003}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 126, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0], 'train_time_seconds': 319.425223, 'test_accuracy': 0.63100000000000001}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 127, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1], 'train_time_seconds': 335.917864, 'test_accuracy': 0.61739999999999995}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 128, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1], 'train_time_seconds': 358.294132, 'test_accuracy': 0.62070000000000003}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 129, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0], 'train_time_seconds': 388.465621, 'test_accuracy': 0.6089}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 130, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0, 2, 0, 3, 1], 'train_time_seconds': 409.902896, 'test_accuracy': 0.61370000000000002}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 131, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0, 2, 0, 3, 1, 1, 3, 0, 2], 'train_time_seconds': 443.674932, 'test_accuracy': 0.61609999999999998}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 132, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0, 2, 0, 3, 1, 1, 3, 0, 2, 2, 3, 0, 1], 'train_time_seconds': 488.961076, 'test_accuracy': 0.61170000000000002}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 133, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0, 2, 0, 3, 1, 1, 3, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0], 'train_time_seconds': 511.302676, 'test_accuracy': 0.61760000000000004}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 134, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0, 2, 0, 3, 1, 1, 3, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 0, 2, 1, 3], 'train_time_seconds': 530.143553, 'test_accuracy': 0.60750000000000004}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 135, 'episode': 9, 'encoding': [2, 0, 1, 3], 'train_time_seconds': 157.400615, 'test_accuracy': 0.53779999999999994}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 136, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2], 'train_time_seconds': 196.925042, 'test_accuracy': 0.61409999999999998}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 137, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1], 'train_time_seconds': 223.804903, 'test_accuracy': 0.64980000000000004}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 138, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0], 'train_time_seconds': 257.687301, 'test_accuracy': 0.67300000000000004}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 139, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0], 'train_time_seconds': 295.501348, 'test_accuracy': 0.67579999999999996}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 140, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2], 'train_time_seconds': 324.733899, 'test_accuracy': 0.67779999999999996}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 141, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0], 'train_time_seconds': 356.384986, 'test_accuracy': 0.68010000000000004}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 142, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2], 'train_time_seconds': 402.409268, 'test_accuracy': 0.67079999999999995}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 143, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0], 'train_time_seconds': 409.400216, 'test_accuracy': 0.67449999999999999}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 144, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3], 'train_time_seconds': 421.938602, 'test_accuracy': 0.67259999999999998}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 145, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3, 3, 0, 2, 1], 'train_time_seconds': 435.248074, 'test_accuracy': 0.68240000000000001}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 146, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3, 3, 0, 2, 1, 0, 1, 2, 3], 'train_time_seconds': 462.21662, 'test_accuracy': 0.67500000000000004}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 147, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3, 3, 0, 2, 1, 0, 1, 2, 3, 2, 3, 0, 1], 'train_time_seconds': 491.823731, 'test_accuracy': 0.67259999999999998}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 148, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3, 3, 0, 2, 1, 0, 1, 2, 3, 2, 3, 0, 1, 1, 3, 0, 2], 'train_time_seconds': 512.468166, 'test_accuracy': 0.6764}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 149, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3, 3, 0, 2, 1, 0, 1, 2, 3, 2, 3, 0, 1, 1, 3, 0, 2, 1, 2, 0, 3], 'train_time_seconds': 537.465466, 'test_accuracy': 0.66690000000000005}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 150, 'episode': 10, 'encoding': [0, 1, 3, 2], 'train_time_seconds': 204.35711, 'test_accuracy': 0.52669999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 151, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0], 'train_time_seconds': 324.407284, 'test_accuracy': 0.69799999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 152, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0], 'train_time_seconds': 445.498025, 'test_accuracy': 0.76629999999999998}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 153, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3], 'train_time_seconds': 473.396815, 'test_accuracy': 0.77300000000000002}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 154, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0], 'train_time_seconds': 518.905977, 'test_accuracy': 0.78359999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 155, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2], 'train_time_seconds': 548.873619, 'test_accuracy': 0.78849999999999998}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 156, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3], 'train_time_seconds': 574.437914, 'test_accuracy': 0.74019999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 157, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0], 'train_time_seconds': 607.126441, 'test_accuracy': 0.74209999999999998}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 158, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0], 'train_time_seconds': 633.15937, 'test_accuracy': 0.7379}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 159, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1], 'train_time_seconds': 666.399921, 'test_accuracy': 0.73819999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 160, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1, 2, 3, 0, 1], 'train_time_seconds': 690.871556, 'test_accuracy': 0.72729999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 161, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1, 2, 3, 0, 1, 1, 2, 3, 0], 'train_time_seconds': 730.167116, 'test_accuracy': 0.72819999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 162, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1, 2, 3, 0, 1, 1, 2, 3, 0, 1, 3, 0, 2], 'train_time_seconds': 754.783345, 'test_accuracy': 0.73229999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 163, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1, 2, 3, 0, 1, 1, 2, 3, 0, 1, 3, 0, 2, 1, 2, 0, 3], 'train_time_seconds': 785.892116, 'test_accuracy': 0.72750000000000004}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 164, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1, 2, 3, 0, 1, 1, 2, 3, 0, 1, 3, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1], 'train_time_seconds': 814.671564, 'test_accuracy': 0.73280000000000001}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 165, 'episode': 11, 'encoding': [2, 0, 1, 3], 'train_time_seconds': 157.271983, 'test_accuracy': 0.52690000000000003}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 166, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0], 'train_time_seconds': 233.474871, 'test_accuracy': 0.65869999999999995}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 167, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3], 'train_time_seconds': 262.682646, 'test_accuracy': 0.66420000000000001}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 168, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2], 'train_time_seconds': 297.093558, 'test_accuracy': 0.66069999999999995}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 169, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1], 'train_time_seconds': 325.904775, 'test_accuracy': 0.66359999999999997}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 170, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0], 'train_time_seconds': 355.178112, 'test_accuracy': 0.6724}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 171, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2], 'train_time_seconds': 391.736665, 'test_accuracy': 0.66679999999999995}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 172, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3], 'train_time_seconds': 439.901093, 'test_accuracy': 0.66990000000000005}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 173, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2], 'train_time_seconds': 456.230258, 'test_accuracy': 0.65820000000000001}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 174, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2], 'train_time_seconds': 496.393112, 'test_accuracy': 0.65529999999999999}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 175, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2, 2, 1, 3, 0], 'train_time_seconds': 530.433642, 'test_accuracy': 0.65849999999999997}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 176, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2, 2, 1, 3, 0, 2, 3, 0, 1], 'train_time_seconds': 559.024114, 'test_accuracy': 0.65629999999999999}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 177, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2, 2, 1, 3, 0, 2, 3, 0, 1, 1, 0, 3, 2], 'train_time_seconds': 596.622685, 'test_accuracy': 0.65110000000000001}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 178, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2, 2, 1, 3, 0, 2, 3, 0, 1, 1, 0, 3, 2, 1, 2, 0, 3], 'train_time_seconds': 616.373219, 'test_accuracy': 0.65580000000000005}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 179, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2, 2, 1, 3, 0, 2, 3, 0, 1, 1, 0, 3, 2, 1, 2, 0, 3, 0, 3, 2, 1], 'train_time_seconds': 676.854992, 'test_accuracy': 0.65059999999999996}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 180, 'episode': 12, 'encoding': [3, 2, 0, 1], 'train_time_seconds': 293.76242, 'test_accuracy': 0.55510000000000004}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 181, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1], 'train_time_seconds': 551.089466, 'test_accuracy': 0.69889999999999997}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 182, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0], 'train_time_seconds': 950.409513, 'test_accuracy': 0.75729999999999997}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 183, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2], 'train_time_seconds': 1036.382422, 'test_accuracy': 0.76900000000000002}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 184, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0], 'train_time_seconds': 1154.141058, 'test_accuracy': 0.81140000000000001}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 185, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0], 'train_time_seconds': 1269.286342, 'test_accuracy': 0.82820000000000005}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 186, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1], 'train_time_seconds': 1363.497621, 'test_accuracy': 0.83960000000000001}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 187, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3], 'train_time_seconds': 1403.803183, 'test_accuracy': 0.83540000000000003}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 188, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1], 'train_time_seconds': 1446.00596, 'test_accuracy': 0.84099999999999997}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 189, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2], 'train_time_seconds': 1507.046853, 'test_accuracy': 0.84509999999999996}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 190, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2, 0, 1, 3, 2], 'train_time_seconds': 1530.718416, 'test_accuracy': 0.84450000000000003}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 191, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2, 0, 1, 3, 2, 0, 3, 2, 1], 'train_time_seconds': 1558.745384, 'test_accuracy': 0.83979999999999999}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 192, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 0, 3], 'train_time_seconds': 1599.975824, 'test_accuracy': 0.84260000000000002}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 193, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 0, 3, 1, 3, 2, 0], 'train_time_seconds': 1650.997569, 'test_accuracy': 0.84060000000000001}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 194, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 0, 3, 1, 3, 2, 0, 1, 3, 2, 0], 'train_time_seconds': 1690.082677, 'test_accuracy': 0.83389999999999997}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 195, 'episode': 13, 'encoding': [3, 0, 2, 1], 'train_time_seconds': 365.873635, 'test_accuracy': 0.4556}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 196, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1], 'train_time_seconds': 598.482514, 'test_accuracy': 0.61229999999999996}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 197, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1], 'train_time_seconds': 842.344528, 'test_accuracy': 0.70999999999999996}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 198, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1], 'train_time_seconds': 1157.51381, 'test_accuracy': 0.75229999999999997}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 199, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1], 'train_time_seconds': 1424.06651, 'test_accuracy': 0.78280000000000005}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 200, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1], 'train_time_seconds': 1738.255843, 'test_accuracy': 0.79020000000000001}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 201, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0], 'train_time_seconds': 2140.066035, 'test_accuracy': 0.80230000000000001}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 202, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3], 'train_time_seconds': 2160.915993, 'test_accuracy': 0.81859999999999999}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 203, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1], 'train_time_seconds': 2207.766397, 'test_accuracy': 0.83160000000000001}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 204, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2], 'train_time_seconds': 2235.92257, 'test_accuracy': 0.82840000000000003}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 205, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2, 3, 1, 2, 0], 'train_time_seconds': 2272.867442, 'test_accuracy': 0.83360000000000001}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 206, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2, 3, 1, 2, 0, 1, 3, 2, 0], 'train_time_seconds': 2307.68152, 'test_accuracy': 0.83799999999999997}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 207, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2, 3, 1, 2, 0, 1, 3, 2, 0, 0, 1, 2, 3], 'train_time_seconds': 2328.187231, 'test_accuracy': 0.84199999999999997}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 208, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2, 3, 1, 2, 0, 1, 3, 2, 0, 0, 1, 2, 3, 2, 3, 0, 1], 'train_time_seconds': 2362.919202, 'test_accuracy': 0.83740000000000003}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 209, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2, 3, 1, 2, 0, 1, 3, 2, 0, 0, 1, 2, 3, 2, 3, 0, 1, 2, 3, 1, 0], 'train_time_seconds': 2384.74204, 'test_accuracy': 0.83199999999999996}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 210, 'episode': 14, 'encoding': [1, 0, 3, 2], 'train_time_seconds': 200.91298, 'test_accuracy': 0.50819999999999999}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 211, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3], 'train_time_seconds': 204.204818, 'test_accuracy': 0.60199999999999998}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 212, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2], 'train_time_seconds': 234.25001, 'test_accuracy': 0.59370000000000001}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 213, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1], 'train_time_seconds': 260.086691, 'test_accuracy': 0.60860000000000003}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 214, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0], 'train_time_seconds': 290.663732, 'test_accuracy': 0.625}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 215, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1], 'train_time_seconds': 314.332969, 'test_accuracy': 0.62939999999999996}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 216, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0], 'train_time_seconds': 337.433161, 'test_accuracy': 0.62570000000000003}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 217, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3], 'train_time_seconds': 363.36702, 'test_accuracy': 0.6169}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 218, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2], 'train_time_seconds': 388.91541, 'test_accuracy': 0.61760000000000004}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 219, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0], 'train_time_seconds': 416.198265, 'test_accuracy': 0.62660000000000005}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 220, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0, 1, 2, 3, 0], 'train_time_seconds': 437.925206, 'test_accuracy': 0.62260000000000004}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 221, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0, 1, 2, 3, 0, 2, 3, 1, 0], 'train_time_seconds': 458.853452, 'test_accuracy': 0.61209999999999998}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 222, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0, 1, 2, 3, 0, 2, 3, 1, 0, 1, 3, 0, 2], 'train_time_seconds': 479.228323, 'test_accuracy': 0.61339999999999995}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 223, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0, 1, 2, 3, 0, 2, 3, 1, 0, 1, 3, 0, 2, 3, 1, 0, 2], 'train_time_seconds': 498.58568, 'test_accuracy': 0.60960000000000003}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 224, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0, 1, 2, 3, 0, 2, 3, 1, 0, 1, 3, 0, 2, 3, 1, 0, 2, 3, 0, 2, 1], 'train_time_seconds': 519.7138, 'test_accuracy': 0.61019999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 225, 'episode': 15, 'encoding': [0, 1, 3, 2], 'train_time_seconds': 199.220851, 'test_accuracy': 0.52270000000000005}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 226, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0], 'train_time_seconds': 312.060704, 'test_accuracy': 0.70289999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 227, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0], 'train_time_seconds': 429.476669, 'test_accuracy': 0.7641}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 228, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2], 'train_time_seconds': 465.341865, 'test_accuracy': 0.77780000000000005}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 229, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3], 'train_time_seconds': 495.706224, 'test_accuracy': 0.77470000000000006}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 230, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0], 'train_time_seconds': 521.955509, 'test_accuracy': 0.78849999999999998}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 231, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1], 'train_time_seconds': 536.656378, 'test_accuracy': 0.77800000000000002}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 232, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0], 'train_time_seconds': 566.993774, 'test_accuracy': 0.78059999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 233, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2], 'train_time_seconds': 589.901111, 'test_accuracy': 0.78200000000000003}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 234, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 0, 3, 2], 'train_time_seconds': 621.67322, 'test_accuracy': 0.78049999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 235, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 0, 3, 2, 0, 3, 2, 1], 'train_time_seconds': 654.441952, 'test_accuracy': 0.77990000000000004}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 236, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 0, 3, 2, 0, 3, 2, 1, 3, 0, 2, 1], 'train_time_seconds': 680.37746, 'test_accuracy': 0.77690000000000003}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 237, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 0, 3, 2, 0, 3, 2, 1, 3, 0, 2, 1, 0, 1, 3, 2], 'train_time_seconds': 718.327948, 'test_accuracy': 0.78200000000000003}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 238, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 0, 3, 2, 0, 3, 2, 1, 3, 0, 2, 1, 0, 1, 3, 2, 2, 0, 3, 1], 'train_time_seconds': 739.12453, 'test_accuracy': 0.77170000000000005}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 239, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 0, 3, 2, 0, 3, 2, 1, 3, 0, 2, 1, 0, 1, 3, 2, 2, 0, 3, 1, 3, 2, 1, 0], 'train_time_seconds': 756.728983, 'test_accuracy': 0.78059999999999996}]
episode: 0
0
1
Traceback (most recent call last):
  File "experiment_cifar.py", line 253, in <module>
    main()
  File "experiment_cifar.py", line 20, in main
    run_experiment_finetuning()
  File "experiment_cifar.py", line 57, in run_experiment_finetuning
    assert(layer == len(replay['layers'])-1)
AssertionError
albert@albert-desktop:~/git/network_architecture_search$ python2 experiment_cifar.py
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally
[{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 0, 'episode': 0, 'encoding': [1, 3, 2, 0], 'train_time_seconds': 368.049252, 'test_accuracy': 0.54039999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 1, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2], 'train_time_seconds': 408.275522, 'test_accuracy': 0.70669999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 2, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1], 'train_time_seconds': 475.116003, 'test_accuracy': 0.74450000000000005}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 3, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0], 'train_time_seconds': 573.275197, 'test_accuracy': 0.78920000000000001}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 4, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3], 'train_time_seconds': 610.236321, 'test_accuracy': 0.7974}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}], 'index': 5, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3], 'train_time_seconds': 616.56595, 'test_accuracy': 0.76959999999999995}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 6, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2], 'train_time_seconds': 638.756012, 'test_accuracy': 0.71870000000000001}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 7, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3], 'train_time_seconds': 673.490203, 'test_accuracy': 0.71870000000000001}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 8, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0], 'train_time_seconds': 701.666276, 'test_accuracy': 0.72009999999999996}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 9, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2], 'train_time_seconds': 734.279322, 'test_accuracy': 0.71040000000000003}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 10, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2, 0, 2, 1, 3], 'train_time_seconds': 759.138101, 'test_accuracy': 0.71120000000000005}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 11, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2, 0, 2, 1, 3, 0, 2, 1, 3], 'train_time_seconds': 785.593478, 'test_accuracy': 0.7016}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 12, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2, 0, 2, 1, 3, 0, 2, 1, 3, 2, 0, 3, 1], 'train_time_seconds': 811.026095, 'test_accuracy': 0.70509999999999995}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 13, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2, 0, 2, 1, 3, 0, 2, 1, 3, 2, 0, 3, 1, 1, 0, 3, 2], 'train_time_seconds': 836.35241, 'test_accuracy': 0.70469999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 14, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2, 0, 2, 1, 3, 0, 2, 1, 3, 2, 0, 3, 1, 1, 0, 3, 2, 0, 3, 1, 2], 'train_time_seconds': 858.769875, 'test_accuracy': 0.69899999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 15, 'episode': 1, 'encoding': [0, 1, 2, 3], 'train_time_seconds': 150.175051, 'test_accuracy': 0.52459999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 16, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1], 'train_time_seconds': 189.038294, 'test_accuracy': 0.61439999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 17, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1], 'train_time_seconds': 250.080138, 'test_accuracy': 0.68889999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 18, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1], 'train_time_seconds': 288.146287, 'test_accuracy': 0.70369999999999999}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 19, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3], 'train_time_seconds': 310.580743, 'test_accuracy': 0.67169999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 20, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0], 'train_time_seconds': 341.077389, 'test_accuracy': 0.69030000000000002}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 21, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2], 'train_time_seconds': 369.405306, 'test_accuracy': 0.69579999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 22, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1], 'train_time_seconds': 397.396746, 'test_accuracy': 0.69259999999999999}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 23, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0], 'train_time_seconds': 423.511957, 'test_accuracy': 0.6865}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 24, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0], 'train_time_seconds': 446.028381, 'test_accuracy': 0.69640000000000002}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 25, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0, 3, 2, 1, 0], 'train_time_seconds': 473.146224, 'test_accuracy': 0.69279999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 26, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0, 3, 2, 1, 0, 0, 3, 2, 1], 'train_time_seconds': 495.503059, 'test_accuracy': 0.6875}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 27, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0, 3, 2, 1, 0, 0, 3, 2, 1, 3, 0, 1, 2], 'train_time_seconds': 519.678454, 'test_accuracy': 0.69220000000000004}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 28, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0, 3, 2, 1, 0, 0, 3, 2, 1, 3, 0, 1, 2, 2, 3, 1, 0], 'train_time_seconds': 542.799009, 'test_accuracy': 0.69099999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 29, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0, 3, 2, 1, 0, 0, 3, 2, 1, 3, 0, 1, 2, 2, 3, 1, 0, 0, 1, 2, 3], 'train_time_seconds': 565.664945, 'test_accuracy': 0.68340000000000001}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 30, 'episode': 2, 'encoding': [3, 0, 2, 1], 'train_time_seconds': 363.186491, 'test_accuracy': 0.46729999999999999}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 31, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0], 'train_time_seconds': 734.629674, 'test_accuracy': 0.68469999999999998}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 32, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3], 'train_time_seconds': 755.385455, 'test_accuracy': 0.73999999999999999}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 33, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2], 'train_time_seconds': 790.358784, 'test_accuracy': 0.73740000000000006}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 34, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3], 'train_time_seconds': 818.245828, 'test_accuracy': 0.73909999999999998}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 35, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0], 'train_time_seconds': 850.62952, 'test_accuracy': 0.7429}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 36, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0], 'train_time_seconds': 878.000302, 'test_accuracy': 0.75749999999999995}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 37, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0], 'train_time_seconds': 910.815702, 'test_accuracy': 0.76060000000000005}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 38, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0], 'train_time_seconds': 932.361959, 'test_accuracy': 0.75309999999999999}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 39, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2], 'train_time_seconds': 971.975253, 'test_accuracy': 0.74570000000000003}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 40, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1], 'train_time_seconds': 991.470465, 'test_accuracy': 0.74160000000000004}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 41, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 0, 2, 3, 1], 'train_time_seconds': 1013.129267, 'test_accuracy': 0.73560000000000003}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 42, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 0, 2, 3, 1, 1, 2, 3, 0], 'train_time_seconds': 1039.030533, 'test_accuracy': 0.73950000000000005}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 43, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 0, 2, 3, 1, 1, 2, 3, 0, 2, 0, 3, 1], 'train_time_seconds': 1061.343818, 'test_accuracy': 0.73560000000000003}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 44, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 0, 2, 3, 1, 1, 2, 3, 0, 2, 0, 3, 1, 1, 0, 3, 2], 'train_time_seconds': 1090.086285, 'test_accuracy': 0.7359}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 45, 'episode': 3, 'encoding': [0, 1, 2, 3], 'train_time_seconds': 154.492417, 'test_accuracy': 0.52590000000000003}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 46, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2], 'train_time_seconds': 177.56699, 'test_accuracy': 0.59079999999999999}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 47, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0], 'train_time_seconds': 216.361385, 'test_accuracy': 0.64070000000000005}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 48, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3], 'train_time_seconds': 244.415507, 'test_accuracy': 0.6482}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 49, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3], 'train_time_seconds': 271.270051, 'test_accuracy': 0.64049999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 50, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3], 'train_time_seconds': 293.775519, 'test_accuracy': 0.64200000000000002}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 51, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2], 'train_time_seconds': 321.128231, 'test_accuracy': 0.63749999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 52, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0], 'train_time_seconds': 350.131566, 'test_accuracy': 0.64039999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 53, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1], 'train_time_seconds': 379.47718, 'test_accuracy': 0.6351}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 54, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3], 'train_time_seconds': 402.270577, 'test_accuracy': 0.62239999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 55, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3, 0, 2, 3, 1], 'train_time_seconds': 422.82807, 'test_accuracy': 0.627}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 56, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3, 0, 2, 3, 1, 3, 2, 0, 1], 'train_time_seconds': 440.262341, 'test_accuracy': 0.63019999999999998}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 57, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3, 0, 2, 3, 1, 3, 2, 0, 1, 3, 2, 1, 0], 'train_time_seconds': 465.008078, 'test_accuracy': 0.62660000000000005}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 58, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3, 0, 2, 3, 1, 3, 2, 0, 1, 3, 2, 1, 0, 1, 2, 0, 3], 'train_time_seconds': 487.055249, 'test_accuracy': 0.62949999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 59, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3, 0, 2, 3, 1, 3, 2, 0, 1, 3, 2, 1, 0, 1, 2, 0, 3, 1, 0, 3, 2], 'train_time_seconds': 513.123642, 'test_accuracy': 0.62309999999999999}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 60, 'episode': 4, 'encoding': [2, 3, 0, 1], 'train_time_seconds': 267.085217, 'test_accuracy': 0.54620000000000002}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 61, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3], 'train_time_seconds': 284.421141, 'test_accuracy': 0.68279999999999996}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 62, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0], 'train_time_seconds': 338.823722, 'test_accuracy': 0.75360000000000005}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 63, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2], 'train_time_seconds': 364.37943, 'test_accuracy': 0.77049999999999996}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 64, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1], 'train_time_seconds': 395.799564, 'test_accuracy': 0.76759999999999995}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 65, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1], 'train_time_seconds': 428.267988, 'test_accuracy': 0.7681}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 66, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3], 'train_time_seconds': 449.424833, 'test_accuracy': 0.78010000000000002}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 67, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3], 'train_time_seconds': 475.862533, 'test_accuracy': 0.77280000000000004}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 68, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3], 'train_time_seconds': 502.726014, 'test_accuracy': 0.77569999999999995}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 69, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2], 'train_time_seconds': 524.395997, 'test_accuracy': 0.76919999999999999}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 70, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2, 3, 1, 2, 0], 'train_time_seconds': 550.039473, 'test_accuracy': 0.77190000000000003}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 71, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2, 3, 1, 2, 0, 3, 1, 0, 2], 'train_time_seconds': 580.835388, 'test_accuracy': 0.76659999999999995}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 72, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2, 3, 1, 2, 0, 3, 1, 0, 2, 2, 0, 1, 3], 'train_time_seconds': 617.589614, 'test_accuracy': 0.76980000000000004}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 73, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2, 3, 1, 2, 0, 3, 1, 0, 2, 2, 0, 1, 3, 3, 1, 2, 0], 'train_time_seconds': 621.520654, 'test_accuracy': 0.77159999999999995}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}], 'index': 74, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2, 3, 1, 2, 0, 3, 1, 0, 2, 2, 0, 1, 3, 3, 1, 2, 0, 1, 0, 2, 3], 'train_time_seconds': 646.391962, 'test_accuracy': 0.7702}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 75, 'episode': 5, 'encoding': [1, 3, 2, 0], 'train_time_seconds': 378.526842, 'test_accuracy': 0.54700000000000004}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 76, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1], 'train_time_seconds': 613.117144, 'test_accuracy': 0.71630000000000005}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 77, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2], 'train_time_seconds': 672.673485, 'test_accuracy': 0.76419999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 78, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3], 'train_time_seconds': 697.167486, 'test_accuracy': 0.77470000000000006}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 79, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2], 'train_time_seconds': 732.365333, 'test_accuracy': 0.7802}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 80, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2], 'train_time_seconds': 763.005842, 'test_accuracy': 0.75790000000000002}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 81, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2], 'train_time_seconds': 792.734367, 'test_accuracy': 0.72540000000000004}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 82, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2], 'train_time_seconds': 831.112687, 'test_accuracy': 0.72389999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 83, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3], 'train_time_seconds': 842.719176, 'test_accuracy': 0.72230000000000005}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 84, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1], 'train_time_seconds': 863.49351, 'test_accuracy': 0.71289999999999998}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 85, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1, 0, 2, 3, 1], 'train_time_seconds': 896.333535, 'test_accuracy': 0.71760000000000002}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 86, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1, 0, 2, 3, 1, 1, 2, 0, 3], 'train_time_seconds': 938.671745, 'test_accuracy': 0.7087}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 87, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1, 0, 2, 3, 1, 1, 2, 0, 3, 1, 0, 3, 2], 'train_time_seconds': 966.307771, 'test_accuracy': 0.70109999999999995}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 88, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1, 0, 2, 3, 1, 1, 2, 0, 3, 1, 0, 3, 2, 2, 0, 1, 3], 'train_time_seconds': 982.092296, 'test_accuracy': 0.69510000000000005}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 89, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1, 0, 2, 3, 1, 1, 2, 0, 3, 1, 0, 3, 2, 2, 0, 1, 3, 0, 2, 3, 1], 'train_time_seconds': 1005.653968, 'test_accuracy': 0.70760000000000001}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 90, 'episode': 6, 'encoding': [1, 0, 3, 2], 'train_time_seconds': 217.36723, 'test_accuracy': 0.50649999999999995}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 91, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0], 'train_time_seconds': 325.730985, 'test_accuracy': 0.68720000000000003}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 92, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2], 'train_time_seconds': 354.765124, 'test_accuracy': 0.72430000000000005}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 93, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1], 'train_time_seconds': 383.179029, 'test_accuracy': 0.74270000000000003}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 94, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0], 'train_time_seconds': 422.943928, 'test_accuracy': 0.77510000000000001}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 95, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3], 'train_time_seconds': 446.665906, 'test_accuracy': 0.7581}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 96, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1], 'train_time_seconds': 467.661666, 'test_accuracy': 0.76160000000000005}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 97, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0], 'train_time_seconds': 494.685742, 'test_accuracy': 0.76100000000000001}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 98, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2], 'train_time_seconds': 525.112334, 'test_accuracy': 0.76529999999999998}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 99, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0], 'train_time_seconds': 547.659506, 'test_accuracy': 0.7581}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}], 'index': 100, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3], 'train_time_seconds': 583.304301, 'test_accuracy': 0.76359999999999995}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 101, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0], 'train_time_seconds': 603.572402, 'test_accuracy': 0.76339999999999997}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 102, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 2, 3, 1, 0], 'train_time_seconds': 623.686917, 'test_accuracy': 0.7591}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 103, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 2, 3, 1, 0, 1, 2, 3, 0], 'train_time_seconds': 656.305087, 'test_accuracy': 0.75380000000000003}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 104, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 2, 3, 1, 0, 1, 2, 3, 0, 3, 2, 1, 0], 'train_time_seconds': 685.639853, 'test_accuracy': 0.76439999999999997}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 105, 'episode': 7, 'encoding': [1, 3, 2, 0], 'train_time_seconds': 397.291285, 'test_accuracy': 0.53420000000000001}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 106, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0], 'train_time_seconds': 748.507339, 'test_accuracy': 0.73029999999999995}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 107, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1], 'train_time_seconds': 989.022638, 'test_accuracy': 0.76780000000000004}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 108, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1], 'train_time_seconds': 1276.368707, 'test_accuracy': 0.79220000000000002}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 109, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0], 'train_time_seconds': 1699.364921, 'test_accuracy': 0.80959999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 110, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0], 'train_time_seconds': 2111.088991, 'test_accuracy': 0.82550000000000001}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 111, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3], 'train_time_seconds': 2104.299741, 'test_accuracy': 0.83130000000000004}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 112, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3], 'train_time_seconds': 2132.377165, 'test_accuracy': 0.83069999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 113, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0], 'train_time_seconds': 2171.730766, 'test_accuracy': 0.82840000000000003}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 114, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1], 'train_time_seconds': 2206.168697, 'test_accuracy': 0.82630000000000003}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 115, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1, 0, 2, 1, 3], 'train_time_seconds': 2242.754186, 'test_accuracy': 0.82430000000000003}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 116, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1, 0, 2, 1, 3, 1, 3, 0, 2], 'train_time_seconds': 2274.455987, 'test_accuracy': 0.82630000000000003}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 117, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1, 0, 2, 1, 3, 1, 3, 0, 2, 3, 2, 0, 1], 'train_time_seconds': 2316.529541, 'test_accuracy': 0.82720000000000005}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 118, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1, 0, 2, 1, 3, 1, 3, 0, 2, 3, 2, 0, 1, 1, 0, 3, 2], 'train_time_seconds': 2379.46011, 'test_accuracy': 0.82069999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 119, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1, 0, 2, 1, 3, 1, 3, 0, 2, 3, 2, 0, 1, 1, 0, 3, 2, 3, 0, 2, 1], 'train_time_seconds': 2433.691472, 'test_accuracy': 0.82250000000000001}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 120, 'episode': 8, 'encoding': [1, 2, 0, 3], 'train_time_seconds': 161.413152, 'test_accuracy': 0.5978}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 121, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2], 'train_time_seconds': 185.344027, 'test_accuracy': 0.6431}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 122, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2], 'train_time_seconds': 215.021043, 'test_accuracy': 0.59589999999999999}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 123, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0], 'train_time_seconds': 245.733207, 'test_accuracy': 0.61529999999999996}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 124, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1], 'train_time_seconds': 264.548333, 'test_accuracy': 0.61990000000000001}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 125, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1], 'train_time_seconds': 285.328789, 'test_accuracy': 0.60960000000000003}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 126, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0], 'train_time_seconds': 319.425223, 'test_accuracy': 0.63100000000000001}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 127, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1], 'train_time_seconds': 335.917864, 'test_accuracy': 0.61739999999999995}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 128, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1], 'train_time_seconds': 358.294132, 'test_accuracy': 0.62070000000000003}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 129, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0], 'train_time_seconds': 388.465621, 'test_accuracy': 0.6089}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 130, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0, 2, 0, 3, 1], 'train_time_seconds': 409.902896, 'test_accuracy': 0.61370000000000002}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 131, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0, 2, 0, 3, 1, 1, 3, 0, 2], 'train_time_seconds': 443.674932, 'test_accuracy': 0.61609999999999998}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 132, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0, 2, 0, 3, 1, 1, 3, 0, 2, 2, 3, 0, 1], 'train_time_seconds': 488.961076, 'test_accuracy': 0.61170000000000002}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 133, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0, 2, 0, 3, 1, 1, 3, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0], 'train_time_seconds': 511.302676, 'test_accuracy': 0.61760000000000004}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 134, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0, 2, 0, 3, 1, 1, 3, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 0, 2, 1, 3], 'train_time_seconds': 530.143553, 'test_accuracy': 0.60750000000000004}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 135, 'episode': 9, 'encoding': [2, 0, 1, 3], 'train_time_seconds': 157.400615, 'test_accuracy': 0.53779999999999994}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 136, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2], 'train_time_seconds': 196.925042, 'test_accuracy': 0.61409999999999998}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 137, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1], 'train_time_seconds': 223.804903, 'test_accuracy': 0.64980000000000004}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 138, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0], 'train_time_seconds': 257.687301, 'test_accuracy': 0.67300000000000004}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 139, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0], 'train_time_seconds': 295.501348, 'test_accuracy': 0.67579999999999996}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 140, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2], 'train_time_seconds': 324.733899, 'test_accuracy': 0.67779999999999996}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 141, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0], 'train_time_seconds': 356.384986, 'test_accuracy': 0.68010000000000004}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 142, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2], 'train_time_seconds': 402.409268, 'test_accuracy': 0.67079999999999995}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 143, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0], 'train_time_seconds': 409.400216, 'test_accuracy': 0.67449999999999999}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 144, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3], 'train_time_seconds': 421.938602, 'test_accuracy': 0.67259999999999998}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 145, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3, 3, 0, 2, 1], 'train_time_seconds': 435.248074, 'test_accuracy': 0.68240000000000001}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 146, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3, 3, 0, 2, 1, 0, 1, 2, 3], 'train_time_seconds': 462.21662, 'test_accuracy': 0.67500000000000004}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 147, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3, 3, 0, 2, 1, 0, 1, 2, 3, 2, 3, 0, 1], 'train_time_seconds': 491.823731, 'test_accuracy': 0.67259999999999998}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 148, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3, 3, 0, 2, 1, 0, 1, 2, 3, 2, 3, 0, 1, 1, 3, 0, 2], 'train_time_seconds': 512.468166, 'test_accuracy': 0.6764}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 149, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3, 3, 0, 2, 1, 0, 1, 2, 3, 2, 3, 0, 1, 1, 3, 0, 2, 1, 2, 0, 3], 'train_time_seconds': 537.465466, 'test_accuracy': 0.66690000000000005}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 150, 'episode': 10, 'encoding': [0, 1, 3, 2], 'train_time_seconds': 204.35711, 'test_accuracy': 0.52669999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 151, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0], 'train_time_seconds': 324.407284, 'test_accuracy': 0.69799999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 152, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0], 'train_time_seconds': 445.498025, 'test_accuracy': 0.76629999999999998}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 153, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3], 'train_time_seconds': 473.396815, 'test_accuracy': 0.77300000000000002}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 154, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0], 'train_time_seconds': 518.905977, 'test_accuracy': 0.78359999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 155, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2], 'train_time_seconds': 548.873619, 'test_accuracy': 0.78849999999999998}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 156, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3], 'train_time_seconds': 574.437914, 'test_accuracy': 0.74019999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 157, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0], 'train_time_seconds': 607.126441, 'test_accuracy': 0.74209999999999998}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 158, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0], 'train_time_seconds': 633.15937, 'test_accuracy': 0.7379}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 159, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1], 'train_time_seconds': 666.399921, 'test_accuracy': 0.73819999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 160, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1, 2, 3, 0, 1], 'train_time_seconds': 690.871556, 'test_accuracy': 0.72729999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 161, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1, 2, 3, 0, 1, 1, 2, 3, 0], 'train_time_seconds': 730.167116, 'test_accuracy': 0.72819999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 162, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1, 2, 3, 0, 1, 1, 2, 3, 0, 1, 3, 0, 2], 'train_time_seconds': 754.783345, 'test_accuracy': 0.73229999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 163, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1, 2, 3, 0, 1, 1, 2, 3, 0, 1, 3, 0, 2, 1, 2, 0, 3], 'train_time_seconds': 785.892116, 'test_accuracy': 0.72750000000000004}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 164, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1, 2, 3, 0, 1, 1, 2, 3, 0, 1, 3, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1], 'train_time_seconds': 814.671564, 'test_accuracy': 0.73280000000000001}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 165, 'episode': 11, 'encoding': [2, 0, 1, 3], 'train_time_seconds': 157.271983, 'test_accuracy': 0.52690000000000003}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 166, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0], 'train_time_seconds': 233.474871, 'test_accuracy': 0.65869999999999995}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 167, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3], 'train_time_seconds': 262.682646, 'test_accuracy': 0.66420000000000001}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 168, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2], 'train_time_seconds': 297.093558, 'test_accuracy': 0.66069999999999995}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 169, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1], 'train_time_seconds': 325.904775, 'test_accuracy': 0.66359999999999997}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 170, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0], 'train_time_seconds': 355.178112, 'test_accuracy': 0.6724}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 171, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2], 'train_time_seconds': 391.736665, 'test_accuracy': 0.66679999999999995}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 172, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3], 'train_time_seconds': 439.901093, 'test_accuracy': 0.66990000000000005}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 173, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2], 'train_time_seconds': 456.230258, 'test_accuracy': 0.65820000000000001}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 174, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2], 'train_time_seconds': 496.393112, 'test_accuracy': 0.65529999999999999}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 175, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2, 2, 1, 3, 0], 'train_time_seconds': 530.433642, 'test_accuracy': 0.65849999999999997}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 176, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2, 2, 1, 3, 0, 2, 3, 0, 1], 'train_time_seconds': 559.024114, 'test_accuracy': 0.65629999999999999}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 177, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2, 2, 1, 3, 0, 2, 3, 0, 1, 1, 0, 3, 2], 'train_time_seconds': 596.622685, 'test_accuracy': 0.65110000000000001}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 178, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2, 2, 1, 3, 0, 2, 3, 0, 1, 1, 0, 3, 2, 1, 2, 0, 3], 'train_time_seconds': 616.373219, 'test_accuracy': 0.65580000000000005}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 179, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2, 2, 1, 3, 0, 2, 3, 0, 1, 1, 0, 3, 2, 1, 2, 0, 3, 0, 3, 2, 1], 'train_time_seconds': 676.854992, 'test_accuracy': 0.65059999999999996}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 180, 'episode': 12, 'encoding': [3, 2, 0, 1], 'train_time_seconds': 293.76242, 'test_accuracy': 0.55510000000000004}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 181, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1], 'train_time_seconds': 551.089466, 'test_accuracy': 0.69889999999999997}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 182, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0], 'train_time_seconds': 950.409513, 'test_accuracy': 0.75729999999999997}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 183, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2], 'train_time_seconds': 1036.382422, 'test_accuracy': 0.76900000000000002}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 184, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0], 'train_time_seconds': 1154.141058, 'test_accuracy': 0.81140000000000001}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 185, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0], 'train_time_seconds': 1269.286342, 'test_accuracy': 0.82820000000000005}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 186, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1], 'train_time_seconds': 1363.497621, 'test_accuracy': 0.83960000000000001}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 187, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3], 'train_time_seconds': 1403.803183, 'test_accuracy': 0.83540000000000003}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 188, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1], 'train_time_seconds': 1446.00596, 'test_accuracy': 0.84099999999999997}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 189, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2], 'train_time_seconds': 1507.046853, 'test_accuracy': 0.84509999999999996}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 190, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2, 0, 1, 3, 2], 'train_time_seconds': 1530.718416, 'test_accuracy': 0.84450000000000003}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 191, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2, 0, 1, 3, 2, 0, 3, 2, 1], 'train_time_seconds': 1558.745384, 'test_accuracy': 0.83979999999999999}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 192, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 0, 3], 'train_time_seconds': 1599.975824, 'test_accuracy': 0.84260000000000002}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 193, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 0, 3, 1, 3, 2, 0], 'train_time_seconds': 1650.997569, 'test_accuracy': 0.84060000000000001}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 194, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 0, 3, 1, 3, 2, 0, 1, 3, 2, 0], 'train_time_seconds': 1690.082677, 'test_accuracy': 0.83389999999999997}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 195, 'episode': 13, 'encoding': [3, 0, 2, 1], 'train_time_seconds': 365.873635, 'test_accuracy': 0.4556}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 196, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1], 'train_time_seconds': 598.482514, 'test_accuracy': 0.61229999999999996}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 197, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1], 'train_time_seconds': 842.344528, 'test_accuracy': 0.70999999999999996}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 198, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1], 'train_time_seconds': 1157.51381, 'test_accuracy': 0.75229999999999997}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 199, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1], 'train_time_seconds': 1424.06651, 'test_accuracy': 0.78280000000000005}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 200, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1], 'train_time_seconds': 1738.255843, 'test_accuracy': 0.79020000000000001}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 201, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0], 'train_time_seconds': 2140.066035, 'test_accuracy': 0.80230000000000001}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 202, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3], 'train_time_seconds': 2160.915993, 'test_accuracy': 0.81859999999999999}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 203, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1], 'train_time_seconds': 2207.766397, 'test_accuracy': 0.83160000000000001}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 204, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2], 'train_time_seconds': 2235.92257, 'test_accuracy': 0.82840000000000003}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 205, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2, 3, 1, 2, 0], 'train_time_seconds': 2272.867442, 'test_accuracy': 0.83360000000000001}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 206, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2, 3, 1, 2, 0, 1, 3, 2, 0], 'train_time_seconds': 2307.68152, 'test_accuracy': 0.83799999999999997}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 207, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2, 3, 1, 2, 0, 1, 3, 2, 0, 0, 1, 2, 3], 'train_time_seconds': 2328.187231, 'test_accuracy': 0.84199999999999997}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 208, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2, 3, 1, 2, 0, 1, 3, 2, 0, 0, 1, 2, 3, 2, 3, 0, 1], 'train_time_seconds': 2362.919202, 'test_accuracy': 0.83740000000000003}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 209, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2, 3, 1, 2, 0, 1, 3, 2, 0, 0, 1, 2, 3, 2, 3, 0, 1, 2, 3, 1, 0], 'train_time_seconds': 2384.74204, 'test_accuracy': 0.83199999999999996}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 210, 'episode': 14, 'encoding': [1, 0, 3, 2], 'train_time_seconds': 200.91298, 'test_accuracy': 0.50819999999999999}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 211, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3], 'train_time_seconds': 204.204818, 'test_accuracy': 0.60199999999999998}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 212, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2], 'train_time_seconds': 234.25001, 'test_accuracy': 0.59370000000000001}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 213, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1], 'train_time_seconds': 260.086691, 'test_accuracy': 0.60860000000000003}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 214, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0], 'train_time_seconds': 290.663732, 'test_accuracy': 0.625}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 215, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1], 'train_time_seconds': 314.332969, 'test_accuracy': 0.62939999999999996}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 216, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0], 'train_time_seconds': 337.433161, 'test_accuracy': 0.62570000000000003}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 217, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3], 'train_time_seconds': 363.36702, 'test_accuracy': 0.6169}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 218, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2], 'train_time_seconds': 388.91541, 'test_accuracy': 0.61760000000000004}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 219, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0], 'train_time_seconds': 416.198265, 'test_accuracy': 0.62660000000000005}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 220, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0, 1, 2, 3, 0], 'train_time_seconds': 437.925206, 'test_accuracy': 0.62260000000000004}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 221, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0, 1, 2, 3, 0, 2, 3, 1, 0], 'train_time_seconds': 458.853452, 'test_accuracy': 0.61209999999999998}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 222, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0, 1, 2, 3, 0, 2, 3, 1, 0, 1, 3, 0, 2], 'train_time_seconds': 479.228323, 'test_accuracy': 0.61339999999999995}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 223, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0, 1, 2, 3, 0, 2, 3, 1, 0, 1, 3, 0, 2, 3, 1, 0, 2], 'train_time_seconds': 498.58568, 'test_accuracy': 0.60960000000000003}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 224, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0, 1, 2, 3, 0, 2, 3, 1, 0, 1, 3, 0, 2, 3, 1, 0, 2, 3, 0, 2, 1], 'train_time_seconds': 519.7138, 'test_accuracy': 0.61019999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 225, 'episode': 15, 'encoding': [0, 1, 3, 2], 'train_time_seconds': 199.220851, 'test_accuracy': 0.52270000000000005}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 226, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0], 'train_time_seconds': 312.060704, 'test_accuracy': 0.70289999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 227, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0], 'train_time_seconds': 429.476669, 'test_accuracy': 0.7641}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 228, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2], 'train_time_seconds': 465.341865, 'test_accuracy': 0.77780000000000005}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 229, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3], 'train_time_seconds': 495.706224, 'test_accuracy': 0.77470000000000006}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 230, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0], 'train_time_seconds': 521.955509, 'test_accuracy': 0.78849999999999998}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 231, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1], 'train_time_seconds': 536.656378, 'test_accuracy': 0.77800000000000002}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 232, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0], 'train_time_seconds': 566.993774, 'test_accuracy': 0.78059999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 233, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2], 'train_time_seconds': 589.901111, 'test_accuracy': 0.78200000000000003}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 234, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 0, 3, 2], 'train_time_seconds': 621.67322, 'test_accuracy': 0.78049999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 235, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 0, 3, 2, 0, 3, 2, 1], 'train_time_seconds': 654.441952, 'test_accuracy': 0.77990000000000004}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 236, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 0, 3, 2, 0, 3, 2, 1, 3, 0, 2, 1], 'train_time_seconds': 680.37746, 'test_accuracy': 0.77690000000000003}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 237, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 0, 3, 2, 0, 3, 2, 1, 3, 0, 2, 1, 0, 1, 3, 2], 'train_time_seconds': 718.327948, 'test_accuracy': 0.78200000000000003}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 238, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 0, 3, 2, 0, 3, 2, 1, 3, 0, 2, 1, 0, 1, 3, 2, 2, 0, 3, 1], 'train_time_seconds': 739.12453, 'test_accuracy': 0.77170000000000005}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 239, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 0, 3, 2, 0, 3, 2, 1, 3, 0, 2, 1, 0, 1, 3, 2, 2, 0, 3, 1, 3, 2, 1, 0], 'train_time_seconds': 756.728983, 'test_accuracy': 0.78059999999999996}]
episode: 0
0
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 0, 'episode': 0, 'encoding': [1, 3, 2, 0], 'train_time_seconds': 368.049252, 'test_accuracy': 0.54039999999999999}
1
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 0, 'episode': 0, 'encoding': [1, 3, 2, 0], 'train_time_seconds': 368.049252, 'test_accuracy': 0.54039999999999999}
Traceback (most recent call last):
  File "experiment_cifar.py", line 254, in <module>
    main()
  File "experiment_cifar.py", line 20, in main
    run_experiment_finetuning()
  File "experiment_cifar.py", line 58, in run_experiment_finetuning
    assert(layer == len(replay['layers'])-1)
AssertionError
albert@albert-desktop:~/git/network_architecture_search$ python2 experiment_cifar.py
  File "experiment_cifar.py", line 95
    i += 1
         ^
IndentationError: unindent does not match any outer indentation level
albert@albert-desktop:~/git/network_architecture_search$ python2 experiment_cifar.py
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally
[{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 0, 'episode': 0, 'encoding': [1, 3, 2, 0], 'train_time_seconds': 368.049252, 'test_accuracy': 0.54039999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 1, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2], 'train_time_seconds': 408.275522, 'test_accuracy': 0.70669999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 2, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1], 'train_time_seconds': 475.116003, 'test_accuracy': 0.74450000000000005}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 3, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0], 'train_time_seconds': 573.275197, 'test_accuracy': 0.78920000000000001}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 4, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3], 'train_time_seconds': 610.236321, 'test_accuracy': 0.7974}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}], 'index': 5, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3], 'train_time_seconds': 616.56595, 'test_accuracy': 0.76959999999999995}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 6, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2], 'train_time_seconds': 638.756012, 'test_accuracy': 0.71870000000000001}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 7, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3], 'train_time_seconds': 673.490203, 'test_accuracy': 0.71870000000000001}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 8, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0], 'train_time_seconds': 701.666276, 'test_accuracy': 0.72009999999999996}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 9, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2], 'train_time_seconds': 734.279322, 'test_accuracy': 0.71040000000000003}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 10, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2, 0, 2, 1, 3], 'train_time_seconds': 759.138101, 'test_accuracy': 0.71120000000000005}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 11, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2, 0, 2, 1, 3, 0, 2, 1, 3], 'train_time_seconds': 785.593478, 'test_accuracy': 0.7016}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 12, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2, 0, 2, 1, 3, 0, 2, 1, 3, 2, 0, 3, 1], 'train_time_seconds': 811.026095, 'test_accuracy': 0.70509999999999995}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 13, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2, 0, 2, 1, 3, 0, 2, 1, 3, 2, 0, 3, 1, 1, 0, 3, 2], 'train_time_seconds': 836.35241, 'test_accuracy': 0.70469999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 14, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2, 0, 2, 1, 3, 0, 2, 1, 3, 2, 0, 3, 1, 1, 0, 3, 2, 0, 3, 1, 2], 'train_time_seconds': 858.769875, 'test_accuracy': 0.69899999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 15, 'episode': 1, 'encoding': [0, 1, 2, 3], 'train_time_seconds': 150.175051, 'test_accuracy': 0.52459999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 16, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1], 'train_time_seconds': 189.038294, 'test_accuracy': 0.61439999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 17, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1], 'train_time_seconds': 250.080138, 'test_accuracy': 0.68889999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 18, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1], 'train_time_seconds': 288.146287, 'test_accuracy': 0.70369999999999999}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 19, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3], 'train_time_seconds': 310.580743, 'test_accuracy': 0.67169999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 20, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0], 'train_time_seconds': 341.077389, 'test_accuracy': 0.69030000000000002}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 21, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2], 'train_time_seconds': 369.405306, 'test_accuracy': 0.69579999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 22, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1], 'train_time_seconds': 397.396746, 'test_accuracy': 0.69259999999999999}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 23, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0], 'train_time_seconds': 423.511957, 'test_accuracy': 0.6865}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 24, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0], 'train_time_seconds': 446.028381, 'test_accuracy': 0.69640000000000002}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 25, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0, 3, 2, 1, 0], 'train_time_seconds': 473.146224, 'test_accuracy': 0.69279999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 26, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0, 3, 2, 1, 0, 0, 3, 2, 1], 'train_time_seconds': 495.503059, 'test_accuracy': 0.6875}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 27, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0, 3, 2, 1, 0, 0, 3, 2, 1, 3, 0, 1, 2], 'train_time_seconds': 519.678454, 'test_accuracy': 0.69220000000000004}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 28, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0, 3, 2, 1, 0, 0, 3, 2, 1, 3, 0, 1, 2, 2, 3, 1, 0], 'train_time_seconds': 542.799009, 'test_accuracy': 0.69099999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 29, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0, 3, 2, 1, 0, 0, 3, 2, 1, 3, 0, 1, 2, 2, 3, 1, 0, 0, 1, 2, 3], 'train_time_seconds': 565.664945, 'test_accuracy': 0.68340000000000001}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 30, 'episode': 2, 'encoding': [3, 0, 2, 1], 'train_time_seconds': 363.186491, 'test_accuracy': 0.46729999999999999}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 31, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0], 'train_time_seconds': 734.629674, 'test_accuracy': 0.68469999999999998}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 32, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3], 'train_time_seconds': 755.385455, 'test_accuracy': 0.73999999999999999}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 33, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2], 'train_time_seconds': 790.358784, 'test_accuracy': 0.73740000000000006}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 34, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3], 'train_time_seconds': 818.245828, 'test_accuracy': 0.73909999999999998}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 35, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0], 'train_time_seconds': 850.62952, 'test_accuracy': 0.7429}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 36, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0], 'train_time_seconds': 878.000302, 'test_accuracy': 0.75749999999999995}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 37, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0], 'train_time_seconds': 910.815702, 'test_accuracy': 0.76060000000000005}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 38, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0], 'train_time_seconds': 932.361959, 'test_accuracy': 0.75309999999999999}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 39, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2], 'train_time_seconds': 971.975253, 'test_accuracy': 0.74570000000000003}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 40, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1], 'train_time_seconds': 991.470465, 'test_accuracy': 0.74160000000000004}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 41, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 0, 2, 3, 1], 'train_time_seconds': 1013.129267, 'test_accuracy': 0.73560000000000003}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 42, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 0, 2, 3, 1, 1, 2, 3, 0], 'train_time_seconds': 1039.030533, 'test_accuracy': 0.73950000000000005}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 43, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 0, 2, 3, 1, 1, 2, 3, 0, 2, 0, 3, 1], 'train_time_seconds': 1061.343818, 'test_accuracy': 0.73560000000000003}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 44, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 0, 2, 3, 1, 1, 2, 3, 0, 2, 0, 3, 1, 1, 0, 3, 2], 'train_time_seconds': 1090.086285, 'test_accuracy': 0.7359}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 45, 'episode': 3, 'encoding': [0, 1, 2, 3], 'train_time_seconds': 154.492417, 'test_accuracy': 0.52590000000000003}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 46, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2], 'train_time_seconds': 177.56699, 'test_accuracy': 0.59079999999999999}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 47, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0], 'train_time_seconds': 216.361385, 'test_accuracy': 0.64070000000000005}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 48, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3], 'train_time_seconds': 244.415507, 'test_accuracy': 0.6482}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 49, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3], 'train_time_seconds': 271.270051, 'test_accuracy': 0.64049999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 50, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3], 'train_time_seconds': 293.775519, 'test_accuracy': 0.64200000000000002}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 51, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2], 'train_time_seconds': 321.128231, 'test_accuracy': 0.63749999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 52, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0], 'train_time_seconds': 350.131566, 'test_accuracy': 0.64039999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 53, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1], 'train_time_seconds': 379.47718, 'test_accuracy': 0.6351}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 54, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3], 'train_time_seconds': 402.270577, 'test_accuracy': 0.62239999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 55, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3, 0, 2, 3, 1], 'train_time_seconds': 422.82807, 'test_accuracy': 0.627}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 56, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3, 0, 2, 3, 1, 3, 2, 0, 1], 'train_time_seconds': 440.262341, 'test_accuracy': 0.63019999999999998}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 57, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3, 0, 2, 3, 1, 3, 2, 0, 1, 3, 2, 1, 0], 'train_time_seconds': 465.008078, 'test_accuracy': 0.62660000000000005}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 58, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3, 0, 2, 3, 1, 3, 2, 0, 1, 3, 2, 1, 0, 1, 2, 0, 3], 'train_time_seconds': 487.055249, 'test_accuracy': 0.62949999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 59, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3, 0, 2, 3, 1, 3, 2, 0, 1, 3, 2, 1, 0, 1, 2, 0, 3, 1, 0, 3, 2], 'train_time_seconds': 513.123642, 'test_accuracy': 0.62309999999999999}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 60, 'episode': 4, 'encoding': [2, 3, 0, 1], 'train_time_seconds': 267.085217, 'test_accuracy': 0.54620000000000002}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 61, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3], 'train_time_seconds': 284.421141, 'test_accuracy': 0.68279999999999996}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 62, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0], 'train_time_seconds': 338.823722, 'test_accuracy': 0.75360000000000005}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 63, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2], 'train_time_seconds': 364.37943, 'test_accuracy': 0.77049999999999996}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 64, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1], 'train_time_seconds': 395.799564, 'test_accuracy': 0.76759999999999995}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 65, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1], 'train_time_seconds': 428.267988, 'test_accuracy': 0.7681}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 66, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3], 'train_time_seconds': 449.424833, 'test_accuracy': 0.78010000000000002}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 67, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3], 'train_time_seconds': 475.862533, 'test_accuracy': 0.77280000000000004}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 68, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3], 'train_time_seconds': 502.726014, 'test_accuracy': 0.77569999999999995}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 69, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2], 'train_time_seconds': 524.395997, 'test_accuracy': 0.76919999999999999}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 70, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2, 3, 1, 2, 0], 'train_time_seconds': 550.039473, 'test_accuracy': 0.77190000000000003}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 71, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2, 3, 1, 2, 0, 3, 1, 0, 2], 'train_time_seconds': 580.835388, 'test_accuracy': 0.76659999999999995}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 72, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2, 3, 1, 2, 0, 3, 1, 0, 2, 2, 0, 1, 3], 'train_time_seconds': 617.589614, 'test_accuracy': 0.76980000000000004}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 73, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2, 3, 1, 2, 0, 3, 1, 0, 2, 2, 0, 1, 3, 3, 1, 2, 0], 'train_time_seconds': 621.520654, 'test_accuracy': 0.77159999999999995}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}], 'index': 74, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2, 3, 1, 2, 0, 3, 1, 0, 2, 2, 0, 1, 3, 3, 1, 2, 0, 1, 0, 2, 3], 'train_time_seconds': 646.391962, 'test_accuracy': 0.7702}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 75, 'episode': 5, 'encoding': [1, 3, 2, 0], 'train_time_seconds': 378.526842, 'test_accuracy': 0.54700000000000004}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 76, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1], 'train_time_seconds': 613.117144, 'test_accuracy': 0.71630000000000005}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 77, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2], 'train_time_seconds': 672.673485, 'test_accuracy': 0.76419999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 78, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3], 'train_time_seconds': 697.167486, 'test_accuracy': 0.77470000000000006}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 79, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2], 'train_time_seconds': 732.365333, 'test_accuracy': 0.7802}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 80, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2], 'train_time_seconds': 763.005842, 'test_accuracy': 0.75790000000000002}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 81, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2], 'train_time_seconds': 792.734367, 'test_accuracy': 0.72540000000000004}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 82, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2], 'train_time_seconds': 831.112687, 'test_accuracy': 0.72389999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 83, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3], 'train_time_seconds': 842.719176, 'test_accuracy': 0.72230000000000005}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 84, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1], 'train_time_seconds': 863.49351, 'test_accuracy': 0.71289999999999998}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 85, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1, 0, 2, 3, 1], 'train_time_seconds': 896.333535, 'test_accuracy': 0.71760000000000002}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 86, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1, 0, 2, 3, 1, 1, 2, 0, 3], 'train_time_seconds': 938.671745, 'test_accuracy': 0.7087}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 87, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1, 0, 2, 3, 1, 1, 2, 0, 3, 1, 0, 3, 2], 'train_time_seconds': 966.307771, 'test_accuracy': 0.70109999999999995}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 88, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1, 0, 2, 3, 1, 1, 2, 0, 3, 1, 0, 3, 2, 2, 0, 1, 3], 'train_time_seconds': 982.092296, 'test_accuracy': 0.69510000000000005}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 89, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1, 0, 2, 3, 1, 1, 2, 0, 3, 1, 0, 3, 2, 2, 0, 1, 3, 0, 2, 3, 1], 'train_time_seconds': 1005.653968, 'test_accuracy': 0.70760000000000001}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 90, 'episode': 6, 'encoding': [1, 0, 3, 2], 'train_time_seconds': 217.36723, 'test_accuracy': 0.50649999999999995}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 91, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0], 'train_time_seconds': 325.730985, 'test_accuracy': 0.68720000000000003}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 92, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2], 'train_time_seconds': 354.765124, 'test_accuracy': 0.72430000000000005}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 93, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1], 'train_time_seconds': 383.179029, 'test_accuracy': 0.74270000000000003}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 94, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0], 'train_time_seconds': 422.943928, 'test_accuracy': 0.77510000000000001}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 95, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3], 'train_time_seconds': 446.665906, 'test_accuracy': 0.7581}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 96, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1], 'train_time_seconds': 467.661666, 'test_accuracy': 0.76160000000000005}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 97, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0], 'train_time_seconds': 494.685742, 'test_accuracy': 0.76100000000000001}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 98, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2], 'train_time_seconds': 525.112334, 'test_accuracy': 0.76529999999999998}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 99, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0], 'train_time_seconds': 547.659506, 'test_accuracy': 0.7581}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}], 'index': 100, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3], 'train_time_seconds': 583.304301, 'test_accuracy': 0.76359999999999995}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 101, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0], 'train_time_seconds': 603.572402, 'test_accuracy': 0.76339999999999997}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 102, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 2, 3, 1, 0], 'train_time_seconds': 623.686917, 'test_accuracy': 0.7591}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 103, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 2, 3, 1, 0, 1, 2, 3, 0], 'train_time_seconds': 656.305087, 'test_accuracy': 0.75380000000000003}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 104, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 2, 3, 1, 0, 1, 2, 3, 0, 3, 2, 1, 0], 'train_time_seconds': 685.639853, 'test_accuracy': 0.76439999999999997}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 105, 'episode': 7, 'encoding': [1, 3, 2, 0], 'train_time_seconds': 397.291285, 'test_accuracy': 0.53420000000000001}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 106, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0], 'train_time_seconds': 748.507339, 'test_accuracy': 0.73029999999999995}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 107, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1], 'train_time_seconds': 989.022638, 'test_accuracy': 0.76780000000000004}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 108, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1], 'train_time_seconds': 1276.368707, 'test_accuracy': 0.79220000000000002}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 109, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0], 'train_time_seconds': 1699.364921, 'test_accuracy': 0.80959999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 110, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0], 'train_time_seconds': 2111.088991, 'test_accuracy': 0.82550000000000001}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 111, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3], 'train_time_seconds': 2104.299741, 'test_accuracy': 0.83130000000000004}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 112, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3], 'train_time_seconds': 2132.377165, 'test_accuracy': 0.83069999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 113, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0], 'train_time_seconds': 2171.730766, 'test_accuracy': 0.82840000000000003}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 114, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1], 'train_time_seconds': 2206.168697, 'test_accuracy': 0.82630000000000003}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 115, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1, 0, 2, 1, 3], 'train_time_seconds': 2242.754186, 'test_accuracy': 0.82430000000000003}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 116, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1, 0, 2, 1, 3, 1, 3, 0, 2], 'train_time_seconds': 2274.455987, 'test_accuracy': 0.82630000000000003}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 117, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1, 0, 2, 1, 3, 1, 3, 0, 2, 3, 2, 0, 1], 'train_time_seconds': 2316.529541, 'test_accuracy': 0.82720000000000005}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 118, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1, 0, 2, 1, 3, 1, 3, 0, 2, 3, 2, 0, 1, 1, 0, 3, 2], 'train_time_seconds': 2379.46011, 'test_accuracy': 0.82069999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 119, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1, 0, 2, 1, 3, 1, 3, 0, 2, 3, 2, 0, 1, 1, 0, 3, 2, 3, 0, 2, 1], 'train_time_seconds': 2433.691472, 'test_accuracy': 0.82250000000000001}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 120, 'episode': 8, 'encoding': [1, 2, 0, 3], 'train_time_seconds': 161.413152, 'test_accuracy': 0.5978}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 121, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2], 'train_time_seconds': 185.344027, 'test_accuracy': 0.6431}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 122, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2], 'train_time_seconds': 215.021043, 'test_accuracy': 0.59589999999999999}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 123, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0], 'train_time_seconds': 245.733207, 'test_accuracy': 0.61529999999999996}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 124, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1], 'train_time_seconds': 264.548333, 'test_accuracy': 0.61990000000000001}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 125, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1], 'train_time_seconds': 285.328789, 'test_accuracy': 0.60960000000000003}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 126, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0], 'train_time_seconds': 319.425223, 'test_accuracy': 0.63100000000000001}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 127, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1], 'train_time_seconds': 335.917864, 'test_accuracy': 0.61739999999999995}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 128, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1], 'train_time_seconds': 358.294132, 'test_accuracy': 0.62070000000000003}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 129, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0], 'train_time_seconds': 388.465621, 'test_accuracy': 0.6089}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 130, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0, 2, 0, 3, 1], 'train_time_seconds': 409.902896, 'test_accuracy': 0.61370000000000002}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 131, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0, 2, 0, 3, 1, 1, 3, 0, 2], 'train_time_seconds': 443.674932, 'test_accuracy': 0.61609999999999998}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 132, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0, 2, 0, 3, 1, 1, 3, 0, 2, 2, 3, 0, 1], 'train_time_seconds': 488.961076, 'test_accuracy': 0.61170000000000002}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 133, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0, 2, 0, 3, 1, 1, 3, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0], 'train_time_seconds': 511.302676, 'test_accuracy': 0.61760000000000004}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 134, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0, 2, 0, 3, 1, 1, 3, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 0, 2, 1, 3], 'train_time_seconds': 530.143553, 'test_accuracy': 0.60750000000000004}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 135, 'episode': 9, 'encoding': [2, 0, 1, 3], 'train_time_seconds': 157.400615, 'test_accuracy': 0.53779999999999994}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 136, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2], 'train_time_seconds': 196.925042, 'test_accuracy': 0.61409999999999998}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 137, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1], 'train_time_seconds': 223.804903, 'test_accuracy': 0.64980000000000004}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 138, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0], 'train_time_seconds': 257.687301, 'test_accuracy': 0.67300000000000004}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 139, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0], 'train_time_seconds': 295.501348, 'test_accuracy': 0.67579999999999996}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 140, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2], 'train_time_seconds': 324.733899, 'test_accuracy': 0.67779999999999996}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 141, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0], 'train_time_seconds': 356.384986, 'test_accuracy': 0.68010000000000004}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 142, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2], 'train_time_seconds': 402.409268, 'test_accuracy': 0.67079999999999995}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 143, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0], 'train_time_seconds': 409.400216, 'test_accuracy': 0.67449999999999999}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 144, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3], 'train_time_seconds': 421.938602, 'test_accuracy': 0.67259999999999998}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 145, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3, 3, 0, 2, 1], 'train_time_seconds': 435.248074, 'test_accuracy': 0.68240000000000001}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 146, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3, 3, 0, 2, 1, 0, 1, 2, 3], 'train_time_seconds': 462.21662, 'test_accuracy': 0.67500000000000004}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 147, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3, 3, 0, 2, 1, 0, 1, 2, 3, 2, 3, 0, 1], 'train_time_seconds': 491.823731, 'test_accuracy': 0.67259999999999998}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 148, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3, 3, 0, 2, 1, 0, 1, 2, 3, 2, 3, 0, 1, 1, 3, 0, 2], 'train_time_seconds': 512.468166, 'test_accuracy': 0.6764}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 149, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3, 3, 0, 2, 1, 0, 1, 2, 3, 2, 3, 0, 1, 1, 3, 0, 2, 1, 2, 0, 3], 'train_time_seconds': 537.465466, 'test_accuracy': 0.66690000000000005}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 150, 'episode': 10, 'encoding': [0, 1, 3, 2], 'train_time_seconds': 204.35711, 'test_accuracy': 0.52669999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 151, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0], 'train_time_seconds': 324.407284, 'test_accuracy': 0.69799999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 152, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0], 'train_time_seconds': 445.498025, 'test_accuracy': 0.76629999999999998}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 153, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3], 'train_time_seconds': 473.396815, 'test_accuracy': 0.77300000000000002}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 154, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0], 'train_time_seconds': 518.905977, 'test_accuracy': 0.78359999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 155, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2], 'train_time_seconds': 548.873619, 'test_accuracy': 0.78849999999999998}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 156, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3], 'train_time_seconds': 574.437914, 'test_accuracy': 0.74019999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 157, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0], 'train_time_seconds': 607.126441, 'test_accuracy': 0.74209999999999998}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 158, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0], 'train_time_seconds': 633.15937, 'test_accuracy': 0.7379}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 159, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1], 'train_time_seconds': 666.399921, 'test_accuracy': 0.73819999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 160, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1, 2, 3, 0, 1], 'train_time_seconds': 690.871556, 'test_accuracy': 0.72729999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 161, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1, 2, 3, 0, 1, 1, 2, 3, 0], 'train_time_seconds': 730.167116, 'test_accuracy': 0.72819999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 162, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1, 2, 3, 0, 1, 1, 2, 3, 0, 1, 3, 0, 2], 'train_time_seconds': 754.783345, 'test_accuracy': 0.73229999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 163, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1, 2, 3, 0, 1, 1, 2, 3, 0, 1, 3, 0, 2, 1, 2, 0, 3], 'train_time_seconds': 785.892116, 'test_accuracy': 0.72750000000000004}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 164, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1, 2, 3, 0, 1, 1, 2, 3, 0, 1, 3, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1], 'train_time_seconds': 814.671564, 'test_accuracy': 0.73280000000000001}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 165, 'episode': 11, 'encoding': [2, 0, 1, 3], 'train_time_seconds': 157.271983, 'test_accuracy': 0.52690000000000003}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 166, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0], 'train_time_seconds': 233.474871, 'test_accuracy': 0.65869999999999995}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 167, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3], 'train_time_seconds': 262.682646, 'test_accuracy': 0.66420000000000001}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 168, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2], 'train_time_seconds': 297.093558, 'test_accuracy': 0.66069999999999995}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 169, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1], 'train_time_seconds': 325.904775, 'test_accuracy': 0.66359999999999997}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 170, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0], 'train_time_seconds': 355.178112, 'test_accuracy': 0.6724}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 171, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2], 'train_time_seconds': 391.736665, 'test_accuracy': 0.66679999999999995}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 172, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3], 'train_time_seconds': 439.901093, 'test_accuracy': 0.66990000000000005}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 173, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2], 'train_time_seconds': 456.230258, 'test_accuracy': 0.65820000000000001}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 174, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2], 'train_time_seconds': 496.393112, 'test_accuracy': 0.65529999999999999}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 175, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2, 2, 1, 3, 0], 'train_time_seconds': 530.433642, 'test_accuracy': 0.65849999999999997}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 176, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2, 2, 1, 3, 0, 2, 3, 0, 1], 'train_time_seconds': 559.024114, 'test_accuracy': 0.65629999999999999}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 177, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2, 2, 1, 3, 0, 2, 3, 0, 1, 1, 0, 3, 2], 'train_time_seconds': 596.622685, 'test_accuracy': 0.65110000000000001}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 178, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2, 2, 1, 3, 0, 2, 3, 0, 1, 1, 0, 3, 2, 1, 2, 0, 3], 'train_time_seconds': 616.373219, 'test_accuracy': 0.65580000000000005}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 179, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2, 2, 1, 3, 0, 2, 3, 0, 1, 1, 0, 3, 2, 1, 2, 0, 3, 0, 3, 2, 1], 'train_time_seconds': 676.854992, 'test_accuracy': 0.65059999999999996}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 180, 'episode': 12, 'encoding': [3, 2, 0, 1], 'train_time_seconds': 293.76242, 'test_accuracy': 0.55510000000000004}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 181, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1], 'train_time_seconds': 551.089466, 'test_accuracy': 0.69889999999999997}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 182, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0], 'train_time_seconds': 950.409513, 'test_accuracy': 0.75729999999999997}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 183, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2], 'train_time_seconds': 1036.382422, 'test_accuracy': 0.76900000000000002}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 184, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0], 'train_time_seconds': 1154.141058, 'test_accuracy': 0.81140000000000001}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 185, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0], 'train_time_seconds': 1269.286342, 'test_accuracy': 0.82820000000000005}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 186, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1], 'train_time_seconds': 1363.497621, 'test_accuracy': 0.83960000000000001}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 187, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3], 'train_time_seconds': 1403.803183, 'test_accuracy': 0.83540000000000003}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 188, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1], 'train_time_seconds': 1446.00596, 'test_accuracy': 0.84099999999999997}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 189, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2], 'train_time_seconds': 1507.046853, 'test_accuracy': 0.84509999999999996}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 190, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2, 0, 1, 3, 2], 'train_time_seconds': 1530.718416, 'test_accuracy': 0.84450000000000003}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 191, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2, 0, 1, 3, 2, 0, 3, 2, 1], 'train_time_seconds': 1558.745384, 'test_accuracy': 0.83979999999999999}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 192, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 0, 3], 'train_time_seconds': 1599.975824, 'test_accuracy': 0.84260000000000002}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 193, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 0, 3, 1, 3, 2, 0], 'train_time_seconds': 1650.997569, 'test_accuracy': 0.84060000000000001}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 194, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 0, 3, 1, 3, 2, 0, 1, 3, 2, 0], 'train_time_seconds': 1690.082677, 'test_accuracy': 0.83389999999999997}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 195, 'episode': 13, 'encoding': [3, 0, 2, 1], 'train_time_seconds': 365.873635, 'test_accuracy': 0.4556}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 196, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1], 'train_time_seconds': 598.482514, 'test_accuracy': 0.61229999999999996}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 197, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1], 'train_time_seconds': 842.344528, 'test_accuracy': 0.70999999999999996}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 198, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1], 'train_time_seconds': 1157.51381, 'test_accuracy': 0.75229999999999997}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 199, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1], 'train_time_seconds': 1424.06651, 'test_accuracy': 0.78280000000000005}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 200, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1], 'train_time_seconds': 1738.255843, 'test_accuracy': 0.79020000000000001}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 201, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0], 'train_time_seconds': 2140.066035, 'test_accuracy': 0.80230000000000001}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 202, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3], 'train_time_seconds': 2160.915993, 'test_accuracy': 0.81859999999999999}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 203, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1], 'train_time_seconds': 2207.766397, 'test_accuracy': 0.83160000000000001}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 204, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2], 'train_time_seconds': 2235.92257, 'test_accuracy': 0.82840000000000003}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 205, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2, 3, 1, 2, 0], 'train_time_seconds': 2272.867442, 'test_accuracy': 0.83360000000000001}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 206, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2, 3, 1, 2, 0, 1, 3, 2, 0], 'train_time_seconds': 2307.68152, 'test_accuracy': 0.83799999999999997}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 207, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2, 3, 1, 2, 0, 1, 3, 2, 0, 0, 1, 2, 3], 'train_time_seconds': 2328.187231, 'test_accuracy': 0.84199999999999997}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 208, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2, 3, 1, 2, 0, 1, 3, 2, 0, 0, 1, 2, 3, 2, 3, 0, 1], 'train_time_seconds': 2362.919202, 'test_accuracy': 0.83740000000000003}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 209, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2, 3, 1, 2, 0, 1, 3, 2, 0, 0, 1, 2, 3, 2, 3, 0, 1, 2, 3, 1, 0], 'train_time_seconds': 2384.74204, 'test_accuracy': 0.83199999999999996}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 210, 'episode': 14, 'encoding': [1, 0, 3, 2], 'train_time_seconds': 200.91298, 'test_accuracy': 0.50819999999999999}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 211, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3], 'train_time_seconds': 204.204818, 'test_accuracy': 0.60199999999999998}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 212, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2], 'train_time_seconds': 234.25001, 'test_accuracy': 0.59370000000000001}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 213, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1], 'train_time_seconds': 260.086691, 'test_accuracy': 0.60860000000000003}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 214, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0], 'train_time_seconds': 290.663732, 'test_accuracy': 0.625}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 215, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1], 'train_time_seconds': 314.332969, 'test_accuracy': 0.62939999999999996}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 216, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0], 'train_time_seconds': 337.433161, 'test_accuracy': 0.62570000000000003}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 217, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3], 'train_time_seconds': 363.36702, 'test_accuracy': 0.6169}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 218, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2], 'train_time_seconds': 388.91541, 'test_accuracy': 0.61760000000000004}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 219, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0], 'train_time_seconds': 416.198265, 'test_accuracy': 0.62660000000000005}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 220, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0, 1, 2, 3, 0], 'train_time_seconds': 437.925206, 'test_accuracy': 0.62260000000000004}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 221, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0, 1, 2, 3, 0, 2, 3, 1, 0], 'train_time_seconds': 458.853452, 'test_accuracy': 0.61209999999999998}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 222, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0, 1, 2, 3, 0, 2, 3, 1, 0, 1, 3, 0, 2], 'train_time_seconds': 479.228323, 'test_accuracy': 0.61339999999999995}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 223, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0, 1, 2, 3, 0, 2, 3, 1, 0, 1, 3, 0, 2, 3, 1, 0, 2], 'train_time_seconds': 498.58568, 'test_accuracy': 0.60960000000000003}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 224, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0, 1, 2, 3, 0, 2, 3, 1, 0, 1, 3, 0, 2, 3, 1, 0, 2, 3, 0, 2, 1], 'train_time_seconds': 519.7138, 'test_accuracy': 0.61019999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 225, 'episode': 15, 'encoding': [0, 1, 3, 2], 'train_time_seconds': 199.220851, 'test_accuracy': 0.52270000000000005}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 226, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0], 'train_time_seconds': 312.060704, 'test_accuracy': 0.70289999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 227, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0], 'train_time_seconds': 429.476669, 'test_accuracy': 0.7641}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 228, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2], 'train_time_seconds': 465.341865, 'test_accuracy': 0.77780000000000005}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 229, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3], 'train_time_seconds': 495.706224, 'test_accuracy': 0.77470000000000006}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 230, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0], 'train_time_seconds': 521.955509, 'test_accuracy': 0.78849999999999998}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 231, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1], 'train_time_seconds': 536.656378, 'test_accuracy': 0.77800000000000002}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 232, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0], 'train_time_seconds': 566.993774, 'test_accuracy': 0.78059999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 233, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2], 'train_time_seconds': 589.901111, 'test_accuracy': 0.78200000000000003}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 234, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 0, 3, 2], 'train_time_seconds': 621.67322, 'test_accuracy': 0.78049999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 235, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 0, 3, 2, 0, 3, 2, 1], 'train_time_seconds': 654.441952, 'test_accuracy': 0.77990000000000004}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 236, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 0, 3, 2, 0, 3, 2, 1, 3, 0, 2, 1], 'train_time_seconds': 680.37746, 'test_accuracy': 0.77690000000000003}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 237, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 0, 3, 2, 0, 3, 2, 1, 3, 0, 2, 1, 0, 1, 3, 2], 'train_time_seconds': 718.327948, 'test_accuracy': 0.78200000000000003}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 238, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 0, 3, 2, 0, 3, 2, 1, 3, 0, 2, 1, 0, 1, 3, 2, 2, 0, 3, 1], 'train_time_seconds': 739.12453, 'test_accuracy': 0.77170000000000005}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 239, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 0, 3, 2, 0, 3, 2, 1, 3, 0, 2, 1, 0, 1, 3, 2, 2, 0, 3, 1, 3, 2, 1, 0], 'train_time_seconds': 756.728983, 'test_accuracy': 0.78059999999999996}]
episode: 0
0
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 0, 'episode': 0, 'encoding': [1, 3, 2, 0], 'train_time_seconds': 368.049252, 'test_accuracy': 0.54039999999999999}
1
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 1, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2], 'train_time_seconds': 408.275522, 'test_accuracy': 0.70669999999999999}
2
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 2, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1], 'train_time_seconds': 475.116003, 'test_accuracy': 0.74450000000000005}
3
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 3, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0], 'train_time_seconds': 573.275197, 'test_accuracy': 0.78920000000000001}
4
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 4, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3], 'train_time_seconds': 610.236321, 'test_accuracy': 0.7974}
5
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}], 'index': 5, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3], 'train_time_seconds': 616.56595, 'test_accuracy': 0.76959999999999995}
6
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 6, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2], 'train_time_seconds': 638.756012, 'test_accuracy': 0.71870000000000001}
7
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 7, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3], 'train_time_seconds': 673.490203, 'test_accuracy': 0.71870000000000001}
8
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 8, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0], 'train_time_seconds': 701.666276, 'test_accuracy': 0.72009999999999996}
9
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 9, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2], 'train_time_seconds': 734.279322, 'test_accuracy': 0.71040000000000003}
10
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 10, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2, 0, 2, 1, 3], 'train_time_seconds': 759.138101, 'test_accuracy': 0.71120000000000005}
11
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 11, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2, 0, 2, 1, 3, 0, 2, 1, 3], 'train_time_seconds': 785.593478, 'test_accuracy': 0.7016}
12
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 12, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2, 0, 2, 1, 3, 0, 2, 1, 3, 2, 0, 3, 1], 'train_time_seconds': 811.026095, 'test_accuracy': 0.70509999999999995}
13
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 13, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2, 0, 2, 1, 3, 0, 2, 1, 3, 2, 0, 3, 1, 1, 0, 3, 2], 'train_time_seconds': 836.35241, 'test_accuracy': 0.70469999999999999}
14
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 14, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2, 0, 2, 1, 3, 0, 2, 1, 3, 2, 0, 3, 1, 1, 0, 3, 2, 0, 3, 1, 2], 'train_time_seconds': 858.769875, 'test_accuracy': 0.69899999999999995}
episode: 1
0
{'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 15, 'episode': 1, 'encoding': [0, 1, 2, 3], 'train_time_seconds': 150.175051, 'test_accuracy': 0.52459999999999996}
1
{'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 16, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1], 'train_time_seconds': 189.038294, 'test_accuracy': 0.61439999999999995}
2
{'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 17, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1], 'train_time_seconds': 250.080138, 'test_accuracy': 0.68889999999999996}
3
{'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 18, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1], 'train_time_seconds': 288.146287, 'test_accuracy': 0.70369999999999999}
4
{'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 19, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3], 'train_time_seconds': 310.580743, 'test_accuracy': 0.67169999999999996}
5
{'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 20, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0], 'train_time_seconds': 341.077389, 'test_accuracy': 0.69030000000000002}
6
{'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 21, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2], 'train_time_seconds': 369.405306, 'test_accuracy': 0.69579999999999997}
7
{'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 22, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1], 'train_time_seconds': 397.396746, 'test_accuracy': 0.69259999999999999}
8
{'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 23, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0], 'train_time_seconds': 423.511957, 'test_accuracy': 0.6865}
9
{'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 24, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0], 'train_time_seconds': 446.028381, 'test_accuracy': 0.69640000000000002}
10
{'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 25, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0, 3, 2, 1, 0], 'train_time_seconds': 473.146224, 'test_accuracy': 0.69279999999999997}
11
{'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 26, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0, 3, 2, 1, 0, 0, 3, 2, 1], 'train_time_seconds': 495.503059, 'test_accuracy': 0.6875}
12
{'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 27, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0, 3, 2, 1, 0, 0, 3, 2, 1, 3, 0, 1, 2], 'train_time_seconds': 519.678454, 'test_accuracy': 0.69220000000000004}
13
{'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 28, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0, 3, 2, 1, 0, 0, 3, 2, 1, 3, 0, 1, 2, 2, 3, 1, 0], 'train_time_seconds': 542.799009, 'test_accuracy': 0.69099999999999995}
14
{'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 29, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0, 3, 2, 1, 0, 0, 3, 2, 1, 3, 0, 1, 2, 2, 3, 1, 0, 0, 1, 2, 3], 'train_time_seconds': 565.664945, 'test_accuracy': 0.68340000000000001}
episode: 2
0
{'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 30, 'episode': 2, 'encoding': [3, 0, 2, 1], 'train_time_seconds': 363.186491, 'test_accuracy': 0.46729999999999999}
1
{'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 31, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0], 'train_time_seconds': 734.629674, 'test_accuracy': 0.68469999999999998}
2
{'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 32, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3], 'train_time_seconds': 755.385455, 'test_accuracy': 0.73999999999999999}
3
{'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 33, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2], 'train_time_seconds': 790.358784, 'test_accuracy': 0.73740000000000006}
4
{'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 34, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3], 'train_time_seconds': 818.245828, 'test_accuracy': 0.73909999999999998}
5
{'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 35, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0], 'train_time_seconds': 850.62952, 'test_accuracy': 0.7429}
6
{'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 36, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0], 'train_time_seconds': 878.000302, 'test_accuracy': 0.75749999999999995}
7
{'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 37, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0], 'train_time_seconds': 910.815702, 'test_accuracy': 0.76060000000000005}
8
{'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 38, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0], 'train_time_seconds': 932.361959, 'test_accuracy': 0.75309999999999999}
9
{'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 39, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2], 'train_time_seconds': 971.975253, 'test_accuracy': 0.74570000000000003}
10
{'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 40, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1], 'train_time_seconds': 991.470465, 'test_accuracy': 0.74160000000000004}
11
{'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 41, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 0, 2, 3, 1], 'train_time_seconds': 1013.129267, 'test_accuracy': 0.73560000000000003}
12
{'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 42, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 0, 2, 3, 1, 1, 2, 3, 0], 'train_time_seconds': 1039.030533, 'test_accuracy': 0.73950000000000005}
13
{'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 43, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 0, 2, 3, 1, 1, 2, 3, 0, 2, 0, 3, 1], 'train_time_seconds': 1061.343818, 'test_accuracy': 0.73560000000000003}
14
{'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 44, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 0, 2, 3, 1, 1, 2, 3, 0, 2, 0, 3, 1, 1, 0, 3, 2], 'train_time_seconds': 1090.086285, 'test_accuracy': 0.7359}
episode: 3
0
{'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 45, 'episode': 3, 'encoding': [0, 1, 2, 3], 'train_time_seconds': 154.492417, 'test_accuracy': 0.52590000000000003}
1
{'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 46, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2], 'train_time_seconds': 177.56699, 'test_accuracy': 0.59079999999999999}
2
{'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 47, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0], 'train_time_seconds': 216.361385, 'test_accuracy': 0.64070000000000005}
3
{'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 48, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3], 'train_time_seconds': 244.415507, 'test_accuracy': 0.6482}
4
{'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 49, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3], 'train_time_seconds': 271.270051, 'test_accuracy': 0.64049999999999996}
5
{'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 50, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3], 'train_time_seconds': 293.775519, 'test_accuracy': 0.64200000000000002}
6
{'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 51, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2], 'train_time_seconds': 321.128231, 'test_accuracy': 0.63749999999999996}
7
{'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 52, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0], 'train_time_seconds': 350.131566, 'test_accuracy': 0.64039999999999997}
8
{'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 53, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1], 'train_time_seconds': 379.47718, 'test_accuracy': 0.6351}
9
{'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 54, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3], 'train_time_seconds': 402.270577, 'test_accuracy': 0.62239999999999995}
10
{'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 55, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3, 0, 2, 3, 1], 'train_time_seconds': 422.82807, 'test_accuracy': 0.627}
11
{'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 56, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3, 0, 2, 3, 1, 3, 2, 0, 1], 'train_time_seconds': 440.262341, 'test_accuracy': 0.63019999999999998}
12
{'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 57, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3, 0, 2, 3, 1, 3, 2, 0, 1, 3, 2, 1, 0], 'train_time_seconds': 465.008078, 'test_accuracy': 0.62660000000000005}
13
{'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 58, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3, 0, 2, 3, 1, 3, 2, 0, 1, 3, 2, 1, 0, 1, 2, 0, 3], 'train_time_seconds': 487.055249, 'test_accuracy': 0.62949999999999995}
14
{'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 59, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3, 0, 2, 3, 1, 3, 2, 0, 1, 3, 2, 1, 0, 1, 2, 0, 3, 1, 0, 3, 2], 'train_time_seconds': 513.123642, 'test_accuracy': 0.62309999999999999}
episode: 4
0
{'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 60, 'episode': 4, 'encoding': [2, 3, 0, 1], 'train_time_seconds': 267.085217, 'test_accuracy': 0.54620000000000002}
1
{'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 61, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3], 'train_time_seconds': 284.421141, 'test_accuracy': 0.68279999999999996}
2
{'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 62, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0], 'train_time_seconds': 338.823722, 'test_accuracy': 0.75360000000000005}
3
{'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 63, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2], 'train_time_seconds': 364.37943, 'test_accuracy': 0.77049999999999996}
4
{'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 64, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1], 'train_time_seconds': 395.799564, 'test_accuracy': 0.76759999999999995}
5
{'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 65, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1], 'train_time_seconds': 428.267988, 'test_accuracy': 0.7681}
6
{'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 66, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3], 'train_time_seconds': 449.424833, 'test_accuracy': 0.78010000000000002}
7
{'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 67, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3], 'train_time_seconds': 475.862533, 'test_accuracy': 0.77280000000000004}
8
{'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 68, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3], 'train_time_seconds': 502.726014, 'test_accuracy': 0.77569999999999995}
9
{'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 69, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2], 'train_time_seconds': 524.395997, 'test_accuracy': 0.76919999999999999}
10
{'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 70, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2, 3, 1, 2, 0], 'train_time_seconds': 550.039473, 'test_accuracy': 0.77190000000000003}
11
{'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 71, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2, 3, 1, 2, 0, 3, 1, 0, 2], 'train_time_seconds': 580.835388, 'test_accuracy': 0.76659999999999995}
12
{'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 72, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2, 3, 1, 2, 0, 3, 1, 0, 2, 2, 0, 1, 3], 'train_time_seconds': 617.589614, 'test_accuracy': 0.76980000000000004}
13
{'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 73, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2, 3, 1, 2, 0, 3, 1, 0, 2, 2, 0, 1, 3, 3, 1, 2, 0], 'train_time_seconds': 621.520654, 'test_accuracy': 0.77159999999999995}
14
{'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}], 'index': 74, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2, 3, 1, 2, 0, 3, 1, 0, 2, 2, 0, 1, 3, 3, 1, 2, 0, 1, 0, 2, 3], 'train_time_seconds': 646.391962, 'test_accuracy': 0.7702}
episode: 5
0
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 75, 'episode': 5, 'encoding': [1, 3, 2, 0], 'train_time_seconds': 378.526842, 'test_accuracy': 0.54700000000000004}
1
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 76, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1], 'train_time_seconds': 613.117144, 'test_accuracy': 0.71630000000000005}
2
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 77, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2], 'train_time_seconds': 672.673485, 'test_accuracy': 0.76419999999999999}
3
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 78, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3], 'train_time_seconds': 697.167486, 'test_accuracy': 0.77470000000000006}
4
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 79, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2], 'train_time_seconds': 732.365333, 'test_accuracy': 0.7802}
5
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 80, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2], 'train_time_seconds': 763.005842, 'test_accuracy': 0.75790000000000002}
6
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 81, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2], 'train_time_seconds': 792.734367, 'test_accuracy': 0.72540000000000004}
7
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 82, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2], 'train_time_seconds': 831.112687, 'test_accuracy': 0.72389999999999999}
8
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 83, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3], 'train_time_seconds': 842.719176, 'test_accuracy': 0.72230000000000005}
9
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 84, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1], 'train_time_seconds': 863.49351, 'test_accuracy': 0.71289999999999998}
10
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 85, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1, 0, 2, 3, 1], 'train_time_seconds': 896.333535, 'test_accuracy': 0.71760000000000002}
11
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 86, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1, 0, 2, 3, 1, 1, 2, 0, 3], 'train_time_seconds': 938.671745, 'test_accuracy': 0.7087}
12
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 87, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1, 0, 2, 3, 1, 1, 2, 0, 3, 1, 0, 3, 2], 'train_time_seconds': 966.307771, 'test_accuracy': 0.70109999999999995}
13
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 88, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1, 0, 2, 3, 1, 1, 2, 0, 3, 1, 0, 3, 2, 2, 0, 1, 3], 'train_time_seconds': 982.092296, 'test_accuracy': 0.69510000000000005}
14
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 89, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1, 0, 2, 3, 1, 1, 2, 0, 3, 1, 0, 3, 2, 2, 0, 1, 3, 0, 2, 3, 1], 'train_time_seconds': 1005.653968, 'test_accuracy': 0.70760000000000001}
episode: 6
0
{'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 90, 'episode': 6, 'encoding': [1, 0, 3, 2], 'train_time_seconds': 217.36723, 'test_accuracy': 0.50649999999999995}
1
{'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 91, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0], 'train_time_seconds': 325.730985, 'test_accuracy': 0.68720000000000003}
2
{'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 92, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2], 'train_time_seconds': 354.765124, 'test_accuracy': 0.72430000000000005}
3
{'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 93, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1], 'train_time_seconds': 383.179029, 'test_accuracy': 0.74270000000000003}
4
{'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 94, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0], 'train_time_seconds': 422.943928, 'test_accuracy': 0.77510000000000001}
5
{'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 95, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3], 'train_time_seconds': 446.665906, 'test_accuracy': 0.7581}
6
{'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 96, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1], 'train_time_seconds': 467.661666, 'test_accuracy': 0.76160000000000005}
7
{'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 97, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0], 'train_time_seconds': 494.685742, 'test_accuracy': 0.76100000000000001}
8
{'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 98, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2], 'train_time_seconds': 525.112334, 'test_accuracy': 0.76529999999999998}
9
{'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 99, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0], 'train_time_seconds': 547.659506, 'test_accuracy': 0.7581}
10
{'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}], 'index': 100, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3], 'train_time_seconds': 583.304301, 'test_accuracy': 0.76359999999999995}
11
{'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 101, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0], 'train_time_seconds': 603.572402, 'test_accuracy': 0.76339999999999997}
12
{'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 102, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 2, 3, 1, 0], 'train_time_seconds': 623.686917, 'test_accuracy': 0.7591}
13
{'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 103, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 2, 3, 1, 0, 1, 2, 3, 0], 'train_time_seconds': 656.305087, 'test_accuracy': 0.75380000000000003}
14
{'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 104, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 2, 3, 1, 0, 1, 2, 3, 0, 3, 2, 1, 0], 'train_time_seconds': 685.639853, 'test_accuracy': 0.76439999999999997}
episode: 7
0
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 105, 'episode': 7, 'encoding': [1, 3, 2, 0], 'train_time_seconds': 397.291285, 'test_accuracy': 0.53420000000000001}
1
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 106, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0], 'train_time_seconds': 748.507339, 'test_accuracy': 0.73029999999999995}
2
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 107, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1], 'train_time_seconds': 989.022638, 'test_accuracy': 0.76780000000000004}
3
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 108, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1], 'train_time_seconds': 1276.368707, 'test_accuracy': 0.79220000000000002}
4
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 109, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0], 'train_time_seconds': 1699.364921, 'test_accuracy': 0.80959999999999999}
5
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 110, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0], 'train_time_seconds': 2111.088991, 'test_accuracy': 0.82550000000000001}
6
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 111, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3], 'train_time_seconds': 2104.299741, 'test_accuracy': 0.83130000000000004}
7
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 112, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3], 'train_time_seconds': 2132.377165, 'test_accuracy': 0.83069999999999999}
8
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 113, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0], 'train_time_seconds': 2171.730766, 'test_accuracy': 0.82840000000000003}
9
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 114, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1], 'train_time_seconds': 2206.168697, 'test_accuracy': 0.82630000000000003}
10
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 115, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1, 0, 2, 1, 3], 'train_time_seconds': 2242.754186, 'test_accuracy': 0.82430000000000003}
11
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 116, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1, 0, 2, 1, 3, 1, 3, 0, 2], 'train_time_seconds': 2274.455987, 'test_accuracy': 0.82630000000000003}
12
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 117, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1, 0, 2, 1, 3, 1, 3, 0, 2, 3, 2, 0, 1], 'train_time_seconds': 2316.529541, 'test_accuracy': 0.82720000000000005}
13
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 118, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1, 0, 2, 1, 3, 1, 3, 0, 2, 3, 2, 0, 1, 1, 0, 3, 2], 'train_time_seconds': 2379.46011, 'test_accuracy': 0.82069999999999999}
14
{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 119, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1, 0, 2, 1, 3, 1, 3, 0, 2, 3, 2, 0, 1, 1, 0, 3, 2, 3, 0, 2, 1], 'train_time_seconds': 2433.691472, 'test_accuracy': 0.82250000000000001}
episode: 8
0
{'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 120, 'episode': 8, 'encoding': [1, 2, 0, 3], 'train_time_seconds': 161.413152, 'test_accuracy': 0.5978}
1
{'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 121, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2], 'train_time_seconds': 185.344027, 'test_accuracy': 0.6431}
2
{'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 122, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2], 'train_time_seconds': 215.021043, 'test_accuracy': 0.59589999999999999}
3
{'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 123, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0], 'train_time_seconds': 245.733207, 'test_accuracy': 0.61529999999999996}
4
{'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 124, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1], 'train_time_seconds': 264.548333, 'test_accuracy': 0.61990000000000001}
5
{'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 125, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1], 'train_time_seconds': 285.328789, 'test_accuracy': 0.60960000000000003}
6
{'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 126, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0], 'train_time_seconds': 319.425223, 'test_accuracy': 0.63100000000000001}
7
{'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 127, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1], 'train_time_seconds': 335.917864, 'test_accuracy': 0.61739999999999995}
8
{'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 128, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1], 'train_time_seconds': 358.294132, 'test_accuracy': 0.62070000000000003}
9
{'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 129, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0], 'train_time_seconds': 388.465621, 'test_accuracy': 0.6089}
10
{'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 130, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0, 2, 0, 3, 1], 'train_time_seconds': 409.902896, 'test_accuracy': 0.61370000000000002}
11
{'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 131, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0, 2, 0, 3, 1, 1, 3, 0, 2], 'train_time_seconds': 443.674932, 'test_accuracy': 0.61609999999999998}
12
{'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 132, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0, 2, 0, 3, 1, 1, 3, 0, 2, 2, 3, 0, 1], 'train_time_seconds': 488.961076, 'test_accuracy': 0.61170000000000002}
13
{'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 133, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0, 2, 0, 3, 1, 1, 3, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0], 'train_time_seconds': 511.302676, 'test_accuracy': 0.61760000000000004}
14
{'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 134, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0, 2, 0, 3, 1, 1, 3, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 0, 2, 1, 3], 'train_time_seconds': 530.143553, 'test_accuracy': 0.60750000000000004}
episode: 9
0
{'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 135, 'episode': 9, 'encoding': [2, 0, 1, 3], 'train_time_seconds': 157.400615, 'test_accuracy': 0.53779999999999994}
1
{'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 136, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2], 'train_time_seconds': 196.925042, 'test_accuracy': 0.61409999999999998}
2
{'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 137, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1], 'train_time_seconds': 223.804903, 'test_accuracy': 0.64980000000000004}
3
{'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 138, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0], 'train_time_seconds': 257.687301, 'test_accuracy': 0.67300000000000004}
4
{'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 139, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0], 'train_time_seconds': 295.501348, 'test_accuracy': 0.67579999999999996}
5
{'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 140, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2], 'train_time_seconds': 324.733899, 'test_accuracy': 0.67779999999999996}
6
{'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 141, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0], 'train_time_seconds': 356.384986, 'test_accuracy': 0.68010000000000004}
7
{'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 142, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2], 'train_time_seconds': 402.409268, 'test_accuracy': 0.67079999999999995}
8
{'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 143, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0], 'train_time_seconds': 409.400216, 'test_accuracy': 0.67449999999999999}
9
{'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 144, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3], 'train_time_seconds': 421.938602, 'test_accuracy': 0.67259999999999998}
10
{'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 145, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3, 3, 0, 2, 1], 'train_time_seconds': 435.248074, 'test_accuracy': 0.68240000000000001}
11
{'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 146, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3, 3, 0, 2, 1, 0, 1, 2, 3], 'train_time_seconds': 462.21662, 'test_accuracy': 0.67500000000000004}
12
{'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 147, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3, 3, 0, 2, 1, 0, 1, 2, 3, 2, 3, 0, 1], 'train_time_seconds': 491.823731, 'test_accuracy': 0.67259999999999998}
13
{'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 148, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3, 3, 0, 2, 1, 0, 1, 2, 3, 2, 3, 0, 1, 1, 3, 0, 2], 'train_time_seconds': 512.468166, 'test_accuracy': 0.6764}
14
{'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 149, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3, 3, 0, 2, 1, 0, 1, 2, 3, 2, 3, 0, 1, 1, 3, 0, 2, 1, 2, 0, 3], 'train_time_seconds': 537.465466, 'test_accuracy': 0.66690000000000005}
episode: 10
0
{'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 150, 'episode': 10, 'encoding': [0, 1, 3, 2], 'train_time_seconds': 204.35711, 'test_accuracy': 0.52669999999999995}
1
{'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 151, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0], 'train_time_seconds': 324.407284, 'test_accuracy': 0.69799999999999995}
2
{'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 152, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0], 'train_time_seconds': 445.498025, 'test_accuracy': 0.76629999999999998}
3
{'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 153, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3], 'train_time_seconds': 473.396815, 'test_accuracy': 0.77300000000000002}
4
{'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 154, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0], 'train_time_seconds': 518.905977, 'test_accuracy': 0.78359999999999996}
5
{'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 155, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2], 'train_time_seconds': 548.873619, 'test_accuracy': 0.78849999999999998}
6
{'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 156, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3], 'train_time_seconds': 574.437914, 'test_accuracy': 0.74019999999999997}
7
{'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 157, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0], 'train_time_seconds': 607.126441, 'test_accuracy': 0.74209999999999998}
8
{'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 158, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0], 'train_time_seconds': 633.15937, 'test_accuracy': 0.7379}
9
{'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 159, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1], 'train_time_seconds': 666.399921, 'test_accuracy': 0.73819999999999997}
10
{'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 160, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1, 2, 3, 0, 1], 'train_time_seconds': 690.871556, 'test_accuracy': 0.72729999999999995}
11
{'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 161, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1, 2, 3, 0, 1, 1, 2, 3, 0], 'train_time_seconds': 730.167116, 'test_accuracy': 0.72819999999999996}
12
{'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 162, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1, 2, 3, 0, 1, 1, 2, 3, 0, 1, 3, 0, 2], 'train_time_seconds': 754.783345, 'test_accuracy': 0.73229999999999995}
13
{'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 163, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1, 2, 3, 0, 1, 1, 2, 3, 0, 1, 3, 0, 2, 1, 2, 0, 3], 'train_time_seconds': 785.892116, 'test_accuracy': 0.72750000000000004}
14
{'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 164, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1, 2, 3, 0, 1, 1, 2, 3, 0, 1, 3, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1], 'train_time_seconds': 814.671564, 'test_accuracy': 0.73280000000000001}
episode: 11
0
{'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 165, 'episode': 11, 'encoding': [2, 0, 1, 3], 'train_time_seconds': 157.271983, 'test_accuracy': 0.52690000000000003}
1
{'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 166, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0], 'train_time_seconds': 233.474871, 'test_accuracy': 0.65869999999999995}
2
{'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 167, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3], 'train_time_seconds': 262.682646, 'test_accuracy': 0.66420000000000001}
3
{'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 168, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2], 'train_time_seconds': 297.093558, 'test_accuracy': 0.66069999999999995}
4
{'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 169, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1], 'train_time_seconds': 325.904775, 'test_accuracy': 0.66359999999999997}
5
{'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 170, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0], 'train_time_seconds': 355.178112, 'test_accuracy': 0.6724}
6
{'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 171, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2], 'train_time_seconds': 391.736665, 'test_accuracy': 0.66679999999999995}
7
{'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 172, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3], 'train_time_seconds': 439.901093, 'test_accuracy': 0.66990000000000005}
8
{'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 173, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2], 'train_time_seconds': 456.230258, 'test_accuracy': 0.65820000000000001}
9
{'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 174, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2], 'train_time_seconds': 496.393112, 'test_accuracy': 0.65529999999999999}
10
{'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 175, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2, 2, 1, 3, 0], 'train_time_seconds': 530.433642, 'test_accuracy': 0.65849999999999997}
11
{'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 176, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2, 2, 1, 3, 0, 2, 3, 0, 1], 'train_time_seconds': 559.024114, 'test_accuracy': 0.65629999999999999}
12
{'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 177, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2, 2, 1, 3, 0, 2, 3, 0, 1, 1, 0, 3, 2], 'train_time_seconds': 596.622685, 'test_accuracy': 0.65110000000000001}
13
{'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 178, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2, 2, 1, 3, 0, 2, 3, 0, 1, 1, 0, 3, 2, 1, 2, 0, 3], 'train_time_seconds': 616.373219, 'test_accuracy': 0.65580000000000005}
14
{'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 179, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2, 2, 1, 3, 0, 2, 3, 0, 1, 1, 0, 3, 2, 1, 2, 0, 3, 0, 3, 2, 1], 'train_time_seconds': 676.854992, 'test_accuracy': 0.65059999999999996}
episode: 12
0
{'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 180, 'episode': 12, 'encoding': [3, 2, 0, 1], 'train_time_seconds': 293.76242, 'test_accuracy': 0.55510000000000004}
1
{'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 181, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1], 'train_time_seconds': 551.089466, 'test_accuracy': 0.69889999999999997}
2
{'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 182, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0], 'train_time_seconds': 950.409513, 'test_accuracy': 0.75729999999999997}
3
{'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 183, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2], 'train_time_seconds': 1036.382422, 'test_accuracy': 0.76900000000000002}
4
{'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 184, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0], 'train_time_seconds': 1154.141058, 'test_accuracy': 0.81140000000000001}
5
{'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 185, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0], 'train_time_seconds': 1269.286342, 'test_accuracy': 0.82820000000000005}
6
{'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 186, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1], 'train_time_seconds': 1363.497621, 'test_accuracy': 0.83960000000000001}
7
{'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 187, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3], 'train_time_seconds': 1403.803183, 'test_accuracy': 0.83540000000000003}
8
{'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 188, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1], 'train_time_seconds': 1446.00596, 'test_accuracy': 0.84099999999999997}
9
{'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 189, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2], 'train_time_seconds': 1507.046853, 'test_accuracy': 0.84509999999999996}
10
{'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 190, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2, 0, 1, 3, 2], 'train_time_seconds': 1530.718416, 'test_accuracy': 0.84450000000000003}
11
{'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 191, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2, 0, 1, 3, 2, 0, 3, 2, 1], 'train_time_seconds': 1558.745384, 'test_accuracy': 0.83979999999999999}
12
{'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 192, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 0, 3], 'train_time_seconds': 1599.975824, 'test_accuracy': 0.84260000000000002}
13
{'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 193, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 0, 3, 1, 3, 2, 0], 'train_time_seconds': 1650.997569, 'test_accuracy': 0.84060000000000001}
14
{'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 194, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 0, 3, 1, 3, 2, 0, 1, 3, 2, 0], 'train_time_seconds': 1690.082677, 'test_accuracy': 0.83389999999999997}
episode: 13
0
{'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 195, 'episode': 13, 'encoding': [3, 0, 2, 1], 'train_time_seconds': 365.873635, 'test_accuracy': 0.4556}
1
{'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 196, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1], 'train_time_seconds': 598.482514, 'test_accuracy': 0.61229999999999996}
2
{'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 197, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1], 'train_time_seconds': 842.344528, 'test_accuracy': 0.70999999999999996}
3
{'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 198, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1], 'train_time_seconds': 1157.51381, 'test_accuracy': 0.75229999999999997}
4
{'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 199, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1], 'train_time_seconds': 1424.06651, 'test_accuracy': 0.78280000000000005}
5
{'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 200, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1], 'train_time_seconds': 1738.255843, 'test_accuracy': 0.79020000000000001}
6
{'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 201, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0], 'train_time_seconds': 2140.066035, 'test_accuracy': 0.80230000000000001}
7
{'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 202, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3], 'train_time_seconds': 2160.915993, 'test_accuracy': 0.81859999999999999}
8
{'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 203, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1], 'train_time_seconds': 2207.766397, 'test_accuracy': 0.83160000000000001}
9
{'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 204, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2], 'train_time_seconds': 2235.92257, 'test_accuracy': 0.82840000000000003}
10
{'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 205, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2, 3, 1, 2, 0], 'train_time_seconds': 2272.867442, 'test_accuracy': 0.83360000000000001}
11
{'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 206, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2, 3, 1, 2, 0, 1, 3, 2, 0], 'train_time_seconds': 2307.68152, 'test_accuracy': 0.83799999999999997}
12
{'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 207, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2, 3, 1, 2, 0, 1, 3, 2, 0, 0, 1, 2, 3], 'train_time_seconds': 2328.187231, 'test_accuracy': 0.84199999999999997}
13
{'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 208, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2, 3, 1, 2, 0, 1, 3, 2, 0, 0, 1, 2, 3, 2, 3, 0, 1], 'train_time_seconds': 2362.919202, 'test_accuracy': 0.83740000000000003}
14
{'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 209, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2, 3, 1, 2, 0, 1, 3, 2, 0, 0, 1, 2, 3, 2, 3, 0, 1, 2, 3, 1, 0], 'train_time_seconds': 2384.74204, 'test_accuracy': 0.83199999999999996}
episode: 14
0
{'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 210, 'episode': 14, 'encoding': [1, 0, 3, 2], 'train_time_seconds': 200.91298, 'test_accuracy': 0.50819999999999999}
1
{'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 211, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3], 'train_time_seconds': 204.204818, 'test_accuracy': 0.60199999999999998}
2
{'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 212, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2], 'train_time_seconds': 234.25001, 'test_accuracy': 0.59370000000000001}
3
{'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 213, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1], 'train_time_seconds': 260.086691, 'test_accuracy': 0.60860000000000003}
4
{'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 214, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0], 'train_time_seconds': 290.663732, 'test_accuracy': 0.625}
5
{'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 215, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1], 'train_time_seconds': 314.332969, 'test_accuracy': 0.62939999999999996}
6
{'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 216, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0], 'train_time_seconds': 337.433161, 'test_accuracy': 0.62570000000000003}
7
{'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 217, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3], 'train_time_seconds': 363.36702, 'test_accuracy': 0.6169}
8
{'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 218, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2], 'train_time_seconds': 388.91541, 'test_accuracy': 0.61760000000000004}
9
{'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 219, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0], 'train_time_seconds': 416.198265, 'test_accuracy': 0.62660000000000005}
10
{'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 220, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0, 1, 2, 3, 0], 'train_time_seconds': 437.925206, 'test_accuracy': 0.62260000000000004}
11
{'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 221, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0, 1, 2, 3, 0, 2, 3, 1, 0], 'train_time_seconds': 458.853452, 'test_accuracy': 0.61209999999999998}
12
{'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 222, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0, 1, 2, 3, 0, 2, 3, 1, 0, 1, 3, 0, 2], 'train_time_seconds': 479.228323, 'test_accuracy': 0.61339999999999995}
13
{'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 223, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0, 1, 2, 3, 0, 2, 3, 1, 0, 1, 3, 0, 2, 3, 1, 0, 2], 'train_time_seconds': 498.58568, 'test_accuracy': 0.60960000000000003}
14
{'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 224, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0, 1, 2, 3, 0, 2, 3, 1, 0, 1, 3, 0, 2, 3, 1, 0, 2, 3, 0, 2, 1], 'train_time_seconds': 519.7138, 'test_accuracy': 0.61019999999999996}
albert@albert-desktop:~/git/network_architecture_search$ python2 experiment_cifar.py
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally
I tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally
[{'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 0, 'episode': 0, 'encoding': [1, 3, 2, 0], 'train_time_seconds': 368.049252, 'test_accuracy': 0.54039999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 1, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2], 'train_time_seconds': 408.275522, 'test_accuracy': 0.70669999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 2, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1], 'train_time_seconds': 475.116003, 'test_accuracy': 0.74450000000000005}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 3, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0], 'train_time_seconds': 573.275197, 'test_accuracy': 0.78920000000000001}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 4, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3], 'train_time_seconds': 610.236321, 'test_accuracy': 0.7974}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}], 'index': 5, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3], 'train_time_seconds': 616.56595, 'test_accuracy': 0.76959999999999995}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 6, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2], 'train_time_seconds': 638.756012, 'test_accuracy': 0.71870000000000001}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 7, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3], 'train_time_seconds': 673.490203, 'test_accuracy': 0.71870000000000001}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 8, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0], 'train_time_seconds': 701.666276, 'test_accuracy': 0.72009999999999996}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 9, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2], 'train_time_seconds': 734.279322, 'test_accuracy': 0.71040000000000003}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 10, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2, 0, 2, 1, 3], 'train_time_seconds': 759.138101, 'test_accuracy': 0.71120000000000005}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 11, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2, 0, 2, 1, 3, 0, 2, 1, 3], 'train_time_seconds': 785.593478, 'test_accuracy': 0.7016}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 12, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2, 0, 2, 1, 3, 0, 2, 1, 3, 2, 0, 3, 1], 'train_time_seconds': 811.026095, 'test_accuracy': 0.70509999999999995}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 13, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2, 0, 2, 1, 3, 0, 2, 1, 3, 2, 0, 3, 1, 1, 0, 3, 2], 'train_time_seconds': 836.35241, 'test_accuracy': 0.70469999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 14, 'episode': 0, 'encoding': [1, 3, 2, 0, 0, 3, 1, 2, 0, 3, 2, 1, 3, 2, 1, 0, 2, 1, 0, 3, 1, 0, 2, 3, 1, 0, 3, 2, 2, 1, 0, 3, 3, 1, 2, 0, 3, 0, 1, 2, 0, 2, 1, 3, 0, 2, 1, 3, 2, 0, 3, 1, 1, 0, 3, 2, 0, 3, 1, 2], 'train_time_seconds': 858.769875, 'test_accuracy': 0.69899999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 15, 'episode': 1, 'encoding': [0, 1, 2, 3], 'train_time_seconds': 150.175051, 'test_accuracy': 0.52459999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 16, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1], 'train_time_seconds': 189.038294, 'test_accuracy': 0.61439999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 17, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1], 'train_time_seconds': 250.080138, 'test_accuracy': 0.68889999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 18, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1], 'train_time_seconds': 288.146287, 'test_accuracy': 0.70369999999999999}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 19, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3], 'train_time_seconds': 310.580743, 'test_accuracy': 0.67169999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 20, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0], 'train_time_seconds': 341.077389, 'test_accuracy': 0.69030000000000002}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 21, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2], 'train_time_seconds': 369.405306, 'test_accuracy': 0.69579999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 22, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1], 'train_time_seconds': 397.396746, 'test_accuracy': 0.69259999999999999}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 23, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0], 'train_time_seconds': 423.511957, 'test_accuracy': 0.6865}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 24, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0], 'train_time_seconds': 446.028381, 'test_accuracy': 0.69640000000000002}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 25, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0, 3, 2, 1, 0], 'train_time_seconds': 473.146224, 'test_accuracy': 0.69279999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 26, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0, 3, 2, 1, 0, 0, 3, 2, 1], 'train_time_seconds': 495.503059, 'test_accuracy': 0.6875}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 27, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0, 3, 2, 1, 0, 0, 3, 2, 1, 3, 0, 1, 2], 'train_time_seconds': 519.678454, 'test_accuracy': 0.69220000000000004}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 28, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0, 3, 2, 1, 0, 0, 3, 2, 1, 3, 0, 1, 2, 2, 3, 1, 0], 'train_time_seconds': 542.799009, 'test_accuracy': 0.69099999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 29, 'episode': 1, 'encoding': [0, 1, 2, 3, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 0, 1, 2, 3, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 3, 1, 2, 0, 3, 2, 1, 0, 0, 3, 2, 1, 3, 0, 1, 2, 2, 3, 1, 0, 0, 1, 2, 3], 'train_time_seconds': 565.664945, 'test_accuracy': 0.68340000000000001}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 30, 'episode': 2, 'encoding': [3, 0, 2, 1], 'train_time_seconds': 363.186491, 'test_accuracy': 0.46729999999999999}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 31, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0], 'train_time_seconds': 734.629674, 'test_accuracy': 0.68469999999999998}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 32, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3], 'train_time_seconds': 755.385455, 'test_accuracy': 0.73999999999999999}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 33, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2], 'train_time_seconds': 790.358784, 'test_accuracy': 0.73740000000000006}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 34, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3], 'train_time_seconds': 818.245828, 'test_accuracy': 0.73909999999999998}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 35, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0], 'train_time_seconds': 850.62952, 'test_accuracy': 0.7429}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 36, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0], 'train_time_seconds': 878.000302, 'test_accuracy': 0.75749999999999995}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 37, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0], 'train_time_seconds': 910.815702, 'test_accuracy': 0.76060000000000005}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 38, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0], 'train_time_seconds': 932.361959, 'test_accuracy': 0.75309999999999999}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 39, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2], 'train_time_seconds': 971.975253, 'test_accuracy': 0.74570000000000003}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 40, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1], 'train_time_seconds': 991.470465, 'test_accuracy': 0.74160000000000004}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 41, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 0, 2, 3, 1], 'train_time_seconds': 1013.129267, 'test_accuracy': 0.73560000000000003}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 42, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 0, 2, 3, 1, 1, 2, 3, 0], 'train_time_seconds': 1039.030533, 'test_accuracy': 0.73950000000000005}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 43, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 0, 2, 3, 1, 1, 2, 3, 0, 2, 0, 3, 1], 'train_time_seconds': 1061.343818, 'test_accuracy': 0.73560000000000003}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 44, 'episode': 2, 'encoding': [3, 0, 2, 1, 2, 3, 1, 0, 1, 2, 0, 3, 0, 1, 3, 2, 1, 2, 0, 3, 3, 2, 1, 0, 3, 2, 1, 0, 3, 1, 2, 0, 3, 2, 1, 0, 3, 1, 0, 2, 2, 3, 0, 1, 0, 2, 3, 1, 1, 2, 3, 0, 2, 0, 3, 1, 1, 0, 3, 2], 'train_time_seconds': 1090.086285, 'test_accuracy': 0.7359}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 45, 'episode': 3, 'encoding': [0, 1, 2, 3], 'train_time_seconds': 154.492417, 'test_accuracy': 0.52590000000000003}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 46, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2], 'train_time_seconds': 177.56699, 'test_accuracy': 0.59079999999999999}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 47, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0], 'train_time_seconds': 216.361385, 'test_accuracy': 0.64070000000000005}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 48, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3], 'train_time_seconds': 244.415507, 'test_accuracy': 0.6482}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 49, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3], 'train_time_seconds': 271.270051, 'test_accuracy': 0.64049999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 50, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3], 'train_time_seconds': 293.775519, 'test_accuracy': 0.64200000000000002}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 51, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2], 'train_time_seconds': 321.128231, 'test_accuracy': 0.63749999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 52, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0], 'train_time_seconds': 350.131566, 'test_accuracy': 0.64039999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 53, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1], 'train_time_seconds': 379.47718, 'test_accuracy': 0.6351}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 54, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3], 'train_time_seconds': 402.270577, 'test_accuracy': 0.62239999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 55, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3, 0, 2, 3, 1], 'train_time_seconds': 422.82807, 'test_accuracy': 0.627}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 56, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3, 0, 2, 3, 1, 3, 2, 0, 1], 'train_time_seconds': 440.262341, 'test_accuracy': 0.63019999999999998}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 57, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3, 0, 2, 3, 1, 3, 2, 0, 1, 3, 2, 1, 0], 'train_time_seconds': 465.008078, 'test_accuracy': 0.62660000000000005}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 58, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3, 0, 2, 3, 1, 3, 2, 0, 1, 3, 2, 1, 0, 1, 2, 0, 3], 'train_time_seconds': 487.055249, 'test_accuracy': 0.62949999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 59, 'episode': 3, 'encoding': [0, 1, 2, 3, 3, 0, 1, 2, 2, 3, 1, 0, 2, 1, 0, 3, 2, 1, 0, 3, 2, 1, 0, 3, 3, 1, 0, 2, 1, 3, 2, 0, 0, 2, 3, 1, 0, 2, 1, 3, 0, 2, 3, 1, 3, 2, 0, 1, 3, 2, 1, 0, 1, 2, 0, 3, 1, 0, 3, 2], 'train_time_seconds': 513.123642, 'test_accuracy': 0.62309999999999999}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 60, 'episode': 4, 'encoding': [2, 3, 0, 1], 'train_time_seconds': 267.085217, 'test_accuracy': 0.54620000000000002}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 61, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3], 'train_time_seconds': 284.421141, 'test_accuracy': 0.68279999999999996}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 62, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0], 'train_time_seconds': 338.823722, 'test_accuracy': 0.75360000000000005}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 63, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2], 'train_time_seconds': 364.37943, 'test_accuracy': 0.77049999999999996}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 64, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1], 'train_time_seconds': 395.799564, 'test_accuracy': 0.76759999999999995}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 65, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1], 'train_time_seconds': 428.267988, 'test_accuracy': 0.7681}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 66, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3], 'train_time_seconds': 449.424833, 'test_accuracy': 0.78010000000000002}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 67, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3], 'train_time_seconds': 475.862533, 'test_accuracy': 0.77280000000000004}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 68, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3], 'train_time_seconds': 502.726014, 'test_accuracy': 0.77569999999999995}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 69, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2], 'train_time_seconds': 524.395997, 'test_accuracy': 0.76919999999999999}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 70, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2, 3, 1, 2, 0], 'train_time_seconds': 550.039473, 'test_accuracy': 0.77190000000000003}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 71, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2, 3, 1, 2, 0, 3, 1, 0, 2], 'train_time_seconds': 580.835388, 'test_accuracy': 0.76659999999999995}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 72, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2, 3, 1, 2, 0, 3, 1, 0, 2, 2, 0, 1, 3], 'train_time_seconds': 617.589614, 'test_accuracy': 0.76980000000000004}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 73, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2, 3, 1, 2, 0, 3, 1, 0, 2, 2, 0, 1, 3, 3, 1, 2, 0], 'train_time_seconds': 621.520654, 'test_accuracy': 0.77159999999999995}, {'layers': [{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}], 'index': 74, 'episode': 4, 'encoding': [2, 3, 0, 1, 0, 2, 1, 3, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3, 2, 1, 0, 3, 2, 1, 1, 2, 0, 3, 2, 1, 0, 3, 0, 2, 1, 3, 3, 0, 1, 2, 3, 1, 2, 0, 3, 1, 0, 2, 2, 0, 1, 3, 3, 1, 2, 0, 1, 0, 2, 3], 'train_time_seconds': 646.391962, 'test_accuracy': 0.7702}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 75, 'episode': 5, 'encoding': [1, 3, 2, 0], 'train_time_seconds': 378.526842, 'test_accuracy': 0.54700000000000004}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 76, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1], 'train_time_seconds': 613.117144, 'test_accuracy': 0.71630000000000005}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 77, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2], 'train_time_seconds': 672.673485, 'test_accuracy': 0.76419999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 78, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3], 'train_time_seconds': 697.167486, 'test_accuracy': 0.77470000000000006}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 79, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2], 'train_time_seconds': 732.365333, 'test_accuracy': 0.7802}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 80, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2], 'train_time_seconds': 763.005842, 'test_accuracy': 0.75790000000000002}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 81, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2], 'train_time_seconds': 792.734367, 'test_accuracy': 0.72540000000000004}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 82, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2], 'train_time_seconds': 831.112687, 'test_accuracy': 0.72389999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 83, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3], 'train_time_seconds': 842.719176, 'test_accuracy': 0.72230000000000005}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 84, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1], 'train_time_seconds': 863.49351, 'test_accuracy': 0.71289999999999998}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 85, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1, 0, 2, 3, 1], 'train_time_seconds': 896.333535, 'test_accuracy': 0.71760000000000002}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 86, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1, 0, 2, 3, 1, 1, 2, 0, 3], 'train_time_seconds': 938.671745, 'test_accuracy': 0.7087}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 87, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1, 0, 2, 3, 1, 1, 2, 0, 3, 1, 0, 3, 2], 'train_time_seconds': 966.307771, 'test_accuracy': 0.70109999999999995}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 88, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1, 0, 2, 3, 1, 1, 2, 0, 3, 1, 0, 3, 2, 2, 0, 1, 3], 'train_time_seconds': 982.092296, 'test_accuracy': 0.69510000000000005}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 89, 'episode': 5, 'encoding': [1, 3, 2, 0, 3, 0, 2, 1, 1, 3, 0, 2, 1, 2, 0, 3, 1, 3, 0, 2, 0, 3, 1, 2, 0, 3, 1, 2, 3, 1, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1, 0, 2, 3, 1, 1, 2, 0, 3, 1, 0, 3, 2, 2, 0, 1, 3, 0, 2, 3, 1], 'train_time_seconds': 1005.653968, 'test_accuracy': 0.70760000000000001}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 90, 'episode': 6, 'encoding': [1, 0, 3, 2], 'train_time_seconds': 217.36723, 'test_accuracy': 0.50649999999999995}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 91, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0], 'train_time_seconds': 325.730985, 'test_accuracy': 0.68720000000000003}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 92, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2], 'train_time_seconds': 354.765124, 'test_accuracy': 0.72430000000000005}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 93, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1], 'train_time_seconds': 383.179029, 'test_accuracy': 0.74270000000000003}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 94, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0], 'train_time_seconds': 422.943928, 'test_accuracy': 0.77510000000000001}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 95, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3], 'train_time_seconds': 446.665906, 'test_accuracy': 0.7581}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 96, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1], 'train_time_seconds': 467.661666, 'test_accuracy': 0.76160000000000005}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 97, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0], 'train_time_seconds': 494.685742, 'test_accuracy': 0.76100000000000001}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 98, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2], 'train_time_seconds': 525.112334, 'test_accuracy': 0.76529999999999998}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 99, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0], 'train_time_seconds': 547.659506, 'test_accuracy': 0.7581}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}], 'index': 100, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3], 'train_time_seconds': 583.304301, 'test_accuracy': 0.76359999999999995}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 101, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0], 'train_time_seconds': 603.572402, 'test_accuracy': 0.76339999999999997}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 102, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 2, 3, 1, 0], 'train_time_seconds': 623.686917, 'test_accuracy': 0.7591}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 103, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 2, 3, 1, 0, 1, 2, 3, 0], 'train_time_seconds': 656.305087, 'test_accuracy': 0.75380000000000003}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 104, 'episode': 6, 'encoding': [1, 0, 3, 2, 3, 1, 2, 0, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 3, 0, 1, 2, 0, 3, 3, 0, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 2, 3, 1, 0, 1, 2, 3, 0, 3, 2, 1, 0], 'train_time_seconds': 685.639853, 'test_accuracy': 0.76439999999999997}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 105, 'episode': 7, 'encoding': [1, 3, 2, 0], 'train_time_seconds': 397.291285, 'test_accuracy': 0.53420000000000001}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 106, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0], 'train_time_seconds': 748.507339, 'test_accuracy': 0.73029999999999995}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 107, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1], 'train_time_seconds': 989.022638, 'test_accuracy': 0.76780000000000004}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 108, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1], 'train_time_seconds': 1276.368707, 'test_accuracy': 0.79220000000000002}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 109, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0], 'train_time_seconds': 1699.364921, 'test_accuracy': 0.80959999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 110, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0], 'train_time_seconds': 2111.088991, 'test_accuracy': 0.82550000000000001}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 111, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3], 'train_time_seconds': 2104.299741, 'test_accuracy': 0.83130000000000004}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 112, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3], 'train_time_seconds': 2132.377165, 'test_accuracy': 0.83069999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 113, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0], 'train_time_seconds': 2171.730766, 'test_accuracy': 0.82840000000000003}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 114, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1], 'train_time_seconds': 2206.168697, 'test_accuracy': 0.82630000000000003}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 115, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1, 0, 2, 1, 3], 'train_time_seconds': 2242.754186, 'test_accuracy': 0.82430000000000003}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 116, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1, 0, 2, 1, 3, 1, 3, 0, 2], 'train_time_seconds': 2274.455987, 'test_accuracy': 0.82630000000000003}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 117, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1, 0, 2, 1, 3, 1, 3, 0, 2, 3, 2, 0, 1], 'train_time_seconds': 2316.529541, 'test_accuracy': 0.82720000000000005}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 118, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1, 0, 2, 1, 3, 1, 3, 0, 2, 3, 2, 0, 1, 1, 0, 3, 2], 'train_time_seconds': 2379.46011, 'test_accuracy': 0.82069999999999999}, {'layers': [{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 119, 'episode': 7, 'encoding': [1, 3, 2, 0, 3, 1, 2, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 1, 3, 0, 1, 2, 3, 0, 0, 1, 2, 3, 2, 0, 1, 3, 3, 2, 1, 0, 0, 3, 2, 1, 0, 2, 1, 3, 1, 3, 0, 2, 3, 2, 0, 1, 1, 0, 3, 2, 3, 0, 2, 1], 'train_time_seconds': 2433.691472, 'test_accuracy': 0.82250000000000001}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 120, 'episode': 8, 'encoding': [1, 2, 0, 3], 'train_time_seconds': 161.413152, 'test_accuracy': 0.5978}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 121, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2], 'train_time_seconds': 185.344027, 'test_accuracy': 0.6431}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 122, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2], 'train_time_seconds': 215.021043, 'test_accuracy': 0.59589999999999999}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 123, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0], 'train_time_seconds': 245.733207, 'test_accuracy': 0.61529999999999996}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 124, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1], 'train_time_seconds': 264.548333, 'test_accuracy': 0.61990000000000001}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 125, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1], 'train_time_seconds': 285.328789, 'test_accuracy': 0.60960000000000003}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 126, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0], 'train_time_seconds': 319.425223, 'test_accuracy': 0.63100000000000001}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 127, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1], 'train_time_seconds': 335.917864, 'test_accuracy': 0.61739999999999995}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 128, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1], 'train_time_seconds': 358.294132, 'test_accuracy': 0.62070000000000003}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 129, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0], 'train_time_seconds': 388.465621, 'test_accuracy': 0.6089}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 130, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0, 2, 0, 3, 1], 'train_time_seconds': 409.902896, 'test_accuracy': 0.61370000000000002}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 131, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0, 2, 0, 3, 1, 1, 3, 0, 2], 'train_time_seconds': 443.674932, 'test_accuracy': 0.61609999999999998}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 132, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0, 2, 0, 3, 1, 1, 3, 0, 2, 2, 3, 0, 1], 'train_time_seconds': 488.961076, 'test_accuracy': 0.61170000000000002}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 133, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0, 2, 0, 3, 1, 1, 3, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0], 'train_time_seconds': 511.302676, 'test_accuracy': 0.61760000000000004}, {'layers': [{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 134, 'episode': 8, 'encoding': [1, 2, 0, 3, 3, 0, 1, 2, 3, 0, 1, 2, 2, 1, 3, 0, 3, 0, 2, 1, 0, 2, 3, 1, 2, 3, 1, 0, 0, 2, 3, 1, 0, 3, 2, 1, 1, 2, 3, 0, 2, 0, 3, 1, 1, 3, 0, 2, 2, 3, 0, 1, 1, 3, 2, 0, 0, 2, 1, 3], 'train_time_seconds': 530.143553, 'test_accuracy': 0.60750000000000004}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 135, 'episode': 9, 'encoding': [2, 0, 1, 3], 'train_time_seconds': 157.400615, 'test_accuracy': 0.53779999999999994}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 136, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2], 'train_time_seconds': 196.925042, 'test_accuracy': 0.61409999999999998}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 137, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1], 'train_time_seconds': 223.804903, 'test_accuracy': 0.64980000000000004}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 138, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0], 'train_time_seconds': 257.687301, 'test_accuracy': 0.67300000000000004}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 139, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0], 'train_time_seconds': 295.501348, 'test_accuracy': 0.67579999999999996}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 140, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2], 'train_time_seconds': 324.733899, 'test_accuracy': 0.67779999999999996}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 141, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0], 'train_time_seconds': 356.384986, 'test_accuracy': 0.68010000000000004}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 142, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2], 'train_time_seconds': 402.409268, 'test_accuracy': 0.67079999999999995}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 143, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0], 'train_time_seconds': 409.400216, 'test_accuracy': 0.67449999999999999}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 144, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3], 'train_time_seconds': 421.938602, 'test_accuracy': 0.67259999999999998}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 145, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3, 3, 0, 2, 1], 'train_time_seconds': 435.248074, 'test_accuracy': 0.68240000000000001}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 146, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3, 3, 0, 2, 1, 0, 1, 2, 3], 'train_time_seconds': 462.21662, 'test_accuracy': 0.67500000000000004}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 147, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3, 3, 0, 2, 1, 0, 1, 2, 3, 2, 3, 0, 1], 'train_time_seconds': 491.823731, 'test_accuracy': 0.67259999999999998}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 148, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3, 3, 0, 2, 1, 0, 1, 2, 3, 2, 3, 0, 1, 1, 3, 0, 2], 'train_time_seconds': 512.468166, 'test_accuracy': 0.6764}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 149, 'episode': 9, 'encoding': [2, 0, 1, 3, 3, 1, 0, 2, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 2, 0, 1, 0, 3, 2, 1, 3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 0, 0, 2, 1, 3, 3, 0, 2, 1, 0, 1, 2, 3, 2, 3, 0, 1, 1, 3, 0, 2, 1, 2, 0, 3], 'train_time_seconds': 537.465466, 'test_accuracy': 0.66690000000000005}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 150, 'episode': 10, 'encoding': [0, 1, 3, 2], 'train_time_seconds': 204.35711, 'test_accuracy': 0.52669999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 151, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0], 'train_time_seconds': 324.407284, 'test_accuracy': 0.69799999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 152, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0], 'train_time_seconds': 445.498025, 'test_accuracy': 0.76629999999999998}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 153, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3], 'train_time_seconds': 473.396815, 'test_accuracy': 0.77300000000000002}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 154, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0], 'train_time_seconds': 518.905977, 'test_accuracy': 0.78359999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 155, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2], 'train_time_seconds': 548.873619, 'test_accuracy': 0.78849999999999998}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 156, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3], 'train_time_seconds': 574.437914, 'test_accuracy': 0.74019999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 157, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0], 'train_time_seconds': 607.126441, 'test_accuracy': 0.74209999999999998}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 158, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0], 'train_time_seconds': 633.15937, 'test_accuracy': 0.7379}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 159, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1], 'train_time_seconds': 666.399921, 'test_accuracy': 0.73819999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 160, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1, 2, 3, 0, 1], 'train_time_seconds': 690.871556, 'test_accuracy': 0.72729999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 161, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1, 2, 3, 0, 1, 1, 2, 3, 0], 'train_time_seconds': 730.167116, 'test_accuracy': 0.72819999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 162, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1, 2, 3, 0, 1, 1, 2, 3, 0, 1, 3, 0, 2], 'train_time_seconds': 754.783345, 'test_accuracy': 0.73229999999999995}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 163, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1, 2, 3, 0, 1, 1, 2, 3, 0, 1, 3, 0, 2, 1, 2, 0, 3], 'train_time_seconds': 785.892116, 'test_accuracy': 0.72750000000000004}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 164, 'episode': 10, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 2, 1, 3, 0, 2, 0, 1, 3, 2, 3, 1, 0, 0, 3, 1, 2, 0, 2, 1, 3, 3, 1, 2, 0, 1, 3, 2, 0, 0, 3, 2, 1, 2, 3, 0, 1, 1, 2, 3, 0, 1, 3, 0, 2, 1, 2, 0, 3, 2, 0, 3, 1], 'train_time_seconds': 814.671564, 'test_accuracy': 0.73280000000000001}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}], 'index': 165, 'episode': 11, 'encoding': [2, 0, 1, 3], 'train_time_seconds': 157.271983, 'test_accuracy': 0.52690000000000003}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 166, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0], 'train_time_seconds': 233.474871, 'test_accuracy': 0.65869999999999995}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 167, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3], 'train_time_seconds': 262.682646, 'test_accuracy': 0.66420000000000001}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}], 'index': 168, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2], 'train_time_seconds': 297.093558, 'test_accuracy': 0.66069999999999995}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 169, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1], 'train_time_seconds': 325.904775, 'test_accuracy': 0.66359999999999997}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 170, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0], 'train_time_seconds': 355.178112, 'test_accuracy': 0.6724}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 171, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2], 'train_time_seconds': 391.736665, 'test_accuracy': 0.66679999999999995}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 172, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3], 'train_time_seconds': 439.901093, 'test_accuracy': 0.66990000000000005}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 173, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2], 'train_time_seconds': 456.230258, 'test_accuracy': 0.65820000000000001}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 174, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2], 'train_time_seconds': 496.393112, 'test_accuracy': 0.65529999999999999}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 175, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2, 2, 1, 3, 0], 'train_time_seconds': 530.433642, 'test_accuracy': 0.65849999999999997}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 176, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2, 2, 1, 3, 0, 2, 3, 0, 1], 'train_time_seconds': 559.024114, 'test_accuracy': 0.65629999999999999}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 177, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2, 2, 1, 3, 0, 2, 3, 0, 1, 1, 0, 3, 2], 'train_time_seconds': 596.622685, 'test_accuracy': 0.65110000000000001}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 178, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2, 2, 1, 3, 0, 2, 3, 0, 1, 1, 0, 3, 2, 1, 2, 0, 3], 'train_time_seconds': 616.373219, 'test_accuracy': 0.65580000000000005}, {'layers': [{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 179, 'episode': 11, 'encoding': [2, 0, 1, 3, 2, 3, 1, 0, 2, 1, 0, 3, 0, 3, 1, 2, 3, 2, 0, 1, 1, 2, 3, 0, 1, 0, 3, 2, 1, 2, 0, 3, 1, 0, 3, 2, 0, 1, 3, 2, 2, 1, 3, 0, 2, 3, 0, 1, 1, 0, 3, 2, 1, 2, 0, 3, 0, 3, 2, 1], 'train_time_seconds': 676.854992, 'test_accuracy': 0.65059999999999996}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 180, 'episode': 12, 'encoding': [3, 2, 0, 1], 'train_time_seconds': 293.76242, 'test_accuracy': 0.55510000000000004}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 181, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1], 'train_time_seconds': 551.089466, 'test_accuracy': 0.69889999999999997}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 182, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0], 'train_time_seconds': 950.409513, 'test_accuracy': 0.75729999999999997}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 183, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2], 'train_time_seconds': 1036.382422, 'test_accuracy': 0.76900000000000002}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 184, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0], 'train_time_seconds': 1154.141058, 'test_accuracy': 0.81140000000000001}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 185, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0], 'train_time_seconds': 1269.286342, 'test_accuracy': 0.82820000000000005}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 186, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1], 'train_time_seconds': 1363.497621, 'test_accuracy': 0.83960000000000001}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 187, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3], 'train_time_seconds': 1403.803183, 'test_accuracy': 0.83540000000000003}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 188, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1], 'train_time_seconds': 1446.00596, 'test_accuracy': 0.84099999999999997}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 189, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2], 'train_time_seconds': 1507.046853, 'test_accuracy': 0.84509999999999996}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 190, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2, 0, 1, 3, 2], 'train_time_seconds': 1530.718416, 'test_accuracy': 0.84450000000000003}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 191, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2, 0, 1, 3, 2, 0, 3, 2, 1], 'train_time_seconds': 1558.745384, 'test_accuracy': 0.83979999999999999}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 192, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 0, 3], 'train_time_seconds': 1599.975824, 'test_accuracy': 0.84260000000000002}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 193, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 0, 3, 1, 3, 2, 0], 'train_time_seconds': 1650.997569, 'test_accuracy': 0.84060000000000001}, {'layers': [{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 194, 'episode': 12, 'encoding': [3, 2, 0, 1, 0, 3, 2, 1, 2, 3, 1, 0, 0, 1, 3, 2, 1, 2, 3, 0, 1, 2, 3, 0, 3, 2, 0, 1, 0, 1, 2, 3, 3, 2, 0, 1, 1, 0, 3, 2, 0, 1, 3, 2, 0, 3, 2, 1, 1, 2, 0, 3, 1, 3, 2, 0, 1, 3, 2, 0], 'train_time_seconds': 1690.082677, 'test_accuracy': 0.83389999999999997}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 195, 'episode': 13, 'encoding': [3, 0, 2, 1], 'train_time_seconds': 365.873635, 'test_accuracy': 0.4556}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 196, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1], 'train_time_seconds': 598.482514, 'test_accuracy': 0.61229999999999996}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 197, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1], 'train_time_seconds': 842.344528, 'test_accuracy': 0.70999999999999996}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 198, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1], 'train_time_seconds': 1157.51381, 'test_accuracy': 0.75229999999999997}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}], 'index': 199, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1], 'train_time_seconds': 1424.06651, 'test_accuracy': 0.78280000000000005}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}], 'index': 200, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1], 'train_time_seconds': 1738.255843, 'test_accuracy': 0.79020000000000001}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 201, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0], 'train_time_seconds': 2140.066035, 'test_accuracy': 0.80230000000000001}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 202, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3], 'train_time_seconds': 2160.915993, 'test_accuracy': 0.81859999999999999}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 203, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1], 'train_time_seconds': 2207.766397, 'test_accuracy': 0.83160000000000001}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 204, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2], 'train_time_seconds': 2235.92257, 'test_accuracy': 0.82840000000000003}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}], 'index': 205, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2, 3, 1, 2, 0], 'train_time_seconds': 2272.867442, 'test_accuracy': 0.83360000000000001}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 206, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2, 3, 1, 2, 0, 1, 3, 2, 0], 'train_time_seconds': 2307.68152, 'test_accuracy': 0.83799999999999997}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}], 'index': 207, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2, 3, 1, 2, 0, 1, 3, 2, 0, 0, 1, 2, 3], 'train_time_seconds': 2328.187231, 'test_accuracy': 0.84199999999999997}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 208, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2, 3, 1, 2, 0, 1, 3, 2, 0, 0, 1, 2, 3, 2, 3, 0, 1], 'train_time_seconds': 2362.919202, 'test_accuracy': 0.83740000000000003}, {'layers': [{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}, {Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 209, 'episode': 13, 'encoding': [3, 0, 2, 1, 3, 0, 2, 1, 2, 3, 0, 1, 0, 2, 3, 1, 3, 2, 0, 1, 0, 2, 3, 1, 1, 3, 2, 0, 2, 1, 0, 3, 2, 0, 3, 1, 0, 1, 3, 2, 3, 1, 2, 0, 1, 3, 2, 0, 0, 1, 2, 3, 2, 3, 0, 1, 2, 3, 1, 0], 'train_time_seconds': 2384.74204, 'test_accuracy': 0.83199999999999996}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 210, 'episode': 14, 'encoding': [1, 0, 3, 2], 'train_time_seconds': 200.91298, 'test_accuracy': 0.50819999999999999}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}], 'index': 211, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3], 'train_time_seconds': 204.204818, 'test_accuracy': 0.60199999999999998}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 212, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2], 'train_time_seconds': 234.25001, 'test_accuracy': 0.59370000000000001}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 213, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1], 'train_time_seconds': 260.086691, 'test_accuracy': 0.60860000000000003}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 214, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0], 'train_time_seconds': 290.663732, 'test_accuracy': 0.625}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}], 'index': 215, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1], 'train_time_seconds': 314.332969, 'test_accuracy': 0.62939999999999996}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 216, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0], 'train_time_seconds': 337.433161, 'test_accuracy': 0.62570000000000003}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}], 'index': 217, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3], 'train_time_seconds': 363.36702, 'test_accuracy': 0.6169}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 218, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2], 'train_time_seconds': 388.91541, 'test_accuracy': 0.61760000000000004}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}], 'index': 219, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0], 'train_time_seconds': 416.198265, 'test_accuracy': 0.62660000000000005}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 220, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0, 1, 2, 3, 0], 'train_time_seconds': 437.925206, 'test_accuracy': 0.62260000000000004}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}], 'index': 221, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0, 1, 2, 3, 0, 2, 3, 1, 0], 'train_time_seconds': 458.853452, 'test_accuracy': 0.61209999999999998}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}], 'index': 222, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0, 1, 2, 3, 0, 2, 3, 1, 0, 1, 3, 0, 2], 'train_time_seconds': 479.228323, 'test_accuracy': 0.61339999999999995}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 223, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0, 1, 2, 3, 0, 2, 3, 1, 0, 1, 3, 0, 2, 3, 1, 0, 2], 'train_time_seconds': 498.58568, 'test_accuracy': 0.60960000000000003}, {'layers': [{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}, {Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 224, 'episode': 14, 'encoding': [1, 0, 3, 2, 0, 2, 1, 3, 1, 0, 3, 2, 3, 0, 2, 1, 3, 2, 1, 0, 2, 3, 0, 1, 2, 1, 3, 0, 2, 1, 0, 3, 1, 3, 0, 2, 1, 3, 2, 0, 1, 2, 3, 0, 2, 3, 1, 0, 1, 3, 0, 2, 3, 1, 0, 2, 3, 0, 2, 1], 'train_time_seconds': 519.7138, 'test_accuracy': 0.61019999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 225, 'episode': 15, 'encoding': [0, 1, 3, 2], 'train_time_seconds': 199.220851, 'test_accuracy': 0.52270000000000005}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 226, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0], 'train_time_seconds': 312.060704, 'test_accuracy': 0.70289999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 227, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0], 'train_time_seconds': 429.476669, 'test_accuracy': 0.7641}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}], 'index': 228, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2], 'train_time_seconds': 465.341865, 'test_accuracy': 0.77780000000000005}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}], 'index': 229, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3], 'train_time_seconds': 495.706224, 'test_accuracy': 0.77470000000000006}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}], 'index': 230, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0], 'train_time_seconds': 521.955509, 'test_accuracy': 0.78849999999999998}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 231, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1], 'train_time_seconds': 536.656378, 'test_accuracy': 0.77800000000000002}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}], 'index': 232, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0], 'train_time_seconds': 566.993774, 'test_accuracy': 0.78059999999999996}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}], 'index': 233, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2], 'train_time_seconds': 589.901111, 'test_accuracy': 0.78200000000000003}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}], 'index': 234, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 0, 3, 2], 'train_time_seconds': 621.67322, 'test_accuracy': 0.78049999999999997}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}], 'index': 235, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 0, 3, 2, 0, 3, 2, 1], 'train_time_seconds': 654.441952, 'test_accuracy': 0.77990000000000004}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}], 'index': 236, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 0, 3, 2, 0, 3, 2, 1, 3, 0, 2, 1], 'train_time_seconds': 680.37746, 'test_accuracy': 0.77690000000000003}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}], 'index': 237, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 0, 3, 2, 0, 3, 2, 1, 3, 0, 2, 1, 0, 1, 3, 2], 'train_time_seconds': 718.327948, 'test_accuracy': 0.78200000000000003}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}], 'index': 238, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 0, 3, 2, 0, 3, 2, 1, 3, 0, 2, 1, 0, 1, 3, 2, 2, 0, 3, 1], 'train_time_seconds': 739.12453, 'test_accuracy': 0.77170000000000005}, {'layers': [{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}, {Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}, {Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}, {Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}, {Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}, {Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}, {Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}, {Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}, {Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}, {Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}], 'index': 239, 'episode': 15, 'encoding': [0, 1, 3, 2, 1, 2, 3, 0, 3, 2, 1, 0, 3, 0, 1, 2, 1, 2, 0, 3, 1, 2, 3, 0, 0, 3, 2, 1, 2, 1, 3, 0, 3, 1, 0, 2, 1, 0, 3, 2, 0, 3, 2, 1, 3, 0, 2, 1, 0, 1, 3, 2, 2, 0, 3, 1, 3, 2, 1, 0], 'train_time_seconds': 756.728983, 'test_accuracy': 0.78059999999999996}]
episode: 0
0
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: 
name: GeForce GTX 1060 6GB
major: 6 minor: 1 memoryClockRate (GHz) 1.7715
pciBusID 0000:01:00.0
Total memory: 5.93GiB
Free memory: 5.32GiB
I tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y 
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("1/weights/read:0", shape=(49152, 10), dtype=float32)
Tensor("1/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
 10%|█████████▋                                                                                       | 1995/20000 [00:35<04:46, 62.91it/s]0.48
test accuracy:  0.5071
 20%|███████████████████▍                                                                             | 3996/20000 [01:12<04:18, 61.94it/s]0.6
test accuracy:  0.5433
 30%|█████████████████████████████                                                                    | 5995/20000 [01:49<03:48, 61.32it/s]0.58
test accuracy:  0.5554
 40%|██████████████████████████████████████▊                                                          | 7995/20000 [02:28<03:20, 59.95it/s]0.51
test accuracy:  0.5524
 50%|████████████████████████████████████████████████▍                                                | 9995/20000 [03:08<02:50, 58.78it/s]0.57
test accuracy:  0.5509
 60%|█████████████████████████████████████████████████████████▌                                      | 11994/20000 [03:47<02:16, 58.79it/s]0.5
test accuracy:  0.5506
 70%|███████████████████████████████████████████████████████████████████▏                            | 13996/20000 [04:27<01:40, 59.67it/s]0.55
test accuracy:  0.5484
 80%|████████████████████████████████████████████████████████████████████████████▊                   | 15997/20000 [05:06<01:07, 58.92it/s]0.56
test accuracy:  0.5432
 90%|██████████████████████████████████████████████████████████████████████████████████████▍         | 17995/20000 [05:46<00:34, 58.29it/s]0.61
test accuracy:  0.5478
100%|███████████████████████████████████████████████████████████████████████████████████████████████▉| 19994/20000 [06:26<00:00, 58.73it/s]0.55
test accuracy:  0.5457
100%|████████████████████████████████████████████████████████████████████████████████████████████████| 20000/20000 [06:28<00:00,  8.01it/s]
test accuracy: 
0.5457
train_time_seconds: 390.604177
1
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("2/weights/read:0", shape=(9216, 10), dtype=float32)
Tensor("2/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/1
2
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1244/5000 [00:25<01:10, 53.31it/s]0.58
test accuracy:  0.5982
 50%|████████████████████████████████████████████████▉                                                 | 2498/5000 [00:52<00:47, 52.73it/s]0.51
test accuracy:  0.605
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3746/5000 [01:20<00:23, 53.38it/s]0.71
test accuracy:  0.6398
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4994/5000 [01:46<00:00, 52.29it/s]0.73
test accuracy:  0.6597
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:48<00:00,  8.61it/s]
test accuracy: 
0.6597
train_time_seconds: 110.969064
2
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("3/weights/read:0", shape=(12288, 10), dtype=float32)
Tensor("3/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/2
4
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1247/5000 [00:30<01:24, 44.67it/s]0.63
test accuracy:  0.6595
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:01<00:56, 44.61it/s]0.7
test accuracy:  0.6744
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3747/5000 [01:33<00:28, 44.21it/s]0.65
test accuracy:  0.6887
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4996/5000 [02:04<00:00, 46.56it/s]0.75
test accuracy:  0.7031
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:06<00:00, 39.47it/s]
test accuracy: 
0.7031
train_time_seconds: 128.717828
3
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("4/weights/read:0", shape=(9216, 10), dtype=float32)
Tensor("4/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/3
6
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:36<01:42, 36.58it/s]0.72
test accuracy:  0.6935
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:14<01:08, 36.40it/s]0.69
test accuracy:  0.7057
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [01:53<00:34, 36.00it/s]0.76
test accuracy:  0.7289
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [02:31<00:00, 36.28it/s]0.78
test accuracy:  0.7309
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:33<00:00, 32.60it/s]
test accuracy: 
0.7309
train_time_seconds: 155.690435
4
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("5/weights/read:0", shape=(864, 10), dtype=float32)
Tensor("5/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/4
8
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:37<01:46, 35.12it/s]0.72
test accuracy:  0.7396
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:16<01:10, 35.33it/s]0.71
test accuracy:  0.7589
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [01:56<00:35, 35.62it/s]0.79
test accuracy:  0.7595
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [02:34<00:00, 35.58it/s]0.82
test accuracy:  0.7663
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:37<00:00, 31.83it/s]
test accuracy: 
0.7663
train_time_seconds: 159.337282
5
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 24, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("6/weights/read:0", shape=(192, 10), dtype=float32)
Tensor("6/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/5
10
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:39<01:53, 33.15it/s]0.78
test accuracy:  0.7463
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:19<01:14, 33.61it/s]0.79
test accuracy:  0.7538
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [02:01<00:37, 33.22it/s]0.8
test accuracy:  0.7592
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [02:42<00:00, 34.31it/s]0.69
test accuracy:  0.7615
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:44<00:00, 30.33it/s]
test accuracy: 
0.7615
train_time_seconds: 167.16572
6
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 24, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("7/weights/read:0", shape=(64, 10), dtype=float32)
Tensor("7/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/6
12
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 24, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1247/5000 [00:41<01:57, 31.91it/s]0.66
test accuracy:  0.6618
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [01:24<01:17, 32.28it/s]0.71
test accuracy:  0.6787
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3746/5000 [02:08<00:39, 31.86it/s]0.7
test accuracy:  0.689
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4998/5000 [02:51<00:00, 31.87it/s]0.73
test accuracy:  0.695
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:53<00:00, 28.82it/s]
test accuracy: 
0.695
train_time_seconds: 175.883507
7
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 24, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("8/weights/read:0", shape=(24, 10), dtype=float32)
Tensor("8/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/7
14
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 24, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1247/5000 [00:43<02:03, 30.42it/s]0.75
test accuracy:  0.6956
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:28<01:20, 31.06it/s]0.65
test accuracy:  0.705
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3746/5000 [02:12<00:40, 31.19it/s]0.78
test accuracy:  0.7085
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [02:55<00:00, 30.94it/s]0.7
test accuracy:  0.7087
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:58<00:00, 28.08it/s]
test accuracy: 
0.7087
train_time_seconds: 180.485288
8
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 24, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 3, 24, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("9/weights/read:0", shape=(48, 10), dtype=float32)
Tensor("9/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/8
16
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 24, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:43<01:59, 31.40it/s]0.73
test accuracy:  0.7071
 50%|████████████████████████████████████████████████▉                                                 | 2498/5000 [01:27<01:23, 29.91it/s]0.67
test accuracy:  0.7151
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [02:13<00:40, 30.84it/s]0.72
test accuracy:  0.7142
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [02:58<00:00, 30.44it/s]0.71
test accuracy:  0.7191
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [03:00<00:00, 27.68it/s]
test accuracy: 
0.7191
train_time_seconds: 182.964077
9
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 24, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 3, 24, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("10/weights/read:0", shape=(36, 10), dtype=float32)
Tensor("10/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/9
18
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 24, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 3, 24, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
  4%|███▌                                                                                               | 183/5000 [00:06<02:43, 29.41it/s]I tensorflow/core/common_runtime/gpu/pool_allocator.cc:247] PoolAllocator: After 3830776 get requests, put_count=3830772 evicted_count=1000 eviction_rate=0.000261044 and unsatisfied allocation rate=0.000288192
 25%|████████████████████████▍                                                                         | 1247/5000 [00:44<02:04, 30.17it/s]0.67
test accuracy:  0.7162
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:29<01:29, 28.07it/s]0.76
test accuracy:  0.721
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [02:17<00:41, 30.08it/s]0.79
test accuracy:  0.7184
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4996/5000 [03:02<00:00, 30.12it/s]0.78
test accuracy:  0.7309
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [03:04<00:00,  4.79it/s]
test accuracy: 
0.7309
train_time_seconds: 187.063281
10
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 24, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 3, 24, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 36, 36), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("11/weights/read:0", shape=(36, 10), dtype=float32)
Tensor("11/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/10
20
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 24, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 3, 24, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
  6%|██████▏                                                                                            | 312/5000 [00:11<02:48, 27.76it/s]I tensorflow/core/common_runtime/gpu/pool_allocator.cc:247] PoolAllocator: After 545521 get requests, put_count=545521 evicted_count=2000 eviction_rate=0.00366622 and unsatisfied allocation rate=0.00368455
I tensorflow/core/common_runtime/gpu/pool_allocator.cc:259] Raising pool_size_limit_ from 110 to 121
 25%|████████████████████████▍                                                                         | 1247/5000 [00:47<02:16, 27.52it/s]0.79
test accuracy:  0.721
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:34<01:24, 29.61it/s]0.78
test accuracy:  0.7224
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [02:23<00:45, 27.65it/s]0.75
test accuracy:  0.7296
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [03:11<00:00, 28.20it/s]0.75
test accuracy:  0.7267
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [03:13<00:00, 25.82it/s]
test accuracy: 
0.7267
train_time_seconds: 196.022875
11
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 24, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 3, 24, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 36, 36), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 5, 36, 36), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("12/weights/read:0", shape=(36, 10), dtype=float32)
Tensor("12/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/11
22
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 24, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 3, 24, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 36, 36), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:47<02:16, 27.55it/s]0.76
test accuracy:  0.722
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [01:36<01:27, 28.44it/s]0.77
test accuracy:  0.7251
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [02:25<00:45, 27.82it/s]0.73
test accuracy:  0.7321
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4998/5000 [03:14<00:00, 27.62it/s]0.75
test accuracy:  0.7322
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [03:16<00:00, 25.42it/s]
test accuracy: 
0.7322
train_time_seconds: 199.095872
12
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 24, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 3, 24, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 36, 36), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 5, 36, 36), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(5, 1, 36, 64), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("13/weights/read:0", shape=(64, 10), dtype=float32)
Tensor("13/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/12
24
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 24, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 3, 24, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 36, 36), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 5, 36, 36), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:49<02:23, 26.20it/s]0.75
test accuracy:  0.7268
 50%|████████████████████████████████████████████████▉                                                 | 2498/5000 [01:40<01:31, 27.33it/s]0.69
test accuracy:  0.7277
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [02:32<00:47, 26.30it/s]0.82
test accuracy:  0.7255
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4998/5000 [03:23<00:00, 26.50it/s]0.81
test accuracy:  0.7358
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [03:26<00:00, 24.25it/s]
test accuracy: 
0.7358
train_time_seconds: 208.666361
13
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 24, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 3, 24, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 36, 36), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 5, 36, 36), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(5, 1, 36, 64), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(3, 1, 64, 64), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("14/weights/read:0", shape=(64, 10), dtype=float32)
Tensor("14/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/13
26
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 24, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 3, 24, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 36, 36), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 5, 36, 36), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(5, 1, 36, 64), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:50<02:28, 25.31it/s]0.72
test accuracy:  0.7278
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:42<01:42, 24.45it/s]0.76
test accuracy:  0.7271
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [02:35<00:47, 26.18it/s]0.75
test accuracy:  0.7317
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [03:27<00:00, 26.22it/s]0.64
test accuracy:  0.7397
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [03:29<00:00, 23.82it/s]
test accuracy: 
0.7397
train_time_seconds: 212.485451
14
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 24, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 3, 24, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 36, 36), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 5, 36, 36), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(5, 1, 36, 64), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(3, 1, 64, 64), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/14/weights/read:0", shape=(1, 7, 64, 36), dtype=float32)
Tensor("global/14/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("15/weights/read:0", shape=(36, 10), dtype=float32)
Tensor("15/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/14
28
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 24, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 3, 24, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 36, 36), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 5, 36, 36), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(5, 1, 36, 64), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(3, 1, 64, 64), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:52<02:31, 24.84it/s]0.83
test accuracy:  0.7324
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:45<01:42, 24.38it/s]0.73
test accuracy:  0.729
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [02:40<00:49, 25.35it/s]0.8
test accuracy:  0.7298
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [03:33<00:00, 24.68it/s]0.75
test accuracy:  0.7343
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [03:36<00:00, 23.11it/s]
test accuracy: 
0.7343
train_time_seconds: 218.87334
episode: 1
0
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("1/weights/read:0", shape=(5808, 10), dtype=float32)
Tensor("1/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
 10%|█████████▌                                                                                      | 1990/20000 [00:13<01:33, 192.60it/s]0.5
test accuracy:  0.4731
 20%|███████████████████▏                                                                            | 3985/20000 [00:28<01:24, 189.78it/s]0.54
test accuracy:  0.4979
 30%|████████████████████████████▋                                                                   | 5984/20000 [00:43<01:12, 192.76it/s]0.51
test accuracy:  0.5179
 40%|██████████████████████████████████████▎                                                         | 7990/20000 [00:58<01:02, 191.88it/s]0.48
test accuracy:  0.515
 50%|███████████████████████████████████████████████▉                                                | 9984/20000 [01:12<00:53, 185.85it/s]0.47
test accuracy:  0.5206
 60%|████████████████████████████████████████████████████████▉                                      | 11992/20000 [01:27<00:42, 189.95it/s]0.55
test accuracy:  0.5299
 70%|██████████████████████████████████████████████████████████████████▍                            | 13991/20000 [01:43<00:31, 189.13it/s]0.5
test accuracy:  0.5185
 80%|███████████████████████████████████████████████████████████████████████████▉                   | 15995/20000 [01:58<00:21, 188.50it/s]0.59
test accuracy:  0.5305
 90%|█████████████████████████████████████████████████████████████████████████████████████▍         | 17999/20000 [02:13<00:10, 191.88it/s]0.47
test accuracy:  0.5217
100%|██████████████████████████████████████████████████████████████████████████████████████████████▉| 19989/20000 [02:27<00:00, 186.58it/s]0.57
test accuracy:  0.525
100%|███████████████████████████████████████████████████████████████████████████████████████████████| 20000/20000 [02:29<00:00, 134.11it/s]
test accuracy: 
0.525
train_time_seconds: 150.455715
1
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("2/weights/read:0", shape=(5808, 10), dtype=float32)
Tensor("2/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/1
2
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▏                                                                        | 1246/5000 [00:10<00:27, 138.67it/s]0.51
test accuracy:  0.5311
 50%|████████████████████████████████████████████████▍                                                | 2495/5000 [00:22<00:18, 138.12it/s]0.53
test accuracy:  0.5671
 75%|████████████████████████████████████████████████████████████████████████▋                        | 3745/5000 [00:34<00:08, 141.06it/s]0.65
test accuracy:  0.5746
100%|████████████████████████████████████████████████████████████████████████████████████████████████▉| 4998/5000 [00:46<00:00, 140.42it/s]0.66
test accuracy:  0.5799
100%|█████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [00:47<00:00, 105.29it/s]
test accuracy: 
0.5799
train_time_seconds: 48.851472
2
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("3/weights/read:0", shape=(2904, 10), dtype=float32)
Tensor("3/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/2
4
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1247/5000 [00:14<00:37, 99.56it/s]0.57
test accuracy:  0.6035
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [00:29<00:25, 97.37it/s]0.62
test accuracy:  0.6165
 75%|████████████████████████████████████████████████████████████████████████▋                        | 3744/5000 [00:45<00:12, 100.91it/s]0.61
test accuracy:  0.6336
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [01:01<00:00, 99.11it/s]0.71
test accuracy:  0.6554
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:02<00:00, 79.53it/s]
test accuracy: 
0.6554
train_time_seconds: 64.486396
3
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("4/weights/read:0", shape=(5808, 10), dtype=float32)
Tensor("4/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/3
6
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▎                                                                         | 1243/5000 [00:17<00:44, 83.67it/s]0.55
test accuracy:  0.6237
 50%|████████████████████████████████████████████████▉                                                 | 2498/5000 [00:34<00:30, 82.90it/s]0.67
test accuracy:  0.6527
 75%|█████████████████████████████████████████████████████████████████████████▎                        | 3743/5000 [00:53<00:15, 82.82it/s]0.68
test accuracy:  0.6652
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [01:10<00:00, 82.95it/s]0.68
test accuracy:  0.6671
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:12<00:00, 68.93it/s]
test accuracy: 
0.6671
train_time_seconds: 74.170655
4
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 3, 48, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("5/weights/read:0", shape=(768, 10), dtype=float32)
Tensor("5/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/4
8
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1247/5000 [00:18<00:46, 80.28it/s]0.67
test accuracy:  0.6451
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [00:37<00:32, 77.01it/s]0.72
test accuracy:  0.6511
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3744/5000 [00:56<00:15, 78.65it/s]0.79
test accuracy:  0.6645
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▊| 4993/5000 [01:15<00:00, 77.65it/s]0.69
test accuracy:  0.6712
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:17<00:00, 64.55it/s]
test accuracy: 
0.6712
train_time_seconds: 79.082934
5
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 3, 48, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("6/weights/read:0", shape=(576, 10), dtype=float32)
Tensor("6/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/5
10
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 3, 48, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1244/5000 [00:20<00:56, 66.38it/s]0.71
test accuracy:  0.6655
 50%|████████████████████████████████████████████████▉                                                 | 2494/5000 [00:41<00:36, 69.08it/s]0.69
test accuracy:  0.6846
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3746/5000 [01:03<00:18, 66.52it/s]0.77
test accuracy:  0.6816
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▊| 4992/5000 [01:24<00:00, 68.84it/s]0.79
test accuracy:  0.6851
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:26<00:00, 12.86it/s]
test accuracy: 
0.6851
train_time_seconds: 88.331005
6
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 3, 48, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("7/weights/read:0", shape=(96, 10), dtype=float32)
Tensor("7/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/6
12
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 3, 48, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1246/5000 [00:22<01:00, 61.89it/s]0.73
test accuracy:  0.6795
 50%|████████████████████████████████████████████████▉                                                 | 2495/5000 [00:45<00:41, 60.61it/s]0.67
test accuracy:  0.6871
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [01:09<00:19, 64.01it/s]0.71
test accuracy:  0.6849
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4994/5000 [01:31<00:00, 62.19it/s]0.74
test accuracy:  0.6912
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:33<00:00, 53.41it/s]
test accuracy: 
0.6912
train_time_seconds: 95.353917
7
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 3, 48, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 7, 24, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("8/weights/read:0", shape=(96, 10), dtype=float32)
Tensor("8/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/7
14
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 3, 48, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1245/5000 [00:23<01:03, 59.40it/s]0.75
test accuracy:  0.6905
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [00:48<00:43, 57.75it/s]0.76
test accuracy:  0.6985
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [01:13<00:20, 62.09it/s]0.78
test accuracy:  0.6975
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4994/5000 [01:38<00:00, 58.15it/s]0.89
test accuracy:  0.6959
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:39<00:00,  9.12it/s]
test accuracy: 
0.6959
train_time_seconds: 101.847112
8
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 3, 48, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 7, 24, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("9/weights/read:0", shape=(192, 10), dtype=float32)
Tensor("9/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/8
16
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 3, 48, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 7, 24, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1246/5000 [00:25<01:09, 54.05it/s]0.72
test accuracy:  0.6975
 50%|████████████████████████████████████████████████▉                                                 | 2494/5000 [00:51<00:45, 54.69it/s]0.81
test accuracy:  0.7004
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3744/5000 [01:18<00:23, 52.50it/s]0.7
test accuracy:  0.7018
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4996/5000 [01:45<00:00, 52.45it/s]0.73
test accuracy:  0.7034
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:47<00:00, 46.66it/s]
test accuracy: 
0.7034
train_time_seconds: 109.011137
9
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 3, 48, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 7, 24, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("10/weights/read:0", shape=(192, 10), dtype=float32)
Tensor("10/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/9
18
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 3, 48, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 7, 24, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1245/5000 [00:27<01:13, 50.84it/s]0.83
test accuracy:  0.7038
 50%|████████████████████████████████████████████████▉                                                 | 2498/5000 [00:55<00:49, 50.20it/s]0.79
test accuracy:  0.6986
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3746/5000 [01:24<00:24, 50.19it/s]0.77
test accuracy:  0.707
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4995/5000 [01:52<00:00, 51.71it/s]0.82
test accuracy:  0.6996
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:54<00:00, 43.76it/s]
test accuracy: 
0.6996
train_time_seconds: 116.177724
10
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 3, 48, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 7, 24, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("11/weights/read:0", shape=(144, 10), dtype=float32)
Tensor("11/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/10
20
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 3, 48, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 7, 24, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1245/5000 [00:28<01:18, 47.88it/s]0.76
test accuracy:  0.7062
 50%|████████████████████████████████████████████████▉                                                 | 2498/5000 [00:58<00:52, 47.29it/s]0.81
test accuracy:  0.7033
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [01:29<00:26, 47.52it/s]0.78
test accuracy:  0.7017
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4998/5000 [01:58<00:00, 47.85it/s]0.78
test accuracy:  0.7003
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:00<00:00, 41.37it/s]
test accuracy: 
0.7003
train_time_seconds: 122.882736
11
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 3, 48, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 7, 24, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("12/weights/read:0", shape=(192, 10), dtype=float32)
Tensor("12/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/11
22
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 3, 48, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 7, 24, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1245/5000 [00:30<01:24, 44.57it/s]0.78
test accuracy:  0.7024
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:01<00:54, 46.10it/s]0.79
test accuracy:  0.7021
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [01:34<00:27, 44.73it/s]0.8
test accuracy:  0.7077
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4996/5000 [02:05<00:00, 45.91it/s]0.77
test accuracy:  0.7079
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:07<00:00, 39.18it/s]
test accuracy: 
0.7079
train_time_seconds: 129.644654
12
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 3, 48, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 7, 24, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("13/weights/read:0", shape=(36, 10), dtype=float32)
Tensor("13/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/12
24
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 3, 48, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 7, 24, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1246/5000 [00:31<01:22, 45.69it/s]0.83
test accuracy:  0.6991
 50%|████████████████████████████████████████████████▉                                                 | 2495/5000 [01:04<00:58, 43.17it/s]0.75
test accuracy:  0.7064
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [01:38<00:28, 44.19it/s]0.84
test accuracy:  0.7019
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4996/5000 [02:11<00:00, 42.45it/s]0.82
test accuracy:  0.7086
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:13<00:00, 37.49it/s]
test accuracy: 
0.7086
train_time_seconds: 135.455371
13
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 3, 48, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 7, 24, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("14/weights/read:0", shape=(36, 10), dtype=float32)
Tensor("14/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/13
26
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 3, 48, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 7, 24, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1246/5000 [00:33<01:36, 38.83it/s]0.72
test accuracy:  0.7105
 50%|████████████████████████████████████████████████▉                                                 | 2496/5000 [01:07<01:03, 39.14it/s]0.82
test accuracy:  0.7094
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [01:44<00:32, 38.99it/s]0.83
test accuracy:  0.7007
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [02:19<00:00, 39.58it/s]0.78
test accuracy:  0.7073
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:21<00:00, 35.21it/s]
test accuracy: 
0.7073
train_time_seconds: 144.101837
14
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 3, 48, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 7, 24, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/14/weights/read:0", shape=(1, 3, 36, 48), dtype=float32)
Tensor("global/14/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("15/weights/read:0", shape=(48, 10), dtype=float32)
Tensor("15/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/14
28
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 3, 48, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 7, 24, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:36<01:39, 37.81it/s]0.83
test accuracy:  0.7114
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [01:13<01:06, 37.64it/s]0.9
test accuracy:  0.7095
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [01:50<00:32, 38.74it/s]0.79
test accuracy:  0.7054
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [02:27<00:00, 37.61it/s]0.77
test accuracy:  0.7096
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:29<00:00, 33.44it/s]
test accuracy: 
0.7096
train_time_seconds: 151.663843
episode: 2
0
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("1/weights/read:0", shape=(49152, 10), dtype=float32)
Tensor("1/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
 10%|█████████▋                                                                                       | 1994/20000 [00:35<04:50, 61.90it/s]0.47
test accuracy:  0.4399
 20%|███████████████████▎                                                                             | 3994/20000 [01:13<04:13, 63.25it/s]0.41
test accuracy:  0.4546
 30%|█████████████████████████████                                                                    | 5996/20000 [01:51<03:41, 63.35it/s]0.48
test accuracy:  0.4534
 40%|██████████████████████████████████████▊                                                          | 7995/20000 [02:29<03:07, 63.89it/s]0.48
test accuracy:  0.4466
 50%|████████████████████████████████████████████████▍                                                | 9996/20000 [03:07<02:35, 64.49it/s]0.45
test accuracy:  0.4596
 60%|█████████████████████████████████████████████████████████▌                                      | 11996/20000 [03:45<02:06, 63.49it/s]0.55
test accuracy:  0.4448
 70%|███████████████████████████████████████████████████████████████████▏                            | 13996/20000 [04:23<01:35, 63.07it/s]0.5
test accuracy:  0.4559
 80%|████████████████████████████████████████████████████████████████████████████▊                   | 15995/20000 [05:01<01:03, 63.03it/s]0.47
test accuracy:  0.4455
 90%|██████████████████████████████████████████████████████████████████████████████████████▍         | 17995/20000 [05:39<00:31, 62.76it/s]0.47
test accuracy:  0.4474
100%|███████████████████████████████████████████████████████████████████████████████████████████████▉| 19996/20000 [06:17<00:00, 63.99it/s]0.59
test accuracy:  0.4459
100%|████████████████████████████████████████████████████████████████████████████████████████████████| 20000/20000 [06:19<00:00, 52.71it/s]
test accuracy: 
0.4459
train_time_seconds: 381.352478
1
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("2/weights/read:0", shape=(36864, 10), dtype=float32)
Tensor("2/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/1
2
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:46<02:09, 29.04it/s]0.55
test accuracy:  0.5149
 32%|██████████████████████████████▉                                                                   | 1581/5000 [01:00<02:00, 28.42it/s] 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:33<01:25, 29.13it/s]0.53
test accuracy:  0.563
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [02:21<00:43, 29.04it/s]0.59
test accuracy:  0.5934
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [03:09<00:00, 29.04it/s]0.59
test accuracy:  0.6133
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [03:11<00:00, 26.05it/s]
test accuracy: 
0.6133
train_time_seconds: 194.554111
2
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 5, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("3/weights/read:0", shape=(2904, 10), dtype=float32)
Tensor("3/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/2
4
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:47<02:13, 28.13it/s]0.58
test accuracy:  0.6359
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:36<01:30, 27.73it/s]0.66
test accuracy:  0.6631
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [02:27<00:45, 27.29it/s]0.69
test accuracy:  0.6658
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [03:16<00:00, 28.25it/s]0.68
test accuracy:  0.6686
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [03:18<00:00, 25.15it/s]
test accuracy: 
0.6686
train_time_seconds: 201.37162
3
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 5, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("4/weights/read:0", shape=(2304, 10), dtype=float32)
Tensor("4/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/3
6
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 5, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:49<02:14, 27.91it/s]0.65
test accuracy:  0.6636
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [01:40<01:32, 26.96it/s]0.6
test accuracy:  0.6825
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [02:31<00:47, 26.54it/s]0.69
test accuracy:  0.677
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [03:22<00:00, 27.45it/s]0.66
test accuracy:  0.692
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [03:24<00:00,  3.40it/s]
test accuracy: 
0.692
train_time_seconds: 207.349
4
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 5, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("5/weights/read:0", shape=(96, 10), dtype=float32)
Tensor("5/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/4
8
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 5, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:50<02:22, 26.41it/s]0.7
test accuracy:  0.6901
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:42<01:34, 26.40it/s]0.73
test accuracy:  0.7037
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [02:36<00:46, 26.65it/s]0.72
test accuracy:  0.7106
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [03:28<00:00, 25.93it/s]0.77
test accuracy:  0.7192
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [03:30<00:00,  3.27it/s]
test accuracy: 
0.7192
train_time_seconds: 213.549071
5
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 5, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("6/weights/read:0", shape=(144, 10), dtype=float32)
Tensor("6/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/5
10
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 5, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:51<02:29, 25.16it/s]0.8
test accuracy:  0.7226
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:45<01:35, 26.09it/s]0.77
test accuracy:  0.7314
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [02:40<00:49, 25.54it/s]0.82
test accuracy:  0.7335
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4998/5000 [03:34<00:00, 25.75it/s]0.73
test accuracy:  0.7342
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [03:36<00:00, 23.05it/s]
test accuracy: 
0.7342
train_time_seconds: 219.678868
6
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 5, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 5, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("7/weights/read:0", shape=(144, 10), dtype=float32)
Tensor("7/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/6
12
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 5, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:54<02:39, 23.54it/s]0.79
test accuracy:  0.7389
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:49<01:46, 23.60it/s]0.71
test accuracy:  0.7367
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [02:49<00:51, 24.33it/s]0.67
test accuracy:  0.7407
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [03:46<00:00, 23.94it/s]0.81
test accuracy:  0.745
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [03:49<00:00,  3.01it/s]
test accuracy: 
0.745
train_time_seconds: 232.546254
7
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 5, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 5, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("8/weights/read:0", shape=(192, 10), dtype=float32)
Tensor("8/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/7
14
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 5, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 5, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:56<02:49, 22.09it/s]0.83
test accuracy:  0.7483
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:55<01:45, 23.64it/s]0.75
test accuracy:  0.7404
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [02:54<00:52, 23.86it/s]0.77
test accuracy:  0.7465
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [03:52<00:00, 22.85it/s]0.83
test accuracy:  0.7535
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [03:55<00:00,  2.88it/s]
test accuracy: 
0.7535
train_time_seconds: 238.818408
8
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 5, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 5, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("9/weights/read:0", shape=(144, 10), dtype=float32)
Tensor("9/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/8
16
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 5, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 5, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:58<02:46, 22.58it/s]0.77
test accuracy:  0.7502
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:59<01:50, 22.71it/s]0.84
test accuracy:  0.7498
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [03:00<00:57, 21.85it/s]0.86
test accuracy:  0.7546
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [04:01<00:00, 23.33it/s]0.78
test accuracy:  0.751
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [04:04<00:00,  2.81it/s]
test accuracy: 
0.751
train_time_seconds: 247.4922
9
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 5, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 5, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("10/weights/read:0", shape=(24, 10), dtype=float32)
Tensor("10/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/9
18
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 5, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 5, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [01:00<02:49, 22.20it/s]0.79
test accuracy:  0.7466
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [02:02<01:56, 21.49it/s]0.71
test accuracy:  0.756
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3747/5000 [03:05<00:55, 22.55it/s]0.73
test accuracy:  0.7536
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [04:07<00:00, 21.72it/s]0.85
test accuracy:  0.7579
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [04:11<00:00,  2.69it/s]
test accuracy: 
0.7579
train_time_seconds: 254.442506
10
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 5, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 5, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 7, 24, 24), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("11/weights/read:0", shape=(24, 10), dtype=float32)
Tensor("11/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/10
20
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 5, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 5, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [01:02<03:00, 20.82it/s]0.87
test accuracy:  0.7471
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [02:06<01:56, 21.50it/s]0.78
^[[A
test accuracy:  0.7531
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [03:12<00:59, 21.00it/s]0.71
test accuracy:  0.7593
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [04:15<00:00, 21.22it/s]0.79
test accuracy:  0.7632
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [04:19<00:00,  2.47it/s]
test accuracy: 
0.7632
train_time_seconds: 262.942191
11
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 5, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 5, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 7, 24, 24), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("12/weights/read:0", shape=(64, 10), dtype=float32)
Tensor("12/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/11
22
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 5, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 5, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 7, 24, 24), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [01:03<02:56, 21.30it/s]0.79
test accuracy:  0.7558
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [02:10<01:57, 21.27it/s]0.84
test accuracy:  0.7581
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3747/5000 [03:17<01:01, 20.41it/s]0.85
test accuracy:  0.7606
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [04:22<00:00, 21.18it/s]0.86
test accuracy:  0.7557
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [04:26<00:00, 18.77it/s]
test accuracy: 
0.7557
train_time_seconds: 270.09572
12
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 5, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 5, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 7, 24, 24), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("13/weights/read:0", shape=(64, 10), dtype=float32)
Tensor("13/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/12
24
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 5, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 5, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 7, 24, 24), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1247/5000 [01:05<03:03, 20.41it/s]0.82
test accuracy:  0.7545
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [02:12<02:02, 20.34it/s]0.82
test accuracy:  0.7592
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3747/5000 [03:21<00:58, 21.30it/s]0.83
test accuracy:  0.7607
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [04:28<00:00, 19.92it/s]0.81
test accuracy:  0.7559
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [04:32<00:00,  2.26it/s]
test accuracy: 
0.7559
train_time_seconds: 276.597263
13
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 5, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 5, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 7, 24, 24), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(5, 1, 64, 64), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("14/weights/read:0", shape=(64, 10), dtype=float32)
Tensor("14/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/13
26
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 5, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 5, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 7, 24, 24), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [01:07<03:07, 20.06it/s]0.83
test accuracy:  0.7603
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [02:15<02:04, 20.15it/s]0.82
test accuracy:  0.7576
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [03:26<01:01, 20.45it/s]0.82
test accuracy:  0.7653
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4998/5000 [04:35<00:00, 19.54it/s]0.74
test accuracy:  0.7552
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [04:39<00:00,  1.50it/s]
test accuracy: 
0.7552
train_time_seconds: 283.58743
14
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 5, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 5, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 7, 24, 24), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(5, 1, 64, 64), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/14/weights/read:0", shape=(3, 1, 64, 64), dtype=float32)
Tensor("global/14/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("15/weights/read:0", shape=(64, 10), dtype=float32)
Tensor("15/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/14
28
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 5, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(7, 5, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 5, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 7, 24, 24), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(5, 1, 64, 64), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [01:08<03:14, 19.28it/s]0.87
test accuracy:  0.7596
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [02:19<02:04, 20.05it/s]0.78
test accuracy:  0.7598
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [03:31<01:02, 20.00it/s]0.85
test accuracy:  0.7574
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4998/5000 [04:40<00:00, 19.72it/s]0.85
test accuracy:  0.7584
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [04:43<00:00,  2.07it/s]
test accuracy: 
0.7584
train_time_seconds: 287.302172
episode: 3
0
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("1/weights/read:0", shape=(5808, 10), dtype=float32)
Tensor("1/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
 10%|█████████▌                                                                                      | 1988/20000 [00:13<01:34, 189.80it/s]0.46
test accuracy:  0.4672
 20%|███████████████████▏                                                                            | 3999/20000 [00:29<01:23, 190.70it/s]0.5
test accuracy:  0.5081
 30%|████████████████████████████▊                                                                   | 5993/20000 [00:44<01:13, 191.00it/s]0.59
test accuracy:  0.4952
 40%|██████████████████████████████████████▎                                                         | 7987/20000 [00:59<01:04, 186.34it/s]0.55
test accuracy:  0.5234
 50%|███████████████████████████████████████████████▉                                                | 9994/20000 [01:14<00:51, 193.49it/s]0.5
test accuracy:  0.5223
 60%|████████████████████████████████████████████████████████▉                                      | 11997/20000 [01:29<00:43, 185.59it/s]0.53
test accuracy:  0.5192
 70%|██████████████████████████████████████████████████████████████████▍                            | 13992/20000 [01:45<00:30, 194.83it/s]0.56
test accuracy:  0.523
 80%|███████████████████████████████████████████████████████████████████████████▉                   | 15980/20000 [02:00<00:20, 192.01it/s]0.63
test accuracy:  0.5295
 90%|█████████████████████████████████████████████████████████████████████████████████████▍         | 17988/20000 [02:15<00:10, 187.49it/s]0.58
test accuracy:  0.5254
100%|██████████████████████████████████████████████████████████████████████████████████████████████▉| 19985/20000 [02:31<00:00, 186.25it/s]0.65
test accuracy:  0.5258
100%|███████████████████████████████████████████████████████████████████████████████████████████████| 20000/20000 [02:32<00:00, 131.01it/s]
test accuracy: 
0.5258
train_time_seconds: 153.988024
1
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("2/weights/read:0", shape=(1296, 10), dtype=float32)
Tensor("2/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/1
2
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▏                                                                        | 1247/5000 [00:10<00:23, 156.50it/s]0.55
test accuracy:  0.5202
 50%|████████████████████████████████████████████████▏                                                | 2485/5000 [00:20<00:16, 156.71it/s]0.58
test accuracy:  0.5554
 75%|████████████████████████████████████████████████████████████████████████▋                        | 3747/5000 [00:32<00:08, 149.65it/s]0.55
test accuracy:  0.5551
100%|████████████████████████████████████████████████████████████████████████████████████████████████▉| 4994/5000 [00:43<00:00, 158.61it/s]0.51
test accuracy:  0.5743
100%|█████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [00:44<00:00, 111.97it/s]
test accuracy: 
0.5743
train_time_seconds: 46.000944
2
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("3/weights/read:0", shape=(1296, 10), dtype=float32)
Tensor("3/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/2
4
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████                                                                         | 1241/5000 [00:12<00:31, 119.23it/s]0.57
test accuracy:  0.5758
 50%|████████████████████████████████████████████████▎                                                | 2490/5000 [00:25<00:20, 119.56it/s]0.56
test accuracy:  0.5843
 75%|████████████████████████████████████████████████████████████████████████▌                        | 3741/5000 [00:40<00:10, 118.93it/s]0.56
test accuracy:  0.6055
100%|████████████████████████████████████████████████████████████████████████████████████████████████▊| 4993/5000 [00:53<00:00, 120.37it/s]0.62
test accuracy:  0.6109
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [00:55<00:00, 90.63it/s]
test accuracy: 
0.6109
train_time_seconds: 56.622438
3
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("4/weights/read:0", shape=(96, 10), dtype=float32)
Tensor("4/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/3
6
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████                                                                         | 1240/5000 [00:14<00:37, 101.02it/s]0.71
test accuracy:  0.6038
 50%|████████████████████████████████████████████████▎                                                | 2488/5000 [00:29<00:24, 100.94it/s]0.67
test accuracy:  0.6084
 75%|████████████████████████████████████████████████████████████████████████▋                        | 3749/5000 [00:45<00:12, 102.07it/s]0.67
test accuracy:  0.6237
100%|████████████████████████████████████████████████████████████████████████████████████████████████▊| 4989/5000 [01:00<00:00, 103.96it/s]0.69
test accuracy:  0.6202
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:02<00:00, 20.20it/s]
test accuracy: 
0.6202
train_time_seconds: 63.611467
4
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("5/weights/read:0", shape=(24, 10), dtype=float32)
Tensor("5/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/4
8
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:15<00:39, 96.15it/s]0.64
test accuracy:  0.6268
 50%|████████████████████████████████████████████████▍                                                | 2498/5000 [00:32<00:24, 100.09it/s]0.66
test accuracy:  0.6279
 75%|█████████████████████████████████████████████████████████████████████████▎                        | 3743/5000 [00:50<00:13, 91.20it/s]0.68
test accuracy:  0.6314
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4995/5000 [01:06<00:00, 94.06it/s]0.68
test accuracy:  0.6376
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:08<00:00, 73.30it/s]
test accuracy: 
0.6376
train_time_seconds: 69.721246
5
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("6/weights/read:0", shape=(24, 10), dtype=float32)
Tensor("6/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/5
10
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▎                                                                         | 1241/5000 [00:17<00:46, 80.77it/s]0.7
test accuracy:  0.6262
 50%|████████████████████████████████████████████████▉                                                 | 2496/5000 [00:35<00:31, 80.48it/s]0.7
test accuracy:  0.6394
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3744/5000 [00:55<00:14, 84.61it/s]0.7
test accuracy:  0.6315
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▊| 4993/5000 [01:13<00:00, 84.88it/s]0.69
test accuracy:  0.6382
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:14<00:00, 66.70it/s]
test accuracy: 
0.6382
train_time_seconds: 76.573417
6
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 3, 24, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("7/weights/read:0", shape=(24, 10), dtype=float32)
Tensor("7/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/6
12
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1247/5000 [00:19<00:49, 75.73it/s]0.59
test accuracy:  0.6294
 50%|████████████████████████████████████████████████▉                                                 | 2496/5000 [00:38<00:32, 76.84it/s]0.7
test accuracy:  0.627
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3744/5000 [00:59<00:15, 79.45it/s]0.74
test accuracy:  0.6324
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4994/5000 [01:18<00:00, 73.17it/s]0.74
test accuracy:  0.6475
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:20<00:00, 62.17it/s]
test accuracy: 
0.6475
train_time_seconds: 82.057733
7
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 3, 24, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("8/weights/read:0", shape=(48, 10), dtype=float32)
Tensor("8/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/7
14
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 3, 24, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▎                                                                         | 1242/5000 [00:20<00:53, 70.51it/s]0.62
test accuracy:  0.6415
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [00:41<00:35, 70.05it/s]0.59
test accuracy:  0.6412
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3746/5000 [01:04<00:18, 69.66it/s]0.67
test accuracy:  0.6384
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4996/5000 [01:24<00:00, 71.04it/s]0.75
test accuracy:  0.6416
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:26<00:00, 57.68it/s]
test accuracy: 
0.6416
train_time_seconds: 88.370642
8
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 3, 24, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("9/weights/read:0", shape=(64, 10), dtype=float32)
Tensor("9/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/8
16
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 3, 24, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1245/5000 [00:22<00:58, 64.47it/s]0.7
test accuracy:  0.6435
 50%|████████████████████████████████████████████████▊                                                 | 2493/5000 [00:45<00:40, 61.68it/s]0.77
test accuracy:  0.6391
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [01:09<00:18, 65.99it/s]0.76
test accuracy:  0.6449
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [01:31<00:00, 65.69it/s]0.75
test accuracy:  0.6501
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:33<00:00, 53.47it/s]
test accuracy: 
0.6501
train_time_seconds: 95.191448
9
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 3, 24, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("10/weights/read:0", shape=(36, 10), dtype=float32)
Tensor("10/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/9
18
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 3, 24, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1247/5000 [00:23<01:05, 57.35it/s]0.77
test accuracy:  0.6446
 50%|████████████████████████████████████████████████▊                                                 | 2493/5000 [00:48<00:40, 61.45it/s]0.74
test accuracy:  0.6429
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3745/5000 [01:14<00:21, 58.46it/s]0.67
test accuracy:  0.6464
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4994/5000 [01:38<00:00, 59.46it/s]0.73
test accuracy:  0.6474
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:40<00:00,  9.65it/s]
test accuracy: 
0.6474
train_time_seconds: 102.021053
10
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 3, 24, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 36, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("11/weights/read:0", shape=(64, 10), dtype=float32)
Tensor("11/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/10
20
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 3, 24, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:24<01:07, 55.76it/s]0.65
test accuracy:  0.6435
 50%|████████████████████████████████████████████████▉                                                 | 2498/5000 [00:50<00:45, 54.93it/s]0.69
test accuracy:  0.644
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3747/5000 [01:17<00:22, 56.05it/s]0.63
test accuracy:  0.6461
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [01:43<00:00, 58.03it/s]0.72
test accuracy:  0.6489
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:45<00:00, 47.34it/s]
test accuracy: 
0.6489
train_time_seconds: 107.494975
11
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 3, 24, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 36, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("12/weights/read:0", shape=(24, 10), dtype=float32)
Tensor("12/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/11
22
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 3, 24, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 36, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:27<01:15, 49.41it/s]0.81
test accuracy:  0.6384
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [00:55<00:45, 54.72it/s]0.71
test accuracy:  0.6504
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [01:24<00:24, 51.60it/s]0.73
test accuracy:  0.6406
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4994/5000 [01:52<00:00, 52.17it/s]0.74
test accuracy:  0.6423
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:54<00:00,  8.59it/s]
test accuracy: 
0.6423
train_time_seconds: 116.268685
12
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 3, 24, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 36, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(7, 5, 24, 36), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("13/weights/read:0", shape=(36, 10), dtype=float32)
Tensor("13/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/12
24
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 3, 24, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 36, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1247/5000 [00:28<01:15, 49.87it/s]0.78
test accuracy:  0.6456
 50%|████████████████████████████████████████████████▉                                                 | 2495/5000 [00:57<00:52, 48.05it/s]0.8
test accuracy:  0.6488
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3747/5000 [01:28<00:24, 50.17it/s]0.65
test accuracy:  0.6461
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4996/5000 [01:57<00:00, 49.64it/s]0.64
test accuracy:  0.6468
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:59<00:00, 41.84it/s]
test accuracy: 
0.6468
train_time_seconds: 121.673187
13
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 3, 24, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 36, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(7, 5, 24, 36), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(3, 5, 36, 24), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("14/weights/read:0", shape=(24, 10), dtype=float32)
Tensor("14/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/13
26
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 3, 24, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 36, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(7, 5, 24, 36), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1247/5000 [00:30<01:18, 48.03it/s]0.73
test accuracy:  0.6407
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:00<00:50, 49.89it/s]0.66
test accuracy:  0.6426
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [01:32<00:27, 44.98it/s]0.76
test accuracy:  0.6496
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [02:03<00:00, 45.90it/s]0.65
test accuracy:  0.6464
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:05<00:00, 39.89it/s]
test accuracy: 
0.6464
train_time_seconds: 127.607868
14
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 3, 24, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 36, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(7, 5, 24, 36), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(3, 5, 36, 24), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/14/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/14/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("15/weights/read:0", shape=(64, 10), dtype=float32)
Tensor("15/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/14
28
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 3, 24, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 36, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(7, 5, 24, 36), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(3, 5, 36, 24), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 15%|██████████████▊                                                                                    | 748/5000 [00:18<01:33, 45.60it/s]I tensorflow/core/common_runtime/gpu/pool_allocator.cc:247] PoolAllocator: After 28785823 get requests, put_count=28785821 evicted_count=3000 eviction_rate=0.000104218 and unsatisfied allocation rate=0.000104774
 25%|████████████████████████▍                                                                         | 1249/5000 [00:30<01:19, 47.00it/s]0.7
test accuracy:  0.645
 50%|████████████████████████████████████████████████▉                                                 | 2495/5000 [01:02<00:54, 46.14it/s]0.72
test accuracy:  0.6492
 65%|███████████████████████████████████████████████████████████████▌                                  | 3245/5000 [01:23<00:38, 45.10it/s]I tensorflow/core/common_runtime/gpu/pool_allocator.cc:247] PoolAllocator: After 29356323 get requests, put_count=29356321 evicted_count=13000 eviction_rate=0.000442835 and unsatisfied allocation rate=0.00044338
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3747/5000 [01:36<00:27, 44.88it/s]0.74
test accuracy:  0.651
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4996/5000 [02:07<00:00, 45.03it/s]0.75
test accuracy:  0.6501
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:10<00:00, 38.41it/s]
test accuracy: 
0.6501
train_time_seconds: 132.438654
episode: 4
0
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 7, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("1/weights/read:0", shape=(24576, 10), dtype=float32)
Tensor("1/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
 10%|█████████▋                                                                                       | 1991/20000 [00:26<03:11, 93.82it/s]0.56
test accuracy:  0.5137
 20%|███████████████████▎                                                                             | 3991/20000 [00:54<02:51, 93.31it/s]0.51
test accuracy:  0.55
 30%|█████████████████████████████                                                                    | 5996/20000 [01:22<02:30, 93.35it/s]0.54
test accuracy:  0.5435
 40%|██████████████████████████████████████▊                                                          | 7994/20000 [01:50<02:11, 91.19it/s]0.52
test accuracy:  0.5417
 50%|████████████████████████████████████████████████▍                                                | 9994/20000 [02:18<01:46, 93.98it/s]0.55
test accuracy:  0.5474
 60%|█████████████████████████████████████████████████████████▌                                      | 11993/20000 [02:46<01:26, 92.75it/s]0.58
test accuracy:  0.5407
 70%|███████████████████████████████████████████████████████████████████▏                            | 13993/20000 [03:14<01:04, 93.32it/s]0.62
test accuracy:  0.5452
 80%|████████████████████████████████████████████████████████████████████████████▊                   | 15990/20000 [03:42<00:43, 92.88it/s]0.56
test accuracy:  0.5268
 90%|██████████████████████████████████████████████████████████████████████████████████████▍         | 17997/20000 [04:10<00:21, 93.13it/s]0.6
test accuracy:  0.5483
100%|███████████████████████████████████████████████████████████████████████████████████████████████▉| 19998/20000 [04:37<00:00, 92.44it/s]0.48
test accuracy:  0.5414
100%|████████████████████████████████████████████████████████████████████████████████████████████████| 20000/20000 [04:39<00:00, 71.44it/s]
test accuracy: 
0.5414
train_time_seconds: 281.981756
1
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 7, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("2/weights/read:0", shape=(4356, 10), dtype=float32)
Tensor("2/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/1
2
Tensor("global/0/weights/read:0", shape=(5, 7, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▎                                                                         | 1243/5000 [00:17<00:43, 86.10it/s]0.57
test accuracy:  0.5801
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [00:35<00:28, 88.15it/s]0.64
test accuracy:  0.6134
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [00:54<00:14, 87.54it/s]0.64
test accuracy:  0.6182
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4995/5000 [01:12<00:00, 84.77it/s]0.64
test accuracy:  0.6402
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:14<00:00, 66.81it/s]
test accuracy: 
0.6402
train_time_seconds: 76.86994
2
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 7, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("3/weights/read:0", shape=(5808, 10), dtype=float32)
Tensor("3/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/2
4
Tensor("global/0/weights/read:0", shape=(5, 7, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:20<00:54, 69.00it/s]0.69
test accuracy:  0.6634
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [00:42<00:35, 70.17it/s]0.67
test accuracy:  0.691
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3745/5000 [01:05<00:17, 72.10it/s]0.75
test accuracy:  0.7088
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [01:26<00:00, 71.26it/s]0.79
test accuracy:  0.7171
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:28<00:00, 56.42it/s]
test accuracy: 
0.7171
train_time_seconds: 90.718898
3
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 7, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 3, 48, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("4/weights/read:0", shape=(864, 10), dtype=float32)
Tensor("4/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/3
6
Tensor("global/0/weights/read:0", shape=(5, 7, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1247/5000 [00:22<00:56, 66.10it/s]0.77
test accuracy:  0.7092
 50%|████████████████████████████████████████████████▊                                                 | 2493/5000 [00:45<00:38, 64.36it/s]0.75
test accuracy:  0.7329
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3744/5000 [01:09<00:19, 64.22it/s]0.73
test accuracy:  0.7348
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4995/5000 [01:32<00:00, 65.37it/s]0.77
test accuracy:  0.7485
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:35<00:00, 52.57it/s]
test accuracy: 
0.7485
train_time_seconds: 97.255101
4
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 7, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 3, 48, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("5/weights/read:0", shape=(1728, 10), dtype=float32)
Tensor("5/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/4
8
Tensor("global/0/weights/read:0", shape=(5, 7, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 3, 48, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1247/5000 [00:24<01:03, 58.76it/s]0.78
test accuracy:  0.7515
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [00:49<00:42, 58.50it/s]0.79
test accuracy:  0.7611
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3744/5000 [01:16<00:21, 59.33it/s]0.78
test accuracy:  0.7652
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [01:41<00:00, 58.45it/s]0.77
test accuracy:  0.7679
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:43<00:00, 48.08it/s]
test accuracy: 
0.7679
train_time_seconds: 106.20901
5
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 7, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 3, 48, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("6/weights/read:0", shape=(1728, 10), dtype=float32)
Tensor("6/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/5
10
Tensor("global/0/weights/read:0", shape=(5, 7, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 3, 48, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:26<01:07, 55.97it/s]0.78
test accuracy:  0.755
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [00:52<00:46, 53.48it/s]0.83
test accuracy:  0.7628
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [01:20<00:22, 54.55it/s]0.81
test accuracy:  0.768
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4996/5000 [01:46<00:00, 52.62it/s]0.82
test accuracy:  0.772
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:48<00:00, 45.97it/s]
test accuracy: 
0.772
train_time_seconds: 111.124892
6
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 7, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 3, 48, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 5, 48, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("7/weights/read:0", shape=(96, 10), dtype=float32)
Tensor("7/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/6
12
Tensor("global/0/weights/read:0", shape=(5, 7, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 3, 48, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:27<01:11, 52.38it/s]0.78
test accuracy:  0.7739
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [00:54<00:48, 51.09it/s]0.75
test accuracy:  0.7838
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [01:24<00:24, 52.06it/s]0.84
test accuracy:  0.7838
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4995/5000 [01:52<00:00, 51.27it/s]0.82
test accuracy:  0.7846
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:54<00:00, 43.73it/s]
test accuracy: 
0.7846
train_time_seconds: 116.360013
7
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 7, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 3, 48, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 5, 48, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("8/weights/read:0", shape=(24, 10), dtype=float32)
Tensor("8/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/7
14
Tensor("global/0/weights/read:0", shape=(5, 7, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 3, 48, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 5, 48, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:28<01:19, 46.96it/s]0.82
test accuracy:  0.779
 50%|████████████████████████████████████████████████▉                                                 | 2495/5000 [00:58<00:54, 46.15it/s]0.75
test accuracy:  0.7819
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3745/5000 [01:29<00:26, 47.30it/s]0.81
test accuracy:  0.7849
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4998/5000 [01:59<00:00, 48.34it/s]0.82
test accuracy:  0.7883
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:01<00:00, 41.27it/s]
test accuracy: 
0.7883
train_time_seconds: 123.326677
8
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 7, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 3, 48, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 5, 48, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("9/weights/read:0", shape=(36, 10), dtype=float32)
Tensor("9/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/8
16
Tensor("global/0/weights/read:0", shape=(5, 7, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 3, 48, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 5, 48, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:30<01:20, 46.40it/s]0.8
test accuracy:  0.7865
 50%|████████████████████████████████████████████████▉                                                 | 2496/5000 [01:01<00:55, 45.20it/s]0.82
test accuracy:  0.7903
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3747/5000 [01:34<00:28, 43.98it/s]0.85
test accuracy:  0.7936
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [02:06<00:00, 45.59it/s]0.85
test accuracy:  0.7916
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:08<00:00, 38.81it/s]
test accuracy: 
0.7916
train_time_seconds: 131.157813
9
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 7, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 3, 48, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 5, 48, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("10/weights/read:0", shape=(36, 10), dtype=float32)
Tensor("10/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/9
18
Tensor("global/0/weights/read:0", shape=(5, 7, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 3, 48, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 5, 48, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:32<01:31, 40.99it/s]0.89
test accuracy:  0.787
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:04<01:00, 41.58it/s]0.81
test accuracy:  0.7928
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [01:39<00:30, 40.76it/s]0.87
test accuracy:  0.7897
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4998/5000 [02:12<00:00, 43.87it/s]0.81
test accuracy:  0.791
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:15<00:00, 37.01it/s]
test accuracy: 
0.791
train_time_seconds: 137.459356
10
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 7, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 3, 48, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 5, 48, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("11/weights/read:0", shape=(48, 10), dtype=float32)
Tensor("11/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/10
20
Tensor("global/0/weights/read:0", shape=(5, 7, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 3, 48, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 5, 48, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1247/5000 [00:33<01:30, 41.35it/s]0.8
test accuracy:  0.7913
 50%|████████████████████████████████████████████████▉                                                 | 2496/5000 [01:08<01:00, 41.18it/s]0.9
test accuracy:  0.795
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [01:44<00:32, 38.88it/s]0.76
test accuracy:  0.7877
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4996/5000 [02:19<00:00, 41.50it/s]0.78
test accuracy:  0.7895
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:22<00:00, 35.13it/s]
test accuracy: 
0.7895
train_time_seconds: 144.800067
11
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 7, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 3, 48, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 5, 48, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(7, 3, 48, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("12/weights/read:0", shape=(24, 10), dtype=float32)
Tensor("12/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/11
22
Tensor("global/0/weights/read:0", shape=(5, 7, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 3, 48, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 5, 48, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:35<01:35, 39.32it/s]0.81
test accuracy:  0.7872
 50%|████████████████████████████████████████████████▉                                                 | 2498/5000 [01:12<01:05, 37.91it/s]0.85
test accuracy:  0.7949
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3746/5000 [01:49<00:32, 38.99it/s]0.84
test accuracy:  0.7944
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [02:26<00:00, 36.68it/s]0.88
test accuracy:  0.7914
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:29<00:00, 33.50it/s]
test accuracy: 
0.7914
train_time_seconds: 151.809724
12
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 7, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 3, 48, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 5, 48, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(7, 3, 48, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(5, 1, 24, 36), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("13/weights/read:0", shape=(36, 10), dtype=float32)
Tensor("13/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/12
24
Tensor("global/0/weights/read:0", shape=(5, 7, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 3, 48, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 5, 48, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(7, 3, 48, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:37<01:40, 37.32it/s]0.89
test accuracy:  0.7955
 50%|████████████████████████████████████████████████▉                                                 | 2495/5000 [01:14<01:09, 35.99it/s]0.91
test accuracy:  0.7946
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [01:54<00:33, 37.05it/s]0.91
test accuracy:  0.7883
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [02:32<00:00, 36.09it/s]0.76
test accuracy:  0.7977
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:35<00:00, 32.15it/s]
test accuracy: 
0.7977
train_time_seconds: 158.341585
13
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 7, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 3, 48, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 5, 48, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(7, 3, 48, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(5, 1, 24, 36), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("14/weights/read:0", shape=(48, 10), dtype=float32)
Tensor("14/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/13
26
Tensor("global/0/weights/read:0", shape=(5, 7, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 3, 48, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 5, 48, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(7, 3, 48, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(5, 1, 24, 36), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1247/5000 [00:38<01:48, 34.49it/s]0.83
test accuracy:  0.7946
 50%|████████████████████████████████████████████████▉                                                 | 2498/5000 [01:18<01:09, 35.87it/s]0.88
test accuracy:  0.7922
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [02:00<00:36, 34.74it/s]0.85
test accuracy:  0.7943
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4998/5000 [02:39<00:00, 36.57it/s]0.9
test accuracy:  0.7985
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:42<00:00, 30.76it/s]
test accuracy: 
0.7985
train_time_seconds: 165.499273
14
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 7, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 3, 48, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 5, 48, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(7, 3, 48, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(5, 1, 24, 36), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/14/weights/read:0", shape=(3, 1, 48, 48), dtype=float32)
Tensor("global/14/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("15/weights/read:0", shape=(48, 10), dtype=float32)
Tensor("15/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/14
28
Tensor("global/0/weights/read:0", shape=(5, 7, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 3, 48, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 5, 48, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 24, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 5, 24, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(7, 3, 48, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(5, 1, 24, 36), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1247/5000 [00:40<01:49, 34.35it/s]0.9
test accuracy:  0.7954
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [01:22<01:14, 33.78it/s]0.88
test accuracy:  0.7961
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3747/5000 [02:05<00:35, 35.20it/s]0.84
test accuracy:  0.8016
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [02:46<00:00, 33.82it/s]0.88
test accuracy:  0.7953
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:49<00:00, 29.49it/s]
test accuracy: 
0.7953
train_time_seconds: 172.535124
episode: 5
0
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("1/weights/read:0", shape=(49152, 10), dtype=float32)
Tensor("1/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
 10%|█████████▋                                                                                       | 1999/20000 [00:37<04:48, 62.32it/s]0.51
test accuracy:  0.5073
 20%|███████████████████▍                                                                             | 3995/20000 [01:17<04:19, 61.77it/s]0.61
test accuracy:  0.5273
 30%|█████████████████████████████                                                                    | 5996/20000 [01:57<03:41, 63.17it/s]0.51
test accuracy:  0.5483
 40%|██████████████████████████████████████▊                                                          | 7995/20000 [02:37<03:10, 63.10it/s]0.6
test accuracy:  0.5504
 45%|████████████████████████████████████████████                                                     | 9078/20000 [03:01<03:13, 56.32it/s] 50%|████████████████████████████████████████████████▍                                                | 9995/20000 [03:17<02:40, 62.53it/s]0.54
test accuracy:  0.5467
 60%|█████████████████████████████████████████████████████████▌                                      | 11996/20000 [03:57<02:06, 63.12it/s]0.55
test accuracy:  0.5468
 70%|███████████████████████████████████████████████████████████████████▏                            | 13998/20000 [04:37<01:33, 64.06it/s]0.49
test accuracy:  0.5466
 80%|████████████████████████████████████████████████████████████████████████████▊                   | 15993/20000 [05:17<01:03, 62.94it/s]0.58
test accuracy:  0.5365
 90%|██████████████████████████████████████████████████████████████████████████████████████▍         | 17998/20000 [05:57<00:31, 63.18it/s]0.58
test accuracy:  0.5443
100%|███████████████████████████████████████████████████████████████████████████████████████████████▉| 19993/20000 [06:37<00:00, 62.52it/s]0.64
test accuracy:  0.5468
100%|████████████████████████████████████████████████████████████████████████████████████████████████| 20000/20000 [06:40<00:00,  7.71it/s]
test accuracy: 
0.5468
train_time_seconds: 403.054548
1
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("2/weights/read:0", shape=(49152, 10), dtype=float32)
Tensor("2/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/1
2
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:38<01:43, 36.35it/s]0.56
test accuracy:  0.5618
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:17<01:08, 36.55it/s]0.59
test accuracy:  0.5887
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [01:58<00:34, 36.39it/s]0.51
test accuracy:  0.6216
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [02:37<00:00, 36.04it/s]0.58
test accuracy:  0.6297
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:40<00:00, 31.07it/s]
test accuracy: 
0.6297
train_time_seconds: 164.027933
2
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("3/weights/read:0", shape=(6144, 10), dtype=float32)
Tensor("3/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/2
4
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:42<01:54, 32.74it/s]0.69
test accuracy:  0.651
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:25<01:16, 32.82it/s]0.7
test accuracy:  0.6702
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [02:10<00:37, 33.11it/s]0.72
test accuracy:  0.6871
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [02:53<00:00, 32.88it/s]0.7
test accuracy:  0.6935
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:57<00:00, 28.23it/s]
test accuracy: 
0.6935
train_time_seconds: 180.161917
3
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("4/weights/read:0", shape=(864, 10), dtype=float32)
Tensor("4/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/3
6
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1247/5000 [00:43<01:59, 31.47it/s]0.7
test accuracy:  0.6936
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [01:28<01:18, 31.83it/s]0.63
test accuracy:  0.7059
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3747/5000 [02:15<00:39, 32.08it/s]0.72
test accuracy:  0.7198
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [03:00<00:00, 31.31it/s]0.8
test accuracy:  0.726
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [03:03<00:00, 27.25it/s]
test accuracy: 
0.726
train_time_seconds: 186.665723
4
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("5/weights/read:0", shape=(216, 10), dtype=float32)
Tensor("5/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/4
8
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:45<01:59, 31.34it/s]0.77
test accuracy:  0.7294
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:31<01:19, 31.36it/s]0.78
test accuracy:  0.7417
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [02:20<00:41, 29.84it/s]0.77
test accuracy:  0.7479
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [03:07<00:00, 30.30it/s]0.77
test accuracy:  0.745
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [03:11<00:00, 26.15it/s]
test accuracy: 
0.745
train_time_seconds: 194.477454
5
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("6/weights/read:0", shape=(144, 10), dtype=float32)
Tensor("6/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/5
10
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:47<02:12, 28.36it/s]0.76
test accuracy:  0.7304
 50%|████████████████████████████████████████████████▉                                                 | 2498/5000 [01:35<01:25, 29.14it/s]0.7
test accuracy:  0.7313
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [02:27<00:46, 27.08it/s]0.72
test accuracy:  0.7394
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4998/5000 [03:18<00:00, 27.59it/s]0.74
test accuracy:  0.7389
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [03:22<00:00, 24.70it/s]
test accuracy: 
0.7389
train_time_seconds: 205.855457
6
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("7/weights/read:0", shape=(36, 10), dtype=float32)
Tensor("7/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/6
12
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:51<02:20, 26.66it/s]0.71
test accuracy:  0.6815
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:45<01:33, 26.67it/s]0.67
test accuracy:  0.6828
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [02:40<00:47, 26.62it/s]0.69
test accuracy:  0.6989
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [03:32<00:00, 26.15it/s]0.72
test accuracy:  0.6974
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [03:36<00:00,  2.58it/s]
test accuracy: 
0.6974
train_time_seconds: 220.083703
7
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("8/weights/read:0", shape=(24, 10), dtype=float32)
Tensor("8/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/7
14
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:51<02:20, 26.74it/s]0.66
test accuracy:  0.6998
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:45<01:41, 24.64it/s]0.67
test accuracy:  0.7002
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [02:41<00:48, 25.99it/s]0.74
test accuracy:  0.7074
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [03:36<00:00, 25.54it/s]0.72
test accuracy:  0.7114
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [03:39<00:00,  2.57it/s]
test accuracy: 
0.7114
train_time_seconds: 223.298827
8
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("9/weights/read:0", shape=(24, 10), dtype=float32)
Tensor("9/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/8
16
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:53<02:30, 24.94it/s]0.66
test accuracy:  0.7089
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:48<01:39, 25.21it/s]0.69
test accuracy:  0.7157
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [02:45<00:50, 24.97it/s]0.7
test accuracy:  0.7124
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [03:40<00:00, 26.42it/s]0.73
test accuracy:  0.7153
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [03:44<00:00,  2.41it/s]
test accuracy: 
0.7153
train_time_seconds: 228.495236
9
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(5, 1, 24, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("10/weights/read:0", shape=(64, 10), dtype=float32)
Tensor("10/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/9
18
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:55<02:31, 24.82it/s]0.73
test accuracy:  0.7161
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:52<01:42, 24.45it/s]0.73
test accuracy:  0.7222
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [02:51<00:50, 24.73it/s]0.83
test accuracy:  0.7173
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [03:48<00:00, 24.88it/s]0.72
test accuracy:  0.7241
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [03:52<00:00,  2.33it/s]
test accuracy: 
0.7241
train_time_seconds: 235.961551
10
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(5, 1, 24, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("11/weights/read:0", shape=(64, 10), dtype=float32)
Tensor("11/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/10
20
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(5, 1, 24, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:57<02:38, 23.74it/s]0.77
test accuracy:  0.7223
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:55<01:42, 24.52it/s]0.7
test accuracy:  0.7228
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [02:56<00:53, 23.38it/s]0.75
test accuracy:  0.7221
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [03:55<00:00, 23.45it/s]0.75
test accuracy:  0.7201
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [03:59<00:00,  2.27it/s]
test accuracy: 
0.7201
train_time_seconds: 243.358804
11
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(5, 1, 24, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("12/weights/read:0", shape=(24, 10), dtype=float32)
Tensor("12/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/11
22
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(5, 1, 24, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:58<02:44, 22.75it/s]0.71
test accuracy:  0.7304
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:58<01:43, 24.24it/s]0.75
test accuracy:  0.7279
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [03:00<00:53, 23.33it/s]0.78
test accuracy:  0.7269
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [04:00<00:00, 23.48it/s]0.7
test accuracy:  0.7311
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [04:04<00:00,  2.29it/s]
test accuracy: 
0.7311
train_time_seconds: 248.432375
12
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(5, 1, 24, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("13/weights/read:0", shape=(64, 10), dtype=float32)
Tensor("13/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/12
24
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(5, 1, 24, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:59<02:42, 23.06it/s]0.73
test accuracy:  0.7288
 50%|████████████████████████████████████████████████▉                                                 | 2498/5000 [02:00<01:51, 22.43it/s]0.83
test accuracy:  0.732
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [02:59<00:56, 22.29it/s]0.8
test accuracy:  0.7332
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [03:58<00:00, 22.59it/s]0.81
test accuracy:  0.7308
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [04:01<00:00, 20.72it/s]
test accuracy: 
0.7308
train_time_seconds: 245.348043
13
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(5, 1, 24, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(5, 1, 64, 36), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("14/weights/read:0", shape=(36, 10), dtype=float32)
Tensor("14/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/13
26
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(5, 1, 24, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1247/5000 [00:58<02:51, 21.91it/s]0.75
test accuracy:  0.7274
 50%|████████████████████████████████████████████████▉                                                 | 2498/5000 [01:59<01:53, 22.09it/s]0.81
test accuracy:  0.7343
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [03:00<00:56, 22.07it/s]0.74
test accuracy:  0.734
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [04:01<00:00, 21.47it/s]0.78
test accuracy:  0.7389
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [04:04<00:00,  3.12it/s]
test accuracy: 
0.7389
train_time_seconds: 246.798818
14
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(5, 1, 24, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(5, 1, 64, 36), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/14/weights/read:0", shape=(1, 5, 36, 64), dtype=float32)
Tensor("global/14/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("15/weights/read:0", shape=(64, 10), dtype=float32)
Tensor("15/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/14
28
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(5, 1, 24, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(5, 1, 64, 36), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [01:00<02:54, 21.46it/s]0.79
test accuracy:  0.7353
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [02:02<01:57, 21.36it/s]0.74
test accuracy:  0.7304
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [03:05<00:56, 21.98it/s]0.72
test accuracy:  0.736
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4998/5000 [04:06<00:00, 21.89it/s]0.74
test accuracy:  0.7349
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [04:09<00:00, 20.04it/s]
test accuracy: 
0.7349
train_time_seconds: 252.242039
episode: 6
0
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("1/weights/read:0", shape=(16384, 10), dtype=float32)
Tensor("1/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
 10%|█████████▌                                                                                      | 1993/20000 [00:18<02:17, 130.82it/s]0.44
test accuracy:  0.4579
 20%|███████████████████▏                                                                            | 3990/20000 [00:38<02:04, 129.04it/s]0.55
test accuracy:  0.4775
 30%|████████████████████████████▊                                                                   | 5994/20000 [00:57<01:46, 131.40it/s]0.51
test accuracy:  0.4961
 40%|██████████████████████████████████████▎                                                         | 7992/20000 [01:17<01:33, 128.86it/s]0.54
test accuracy:  0.5034
 50%|███████████████████████████████████████████████▉                                                | 9998/20000 [01:37<01:17, 128.77it/s]0.49
test accuracy:  0.506
 60%|████████████████████████████████████████████████████████▉                                      | 11993/20000 [01:57<01:01, 130.58it/s]0.62
test accuracy:  0.5072
 70%|██████████████████████████████████████████████████████████████████▍                            | 13997/20000 [02:17<00:46, 129.73it/s]0.55
test accuracy:  0.5174
 80%|███████████████████████████████████████████████████████████████████████████▉                   | 15996/20000 [02:36<00:31, 128.71it/s]0.45
test accuracy:  0.4902
 90%|█████████████████████████████████████████████████████████████████████████████████████▍         | 17989/20000 [02:56<00:15, 131.96it/s]0.44
test accuracy:  0.5091
100%|██████████████████████████████████████████████████████████████████████████████████████████████▉| 19991/20000 [03:16<00:00, 127.55it/s]0.58
test accuracy:  0.5085
100%|███████████████████████████████████████████████████████████████████████████████████████████████| 20000/20000 [03:17<00:00, 101.09it/s]
test accuracy: 
0.5085
train_time_seconds: 199.300994
1
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("2/weights/read:0", shape=(12288, 10), dtype=float32)
Tensor("2/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/1
2
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▎                                                                         | 1243/5000 [00:18<00:50, 74.43it/s]0.63
test accuracy:  0.5698
 50%|████████████████████████████████████████████████▉                                                 | 2494/5000 [00:37<00:33, 74.85it/s]0.62
test accuracy:  0.6162
 75%|█████████████████████████████████████████████████████████████████████████▎                        | 3743/5000 [00:57<00:16, 75.91it/s]0.59
test accuracy:  0.6316
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▊| 4992/5000 [01:17<00:00, 74.11it/s]0.68
test accuracy:  0.6464
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:18<00:00, 13.03it/s]
test accuracy: 
0.6464
train_time_seconds: 80.516809
2
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 3, 48, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("3/weights/read:0", shape=(4096, 10), dtype=float32)
Tensor("3/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/2
4
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1245/5000 [00:20<00:55, 67.64it/s]0.62
test accuracy:  0.6291
 50%|████████████████████████████████████████████████▉                                                 | 2495/5000 [00:41<00:36, 68.69it/s]0.55
test accuracy:  0.6372
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3745/5000 [01:04<00:18, 67.54it/s]0.72
test accuracy:  0.6693
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▊| 4993/5000 [01:25<00:00, 66.92it/s]0.64
test accuracy:  0.6771
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:27<00:00, 11.06it/s]
test accuracy: 
0.6771
train_time_seconds: 89.135478
3
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 3, 48, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("4/weights/read:0", shape=(3072, 10), dtype=float32)
Tensor("4/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/3
6
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 3, 48, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:22<01:01, 61.18it/s]0.66
test accuracy:  0.6735
 50%|████████████████████████████████████████████████▉                                                 | 2496/5000 [00:46<00:41, 60.15it/s]0.74
test accuracy:  0.6924
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3745/5000 [01:10<00:20, 61.17it/s]0.77
test accuracy:  0.6912
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4995/5000 [01:34<00:00, 62.40it/s]0.72
test accuracy:  0.6997
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:36<00:00, 52.05it/s]
test accuracy: 
0.6997
train_time_seconds: 97.798107
4
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 3, 48, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("5/weights/read:0", shape=(4096, 10), dtype=float32)
Tensor("5/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/4
8
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 3, 48, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1244/5000 [00:25<01:07, 55.89it/s]0.77
test accuracy:  0.7059
 50%|████████████████████████████████████████████████▉                                                 | 2498/5000 [00:50<00:45, 55.15it/s]0.62
test accuracy:  0.7029
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3746/5000 [01:18<00:22, 56.10it/s]0.8
test accuracy:  0.717
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4998/5000 [01:44<00:00, 56.22it/s]0.82
test accuracy:  0.73
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:46<00:00, 46.97it/s]
test accuracy: 
0.73
train_time_seconds: 108.277602
5
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 3, 48, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("6/weights/read:0", shape=(216, 10), dtype=float32)
Tensor("6/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/5
10
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 3, 48, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1246/5000 [00:26<01:12, 51.69it/s]0.74
test accuracy:  0.7292
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [00:54<00:48, 51.50it/s]0.86
test accuracy:  0.7376
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [01:24<00:24, 51.20it/s]0.84
test accuracy:  0.7434
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4996/5000 [01:51<00:00, 51.87it/s]0.78
test accuracy:  0.7444
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:53<00:00, 43.90it/s]
test accuracy: 
0.7444
train_time_seconds: 115.803226
6
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 3, 48, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 1, 24, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("7/weights/read:0", shape=(432, 10), dtype=float32)
Tensor("7/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/6
12
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 3, 48, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1246/5000 [00:28<01:16, 49.14it/s]0.82
test accuracy:  0.7488
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [00:57<00:51, 48.58it/s]0.78
test accuracy:  0.7415
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [01:28<00:25, 48.35it/s]0.8
test accuracy:  0.7453
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4998/5000 [01:58<00:00, 49.34it/s]0.78
test accuracy:  0.7516
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:00<00:00, 41.53it/s]
test accuracy: 
0.7516
train_time_seconds: 122.343351
7
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 3, 48, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 1, 24, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("8/weights/read:0", shape=(576, 10), dtype=float32)
Tensor("8/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/7
14
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 3, 48, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 1, 24, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1246/5000 [00:30<01:23, 45.22it/s]0.84
test accuracy:  0.7547
 50%|████████████████████████████████████████████████▉                                                 | 2498/5000 [01:01<00:55, 45.21it/s]0.87
test accuracy:  0.7509
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3747/5000 [01:34<00:27, 46.09it/s]0.74
test accuracy:  0.7542
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [02:05<00:00, 46.18it/s]0.83
test accuracy:  0.7657
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:07<00:00, 39.14it/s]
test accuracy: 
0.7657
train_time_seconds: 129.83878
8
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 3, 48, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 1, 24, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 3, 64, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("9/weights/read:0", shape=(96, 10), dtype=float32)
Tensor("9/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/8
16
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 3, 48, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 1, 24, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:32<01:27, 43.08it/s]0.83
test accuracy:  0.7601
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:04<00:59, 42.12it/s]0.87
test accuracy:  0.766
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [01:38<00:29, 42.30it/s]0.85
test accuracy:  0.7657
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4998/5000 [02:11<00:00, 42.08it/s]0.88
test accuracy:  0.7661
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:13<00:00, 37.44it/s]
test accuracy: 
0.7661
train_time_seconds: 135.821228
9
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 3, 48, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 1, 24, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 3, 64, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("10/weights/read:0", shape=(256, 10), dtype=float32)
Tensor("10/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/9
18
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 3, 48, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 1, 24, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 3, 64, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1245/5000 [00:33<01:31, 41.18it/s]0.75
test accuracy:  0.7639
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:08<01:00, 41.07it/s]0.89
test accuracy:  0.7623
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3746/5000 [01:44<00:31, 40.22it/s]0.85
test accuracy:  0.7689
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4995/5000 [02:18<00:00, 40.19it/s]0.86
test accuracy:  0.7647
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:20<00:00,  6.48it/s]
test accuracy: 
0.7647
train_time_seconds: 142.951321
10
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 3, 48, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 1, 24, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 3, 64, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(3, 1, 64, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("11/weights/read:0", shape=(48, 10), dtype=float32)
Tensor("11/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/10
20
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 3, 48, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 1, 24, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 3, 64, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1246/5000 [00:35<01:33, 40.06it/s]0.87
test accuracy:  0.7653
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:11<01:05, 38.41it/s]0.86
test accuracy:  0.7662
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3745/5000 [01:49<00:33, 37.30it/s]0.84
test accuracy:  0.7711
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4995/5000 [02:25<00:00, 37.92it/s]0.88
test accuracy:  0.7694
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:27<00:00,  6.18it/s]
test accuracy: 
0.7694
train_time_seconds: 150.027801
11
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 3, 48, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 1, 24, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 3, 64, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(3, 1, 64, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 7, 48, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("12/weights/read:0", shape=(48, 10), dtype=float32)
Tensor("12/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/11
22
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 3, 48, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 1, 24, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 3, 64, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(3, 1, 64, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:36<01:39, 37.75it/s]0.84
test accuracy:  0.7605
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:14<01:07, 37.34it/s]0.83
test accuracy:  0.7724
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [01:53<00:34, 36.14it/s]0.88
test accuracy:  0.7674
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4998/5000 [02:31<00:00, 36.00it/s]0.88
test accuracy:  0.7743
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:33<00:00, 32.49it/s]
test accuracy: 
0.7743
train_time_seconds: 156.301339
12
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 3, 48, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 1, 24, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 3, 64, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(3, 1, 64, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 7, 48, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("13/weights/read:0", shape=(36, 10), dtype=float32)
Tensor("13/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/12
24
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 3, 48, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 1, 24, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 3, 64, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(3, 1, 64, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 7, 48, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1246/5000 [00:38<01:51, 33.69it/s]0.89
test accuracy:  0.7729
 50%|████████████████████████████████████████████████▉                                                 | 2496/5000 [01:18<01:11, 35.00it/s]0.88
test accuracy:  0.774
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3746/5000 [01:59<00:35, 35.04it/s]0.92
test accuracy:  0.7719
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4996/5000 [02:38<00:00, 35.51it/s]0.9
test accuracy:  0.7757
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:41<00:00,  4.76it/s]
test accuracy: 
0.7757
train_time_seconds: 163.780719
13
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 3, 48, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 1, 24, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 3, 64, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(3, 1, 64, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 7, 48, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(3, 5, 36, 64), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("14/weights/read:0", shape=(64, 10), dtype=float32)
Tensor("14/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/13
26
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 3, 48, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 1, 24, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 3, 64, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(3, 1, 64, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 7, 48, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:39<01:46, 35.37it/s]0.86
test accuracy:  0.7741
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:20<01:11, 34.84it/s]0.87
test accuracy:  0.7731
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [02:03<00:37, 33.31it/s]0.87
test accuracy:  0.7731
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [02:44<00:00, 33.48it/s]0.85
test accuracy:  0.7743
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:46<00:00, 29.95it/s]
test accuracy: 
0.7743
train_time_seconds: 169.459049
14
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 1] stride:[3, 3] num_filters:48}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 3, 48, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 1, 24, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 3, 64, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(3, 1, 64, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 7, 48, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(3, 5, 36, 64), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/14/weights/read:0", shape=(7, 5, 64, 36), dtype=float32)
Tensor("global/14/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("15/weights/read:0", shape=(36, 10), dtype=float32)
Tensor("15/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/14
28
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 3, 48, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 1, 24, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 3, 64, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(3, 1, 64, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 7, 48, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(3, 5, 36, 64), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1247/5000 [00:41<01:54, 32.92it/s]0.8
test accuracy:  0.7748
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [01:23<01:13, 33.95it/s]0.82
test accuracy:  0.774
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3747/5000 [02:07<00:37, 33.49it/s]0.9
test accuracy:  0.7782
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4998/5000 [02:49<00:00, 32.87it/s]0.91
test accuracy:  0.7776
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:52<00:00, 29.00it/s]
test accuracy: 
0.7776
train_time_seconds: 175.114655
episode: 7
0
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("1/weights/read:0", shape=(49152, 10), dtype=float32)
Tensor("1/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
 10%|█████████▋                                                                                       | 1995/20000 [00:36<04:46, 62.93it/s]0.5
test accuracy:  0.5027
 20%|███████████████████▍                                                                             | 3996/20000 [01:14<04:13, 63.10it/s]0.54
test accuracy:  0.512
 30%|█████████████████████████████                                                                    | 5995/20000 [01:52<03:44, 62.26it/s]0.59
test accuracy:  0.5273
 40%|██████████████████████████████████████▊                                                          | 7995/20000 [02:31<03:11, 62.55it/s]0.59
test accuracy:  0.5444
 50%|████████████████████████████████████████████████▍                                                | 9995/20000 [03:09<02:38, 63.24it/s]0.6
test accuracy:  0.5413
 60%|█████████████████████████████████████████████████████████▌                                      | 11995/20000 [03:48<02:07, 62.92it/s]0.55
test accuracy:  0.5433
 70%|███████████████████████████████████████████████████████████████████▏                            | 13996/20000 [04:26<01:35, 62.98it/s]0.59
test accuracy:  0.5514
 80%|████████████████████████████████████████████████████████████████████████████▊                   | 15995/20000 [05:04<01:03, 63.24it/s]0.57
test accuracy:  0.5473
 90%|██████████████████████████████████████████████████████████████████████████████████████▍         | 17995/20000 [05:43<00:31, 63.54it/s]0.51
test accuracy:  0.5401
100%|███████████████████████████████████████████████████████████████████████████████████████████████▉| 19994/20000 [06:21<00:00, 62.94it/s]0.59
test accuracy:  0.54
100%|████████████████████████████████████████████████████████████████████████████████████████████████| 20000/20000 [06:23<00:00, 52.09it/s]
test accuracy: 
0.54
train_time_seconds: 386.205353
1
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("2/weights/read:0", shape=(49152, 10), dtype=float32)
Tensor("2/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/1
2
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:45<02:07, 29.37it/s]0.62
test accuracy:  0.5271
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [01:32<01:25, 29.26it/s]0.65
test accuracy:  0.6393
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3747/5000 [02:21<00:42, 29.43it/s]0.61
test accuracy:  0.6435
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [03:08<00:00, 29.64it/s]0.66
test accuracy:  0.6599
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [03:10<00:00,  3.18it/s]
test accuracy: 
0.6599
train_time_seconds: 193.927944
2
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("3/weights/read:0", shape=(49152, 10), dtype=float32)
Tensor("3/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/2
4
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [01:00<02:51, 21.84it/s]0.64
test accuracy:  0.6018
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [02:02<01:54, 21.77it/s]0.61
test accuracy:  0.6183
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [03:05<00:57, 21.66it/s]0.6
test accuracy:  0.6451
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [04:07<00:00, 21.66it/s]0.72
test accuracy:  0.6613
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [04:10<00:00,  2.69it/s]
test accuracy: 
0.6613
train_time_seconds: 254.283388
3
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("4/weights/read:0", shape=(65536, 10), dtype=float32)
Tensor("4/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/3
6
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [01:18<03:46, 16.53it/s]0.51
test accuracy:  0.5772
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [02:38<02:31, 16.56it/s]0.67
test accuracy:  0.6498
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [04:00<01:15, 16.65it/s]0.66
test accuracy:  0.6738
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [05:20<00:00, 16.59it/s]0.73
test accuracy:  0.699
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [05:24<00:00, 15.42it/s]
test accuracy: 
0.699
train_time_seconds: 328.181356
4
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("5/weights/read:0", shape=(65536, 10), dtype=float32)
Tensor("5/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/4
8
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [01:43<05:02, 12.39it/s]0.75
test accuracy:  0.6528
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [03:29<03:22, 12.37it/s]0.7
test accuracy:  0.6785
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [05:17<01:43, 12.09it/s]0.81
test accuracy:  0.6877
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [07:03<00:00, 12.46it/s]0.69
test accuracy:  0.6994
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [07:08<00:00, 11.68it/s]
test accuracy: 
0.6994
train_time_seconds: 432.183489
5
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("6/weights/read:0", shape=(65536, 10), dtype=float32)
Tensor("6/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/5
10
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [02:08<06:19,  9.89it/s]0.62
test accuracy:  0.5872
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [04:21<04:14,  9.82it/s]0.68
test accuracy:  0.647
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [06:37<02:05,  9.99it/s]0.71
test accuracy:  0.6575
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [08:48<00:00,  9.97it/s]0.65
test accuracy:  0.6746
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [08:53<00:00,  1.57s/it]
test accuracy: 
0.6746
train_time_seconds: 538.604542
6
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 3, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("7/weights/read:0", shape=(5808, 10), dtype=float32)
Tensor("7/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/6
12
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [02:07<06:22,  9.80it/s]0.7
test accuracy:  0.6735
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [04:18<04:13,  9.88it/s]0.65
test accuracy:  0.6806
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [06:30<02:05, 10.01it/s]0.72
test accuracy:  0.694
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [08:41<00:00, 10.07it/s]0.67
test accuracy:  0.7049
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [08:46<00:00,  9.50it/s]
test accuracy: 
0.7049
train_time_seconds: 531.051024
7
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 3, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 1, 48, 36), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("8/weights/read:0", shape=(576, 10), dtype=float32)
Tensor("8/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/7
14
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 3, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [02:09<06:24,  9.75it/s]0.69
test accuracy:  0.7004
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [04:24<04:15,  9.80it/s]0.66
test accuracy:  0.7063
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [06:39<02:06,  9.89it/s]0.73
test accuracy:  0.721
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4998/5000 [08:52<00:00,  9.81it/s]0.76
test accuracy:  0.7226
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [08:57<00:00,  1.26it/s]
test accuracy: 
0.7226
train_time_seconds: 541.824219
8
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 3, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 1, 48, 36), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 36, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("9/weights/read:0", shape=(576, 10), dtype=float32)
Tensor("9/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/8
16
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 3, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 1, 48, 36), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [02:12<06:30,  9.61it/s]0.72
test accuracy:  0.7224
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [04:28<04:18,  9.68it/s]0.8
test accuracy:  0.741
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [06:45<02:09,  9.64it/s]0.79
test accuracy:  0.7475
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [09:01<00:00,  9.48it/s]0.76
test accuracy:  0.7462
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [09:05<00:00,  1.49s/it]
test accuracy: 
0.7462
train_time_seconds: 550.554655
9
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 3, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 1, 48, 36), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 36, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("10/weights/read:0", shape=(768, 10), dtype=float32)
Tensor("10/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/9
18
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 3, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 1, 48, 36), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 36, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [02:14<06:37,  9.45it/s]0.84
test accuracy:  0.7542
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [04:32<04:19,  9.64it/s]0.77
test accuracy:  0.7472
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [06:52<02:13,  9.39it/s]0.81
test accuracy:  0.7658
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [09:09<00:00,  9.40it/s]0.76
test accuracy:  0.764
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [09:14<00:00,  1.55s/it]
test accuracy: 
0.764
train_time_seconds: 559.638166
10
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 3, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 1, 48, 36), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 36, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 48, 36), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("11/weights/read:0", shape=(144, 10), dtype=float32)
Tensor("11/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/10
20
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 3, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 1, 48, 36), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 36, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [02:16<06:44,  9.27it/s]0.8
test accuracy:  0.7657
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [04:37<04:25,  9.43it/s]0.67
test accuracy:  0.7625
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [06:59<02:11,  9.53it/s]0.83
test accuracy:  0.7754
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [09:19<00:00,  9.22it/s]0.84
test accuracy:  0.7704
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [09:24<00:00,  1.61s/it]
test accuracy: 
0.7704
train_time_seconds: 569.776269
11
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 3, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 1, 48, 36), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 36, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 48, 36), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 7, 36, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("12/weights/read:0", shape=(24, 10), dtype=float32)
Tensor("12/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/11
22
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 3, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 1, 48, 36), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 36, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 48, 36), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [02:18<06:50,  9.15it/s]0.83
test accuracy:  0.7723
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [04:40<04:30,  9.26it/s]0.8
test accuracy:  0.7731
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [07:04<02:17,  9.07it/s]0.81
test accuracy:  0.7836
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [09:26<00:00,  9.33it/s]0.83
test accuracy:  0.7795
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [09:32<00:00,  1.64s/it]
test accuracy: 
0.7795
train_time_seconds: 577.25455
12
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 3, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 1, 48, 36), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 36, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 48, 36), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 7, 36, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(7, 5, 24, 24), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("13/weights/read:0", shape=(24, 10), dtype=float32)
Tensor("13/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/12
24
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 3, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 1, 48, 36), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 36, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 48, 36), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 7, 36, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [02:20<07:03,  8.85it/s]0.79
test accuracy:  0.7793
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [04:44<04:27,  9.34it/s]0.86
test accuracy:  0.7827
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [07:10<02:17,  9.12it/s]0.72
test accuracy:  0.7847
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [09:34<00:00,  8.92it/s]0.83
test accuracy:  0.7802
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [09:39<00:00,  1.71s/it]
test accuracy: 
0.7802
train_time_seconds: 585.197391
13
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 3, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 1, 48, 36), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 36, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 48, 36), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 7, 36, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(7, 5, 24, 24), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("14/weights/read:0", shape=(64, 10), dtype=float32)
Tensor("14/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/13
26
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 3, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 1, 48, 36), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 36, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 48, 36), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 7, 36, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(7, 5, 24, 24), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [02:22<07:00,  8.92it/s]0.82
test accuracy:  0.7836
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [04:48<04:35,  9.06it/s]0.83
test accuracy:  0.793
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [07:15<02:20,  8.88it/s]0.8
test accuracy:  0.7908
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [09:41<00:00,  8.75it/s]0.87
test accuracy:  0.7857
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [09:47<00:00,  1.80s/it]
test accuracy: 
0.7857
train_time_seconds: 593.139788
14
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 3, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 1, 48, 36), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 36, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 48, 36), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 7, 36, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(7, 5, 24, 24), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/14/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/14/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("15/weights/read:0", shape=(48, 10), dtype=float32)
Tensor("15/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/14
28
Tensor("global/0/weights/read:0", shape=(3, 7, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 3, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 1, 48, 36), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 36, 36), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 7, 36, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 5, 48, 36), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 7, 36, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(7, 5, 24, 24), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [02:23<06:55,  9.03it/s]0.84
test accuracy:  0.7841
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [04:51<04:33,  9.14it/s]0.8
test accuracy:  0.7916
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [07:21<02:17,  9.12it/s]0.82
test accuracy:  0.7921
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [09:49<00:00,  8.93it/s]0.84
test accuracy:  0.786
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [09:55<00:00,  1.84s/it]
test accuracy: 
0.786
train_time_seconds: 600.944833
episode: 8
0
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("1/weights/read:0", shape=(2904, 10), dtype=float32)
Tensor("1/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
 10%|█████████▌                                                                                      | 1988/20000 [00:15<01:30, 198.85it/s]0.57
test accuracy:  0.5296
 20%|███████████████████▏                                                                            | 3999/20000 [00:32<01:19, 201.09it/s]0.57
test accuracy:  0.5651
 30%|████████████████████████████▊                                                                   | 5991/20000 [00:49<01:11, 195.99it/s]0.55
test accuracy:  0.5767
 40%|██████████████████████████████████████▎                                                         | 7981/20000 [01:06<01:01, 196.98it/s]0.58
test accuracy:  0.5784
 50%|███████████████████████████████████████████████▉                                                | 9985/20000 [01:23<00:50, 198.94it/s]0.57
test accuracy:  0.584
 60%|████████████████████████████████████████████████████████▉                                      | 11998/20000 [01:41<00:39, 200.40it/s]0.55
test accuracy:  0.5905
 70%|██████████████████████████████████████████████████████████████████▍                            | 13979/20000 [01:57<00:30, 195.41it/s]0.63
test accuracy:  0.5869
 80%|███████████████████████████████████████████████████████████████████████████▉                   | 15990/20000 [02:12<00:20, 196.98it/s]0.61
test accuracy:  0.5971
 90%|█████████████████████████████████████████████████████████████████████████████████████▍         | 17979/20000 [02:27<00:10, 198.01it/s]0.58
test accuracy:  0.5955
100%|██████████████████████████████████████████████████████████████████████████████████████████████▉| 19987/20000 [02:43<00:00, 190.00it/s]0.6
test accuracy:  0.5959
100%|███████████████████████████████████████████████████████████████████████████████████████████████| 20000/20000 [02:44<00:00, 121.36it/s]
test accuracy: 
0.5959
train_time_seconds: 166.800406
1
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("2/weights/read:0", shape=(1296, 10), dtype=float32)
Tensor("2/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/1
2
Tensor("global/0/weights/read:0", shape=(3, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████                                                                         | 1240/5000 [00:10<00:24, 151.55it/s]0.53
test accuracy:  0.5723
 50%|████████████████████████████████████████████████▍                                                | 2494/5000 [00:21<00:16, 154.74it/s]0.65
test accuracy:  0.6003
 75%|████████████████████████████████████████████████████████████████████████▌                        | 3739/5000 [00:33<00:08, 153.54it/s]0.63
test accuracy:  0.6127
100%|████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [00:44<00:00, 158.47it/s]0.65
test accuracy:  0.617
100%|█████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [00:45<00:00, 109.21it/s]
test accuracy: 
0.617
train_time_seconds: 47.148626
2
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("3/weights/read:0", shape=(324, 10), dtype=float32)
Tensor("3/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/2
4
Tensor("global/0/weights/read:0", shape=(3, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|███████████████████████▉                                                                         | 1237/5000 [00:12<00:28, 130.74it/s]0.59
test accuracy:  0.5575
 50%|████████████████████████████████████████████████▎                                                | 2493/5000 [00:24<00:19, 128.49it/s]0.59
test accuracy:  0.5764
 75%|████████████████████████████████████████████████████████████████████████▋                        | 3749/5000 [00:38<00:09, 130.14it/s]0.68
test accuracy:  0.5829
100%|████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [00:51<00:00, 128.93it/s]0.63
test accuracy:  0.5854
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [00:52<00:00, 94.98it/s]
test accuracy: 
0.5854
train_time_seconds: 54.048778
3
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("4/weights/read:0", shape=(576, 10), dtype=float32)
Tensor("4/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/3
6
Tensor("global/0/weights/read:0", shape=(3, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▏                                                                        | 1244/5000 [00:13<00:33, 112.97it/s]0.58
test accuracy:  0.5934
 50%|████████████████████████████████████████████████▎                                                | 2490/5000 [00:28<00:23, 107.88it/s]0.63
test accuracy:  0.5942
 75%|████████████████████████████████████████████████████████████████████████▌                        | 3741/5000 [00:43<00:11, 108.84it/s]0.6
test accuracy:  0.6093
100%|████████████████████████████████████████████████████████████████████████████████████████████████▉| 4995/5000 [00:57<00:00, 109.68it/s]0.62
test accuracy:  0.6185
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [00:59<00:00, 84.15it/s]
test accuracy: 
0.6185
train_time_seconds: 60.922247
4
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("5/weights/read:0", shape=(432, 10), dtype=float32)
Tensor("5/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/4
8
Tensor("global/0/weights/read:0", shape=(3, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▎                                                                         | 1240/5000 [00:15<00:38, 98.25it/s]0.61
test accuracy:  0.6059
 50%|████████████████████████████████████████████████▍                                                | 2497/5000 [00:31<00:24, 100.31it/s]0.66
test accuracy:  0.6157
 75%|████████████████████████████████████████████████████████████████████████▋                        | 3746/5000 [00:48<00:12, 100.63it/s]0.63
test accuracy:  0.623
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4996/5000 [01:04<00:00, 97.47it/s]0.62
test accuracy:  0.6203
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:05<00:00, 75.93it/s]
test accuracy: 
0.6203
train_time_seconds: 67.453187
5
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("6/weights/read:0", shape=(576, 10), dtype=float32)
Tensor("6/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/5
10
Tensor("global/0/weights/read:0", shape=(3, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▎                                                                         | 1243/5000 [00:16<00:42, 88.13it/s]0.63
test accuracy:  0.614
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [00:34<00:28, 86.71it/s]0.65
test accuracy:  0.6271
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3747/5000 [00:52<00:14, 89.47it/s]0.67
test accuracy:  0.6255
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▊| 4991/5000 [01:09<00:00, 87.88it/s]0.73
test accuracy:  0.631
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:11<00:00, 15.08it/s]
test accuracy: 
0.631
train_time_seconds: 73.316226
6
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(5, 7, 64, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("7/weights/read:0", shape=(324, 10), dtype=float32)
Tensor("7/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/6
12
Tensor("global/0/weights/read:0", shape=(3, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▎                                                                         | 1243/5000 [00:18<00:48, 77.75it/s]0.67
test accuracy:  0.6287
 50%|████████████████████████████████████████████████▊                                                 | 2491/5000 [00:36<00:28, 87.07it/s]0.65
test accuracy:  0.6271
 75%|█████████████████████████████████████████████████████████████████████████▎                        | 3741/5000 [00:56<00:15, 81.77it/s]0.66
test accuracy:  0.6402
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [01:15<00:00, 81.32it/s]0.64
test accuracy:  0.6298
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:16<00:00, 65.14it/s]
test accuracy: 
0.6298
train_time_seconds: 78.540682
7
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(5, 7, 64, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(1, 5, 36, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("8/weights/read:0", shape=(576, 10), dtype=float32)
Tensor("8/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/7
14
Tensor("global/0/weights/read:0", shape=(3, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(5, 7, 64, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:19<00:50, 74.93it/s]0.71
test accuracy:  0.6288
 50%|████████████████████████████████████████████████▊                                                 | 2493/5000 [00:39<00:33, 74.84it/s]0.72
test accuracy:  0.6297
 75%|█████████████████████████████████████████████████████████████████████████▎                        | 3742/5000 [01:01<00:17, 71.29it/s]0.7
test accuracy:  0.6359
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [01:21<00:00, 75.00it/s]0.71
test accuracy:  0.6411
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:23<00:00, 59.98it/s]
test accuracy: 
0.6411
train_time_seconds: 85.183564
8
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(5, 7, 64, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(1, 5, 36, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("9/weights/read:0", shape=(432, 10), dtype=float32)
Tensor("9/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/8
16
Tensor("global/0/weights/read:0", shape=(3, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(5, 7, 64, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(1, 5, 36, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▎                                                                         | 1241/5000 [00:21<00:57, 65.64it/s]0.68
test accuracy:  0.6283
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [00:42<00:36, 67.82it/s]0.71
test accuracy:  0.6355
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [01:05<00:18, 68.80it/s]0.72
test accuracy:  0.641
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4996/5000 [01:27<00:00, 69.05it/s]0.73
test accuracy:  0.6409
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:29<00:00, 56.01it/s]
test accuracy: 
0.6409
train_time_seconds: 91.199818
9
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(5, 7, 64, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(1, 5, 36, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("10/weights/read:0", shape=(576, 10), dtype=float32)
Tensor("10/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/9
18
Tensor("global/0/weights/read:0", shape=(3, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(5, 7, 64, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(1, 5, 36, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1244/5000 [00:22<00:58, 64.56it/s]0.74
test accuracy:  0.6392
 50%|████████████████████████████████████████████████▉                                                 | 2498/5000 [00:45<00:38, 64.29it/s]0.72
test accuracy:  0.6417
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [01:09<00:19, 64.67it/s]0.75
test accuracy:  0.6442
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4996/5000 [01:32<00:00, 65.48it/s]0.77
test accuracy:  0.6461
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:34<00:00, 52.70it/s]
test accuracy: 
0.6461
train_time_seconds: 96.827555
10
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(5, 7, 64, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(1, 5, 36, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 1, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("11/weights/read:0", shape=(576, 10), dtype=float32)
Tensor("11/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/10
20
Tensor("global/0/weights/read:0", shape=(3, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(5, 7, 64, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(1, 5, 36, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:23<01:07, 55.20it/s]0.66
test accuracy:  0.645
 50%|████████████████████████████████████████████████▉                                                 | 2496/5000 [00:48<00:43, 56.95it/s]0.66
test accuracy:  0.6422
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [01:14<00:20, 60.66it/s]0.73
test accuracy:  0.6422
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4995/5000 [01:38<00:00, 59.60it/s]0.72
test accuracy:  0.6475
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:40<00:00, 49.61it/s]
test accuracy: 
0.6475
train_time_seconds: 102.806529
11
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(5, 7, 64, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(1, 5, 36, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 1, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 7, 64, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("12/weights/read:0", shape=(96, 10), dtype=float32)
Tensor("12/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/11
22
Tensor("global/0/weights/read:0", shape=(3, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(5, 7, 64, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(1, 5, 36, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 1, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1245/5000 [00:25<01:04, 57.94it/s]0.71
test accuracy:  0.6469
 50%|████████████████████████████████████████████████▉                                                 | 2498/5000 [00:51<00:44, 56.49it/s]0.82
test accuracy:  0.6461
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3747/5000 [01:18<00:22, 54.89it/s]0.76
test accuracy:  0.6388
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4996/5000 [01:44<00:00, 53.07it/s]0.75
test accuracy:  0.6466
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:46<00:00, 47.02it/s]
test accuracy: 
0.6466
train_time_seconds: 108.428853
12
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(5, 7, 64, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(1, 5, 36, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 1, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 7, 64, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(5, 7, 24, 24), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("13/weights/read:0", shape=(96, 10), dtype=float32)
Tensor("13/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/12
24
Tensor("global/0/weights/read:0", shape=(3, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(5, 7, 64, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(1, 5, 36, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 1, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 7, 64, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:26<01:10, 53.21it/s]0.73
test accuracy:  0.6471
 50%|████████████████████████████████████████████████▉                                                 | 2495/5000 [00:54<00:46, 53.33it/s]0.7
test accuracy:  0.6495
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [01:23<00:23, 53.55it/s]0.75
test accuracy:  0.6435
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [01:50<00:00, 55.46it/s]0.65
test accuracy:  0.6442
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:52<00:00, 44.45it/s]
test accuracy: 
0.6442
train_time_seconds: 114.649358
13
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(5, 7, 64, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(1, 5, 36, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 1, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 7, 64, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(5, 7, 24, 24), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("14/weights/read:0", shape=(192, 10), dtype=float32)
Tensor("14/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/13
26
Tensor("global/0/weights/read:0", shape=(3, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(5, 7, 64, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(1, 5, 36, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 1, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 7, 64, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(5, 7, 24, 24), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:27<01:12, 52.02it/s]0.71
test accuracy:  0.646
 50%|████████████████████████████████████████████████▉                                                 | 2498/5000 [00:56<00:50, 50.04it/s]0.74
test accuracy:  0.6482
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3746/5000 [01:26<00:24, 51.59it/s]0.8
test accuracy:  0.646
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4998/5000 [01:55<00:00, 47.59it/s]0.83
test accuracy:  0.6386
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:57<00:00, 42.57it/s]
test accuracy: 
0.6386
train_time_seconds: 119.71025
14
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 1] stride:[2, 2] num_filters:36}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(5, 7, 64, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(1, 5, 36, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 1, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 7, 64, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(5, 7, 24, 24), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/14/weights/read:0", shape=(1, 5, 48, 36), dtype=float32)
Tensor("global/14/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("15/weights/read:0", shape=(36, 10), dtype=float32)
Tensor("15/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/14
28
Tensor("global/0/weights/read:0", shape=(3, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 24, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(7, 1, 36, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(5, 7, 64, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(1, 5, 36, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 1, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 7, 64, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(5, 7, 24, 24), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1247/5000 [00:29<01:20, 46.41it/s]0.76
test accuracy:  0.6434
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:00<00:53, 47.14it/s]0.83
test accuracy:  0.6489
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [01:32<00:27, 45.52it/s]0.79
test accuracy:  0.6442
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4996/5000 [02:02<00:00, 49.69it/s]0.73
test accuracy:  0.6463
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:04<00:00, 40.16it/s]
test accuracy: 
0.6463
train_time_seconds: 126.853895
episode: 9
0
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("1/weights/read:0", shape=(4356, 10), dtype=float32)
Tensor("1/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
 10%|█████████▌                                                                                      | 1982/20000 [00:14<01:35, 188.30it/s]0.48
test accuracy:  0.4748
 20%|███████████████████▏                                                                            | 3990/20000 [00:31<01:25, 188.13it/s]0.5
test accuracy:  0.5086
 30%|████████████████████████████▋                                                                   | 5980/20000 [00:48<01:13, 191.31it/s]0.56
test accuracy:  0.5079
 40%|██████████████████████████████████████▎                                                         | 7992/20000 [01:04<01:03, 188.24it/s]0.55
test accuracy:  0.5169
 50%|███████████████████████████████████████████████▉                                                | 9998/20000 [01:21<00:52, 189.11it/s]0.51
test accuracy:  0.5238
 60%|████████████████████████████████████████████████████████▉                                      | 11988/20000 [01:37<00:41, 191.71it/s]0.51
test accuracy:  0.5263
 70%|██████████████████████████████████████████████████████████████████▍                            | 13993/20000 [01:54<00:31, 189.38it/s]0.54
test accuracy:  0.5234
 80%|███████████████████████████████████████████████████████████████████████████▉                   | 15980/20000 [02:10<00:20, 192.66it/s]0.53
test accuracy:  0.5273
 90%|█████████████████████████████████████████████████████████████████████████████████████▍         | 17981/20000 [02:26<00:10, 191.57it/s]0.53
test accuracy:  0.5146
100%|██████████████████████████████████████████████████████████████████████████████████████████████▉| 19996/20000 [02:43<00:00, 194.73it/s]0.62
test accuracy:  0.5222
100%|███████████████████████████████████████████████████████████████████████████████████████████████| 20000/20000 [02:44<00:00, 121.21it/s]
test accuracy: 
0.5222
train_time_seconds: 166.782198
1
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("2/weights/read:0", shape=(864, 10), dtype=float32)
Tensor("2/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/1
2
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▏                                                                        | 1249/5000 [00:10<00:24, 152.69it/s]0.52
test accuracy:  0.541
 50%|████████████████████████████████████████████████▍                                                | 2499/5000 [00:22<00:15, 159.17it/s]0.58
test accuracy:  0.564
 75%|████████████████████████████████████████████████████████████████████████▋                        | 3745/5000 [00:34<00:08, 150.74it/s]0.53
test accuracy:  0.581
100%|████████████████████████████████████████████████████████████████████████████████████████████████▊| 4993/5000 [00:46<00:00, 156.07it/s]0.6
test accuracy:  0.5852
100%|█████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [00:47<00:00, 104.29it/s]
test accuracy: 
0.5852
train_time_seconds: 49.732835
2
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("3/weights/read:0", shape=(1728, 10), dtype=float32)
Tensor("3/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/2
4
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▏                                                                        | 1248/5000 [00:12<00:29, 127.21it/s]0.6
test accuracy:  0.5827
 50%|████████████████████████████████████████████████▎                                                | 2490/5000 [00:26<00:20, 124.81it/s]0.58
test accuracy:  0.6054
 75%|████████████████████████████████████████████████████████████████████████▋                        | 3744/5000 [00:40<00:09, 132.14it/s]0.64
test accuracy:  0.6107
100%|████████████████████████████████████████████████████████████████████████████████████████████████▊| 4989/5000 [00:53<00:00, 133.63it/s]0.71
test accuracy:  0.6203
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [00:55<00:00, 90.20it/s]
test accuracy: 
0.6203
train_time_seconds: 57.310637
3
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("4/weights/read:0", shape=(2304, 10), dtype=float32)
Tensor("4/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/3
6
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████                                                                         | 1243/5000 [00:14<00:35, 106.02it/s]0.62
test accuracy:  0.6137
 50%|████████████████████████████████████████████████▎                                                | 2490/5000 [00:29<00:24, 104.11it/s]0.61
test accuracy:  0.6279
 75%|████████████████████████████████████████████████████████████████████████▋                        | 3747/5000 [00:46<00:11, 107.15it/s]0.73
test accuracy:  0.6326
100%|████████████████████████████████████████████████████████████████████████████████████████████████▉| 4996/5000 [01:01<00:00, 106.86it/s]0.77
test accuracy:  0.644
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:03<00:00, 78.55it/s]
test accuracy: 
0.644
train_time_seconds: 65.607375
4
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("5/weights/read:0", shape=(1728, 10), dtype=float32)
Tensor("5/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/4
8
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1247/5000 [00:16<00:40, 91.73it/s]0.66
test accuracy:  0.6323
 50%|████████████████████████████████████████████████▊                                                 | 2493/5000 [00:33<00:26, 93.18it/s]0.68
test accuracy:  0.6504
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3745/5000 [00:51<00:13, 96.53it/s]0.61
test accuracy:  0.652
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▊| 4991/5000 [01:08<00:00, 90.05it/s]0.72
test accuracy:  0.6555
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:10<00:00, 71.24it/s]
test accuracy: 
0.6555
train_time_seconds: 72.192993
5
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("6/weights/read:0", shape=(576, 10), dtype=float32)
Tensor("6/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/5
10
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▎                                                                         | 1242/5000 [00:17<00:44, 83.73it/s]0.74
test accuracy:  0.653
 50%|████████████████████████████████████████████████▉                                                 | 2494/5000 [00:35<00:29, 84.58it/s]0.71
test accuracy:  0.6544
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3744/5000 [00:55<00:14, 88.86it/s]0.74
test accuracy:  0.6665
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4994/5000 [01:13<00:00, 88.79it/s]0.7
test accuracy:  0.6684
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:15<00:00, 66.58it/s]
test accuracy: 
0.6684
train_time_seconds: 77.159423
6
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 7, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("7/weights/read:0", shape=(432, 10), dtype=float32)
Tensor("7/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/6
12
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:19<00:49, 76.50it/s]0.82
test accuracy:  0.6665
 50%|████████████████████████████████████████████████▉                                                 | 2498/5000 [00:38<00:32, 76.75it/s]0.74
test accuracy:  0.6676
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3745/5000 [00:59<00:15, 81.05it/s]0.77
test accuracy:  0.6645
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4994/5000 [01:19<00:00, 78.39it/s]0.71
test accuracy:  0.6757
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:21<00:00, 61.21it/s]
test accuracy: 
0.6757
train_time_seconds: 83.834525
7
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 7, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("8/weights/read:0", shape=(256, 10), dtype=float32)
Tensor("8/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/7
14
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 7, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:20<00:51, 72.20it/s]0.73
test accuracy:  0.6808
 50%|████████████████████████████████████████████████▉                                                 | 2498/5000 [00:41<00:34, 72.61it/s]0.74
test accuracy:  0.6757
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [01:04<00:17, 71.22it/s]0.79
test accuracy:  0.6797
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4994/5000 [01:25<00:00, 74.75it/s]0.79
test accuracy:  0.6844
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:28<00:00, 56.79it/s]
test accuracy: 
0.6844
train_time_seconds: 90.250933
8
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 7, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("9/weights/read:0", shape=(256, 10), dtype=float32)
Tensor("9/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/8
16
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 7, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:22<00:59, 63.57it/s]0.78
test accuracy:  0.6745
 50%|████████████████████████████████████████████████▉                                                 | 2494/5000 [00:45<00:38, 65.60it/s]0.79
test accuracy:  0.6841
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3744/5000 [01:09<00:19, 64.77it/s]0.72
test accuracy:  0.673
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4998/5000 [01:32<00:00, 65.97it/s]0.72
test accuracy:  0.6805
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:34<00:00, 52.83it/s]
test accuracy: 
0.6805
train_time_seconds: 96.897269
9
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 7, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("10/weights/read:0", shape=(36, 10), dtype=float32)
Tensor("10/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/9
18
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 7, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:23<01:02, 60.23it/s]0.79
test accuracy:  0.6774
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [00:48<00:42, 59.07it/s]0.82
test accuracy:  0.6775
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [01:14<00:20, 60.20it/s]0.74
test accuracy:  0.6786
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4994/5000 [01:38<00:00, 62.10it/s]0.78
test accuracy:  0.6798
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:41<00:00, 49.47it/s]
test accuracy: 
0.6798
train_time_seconds: 103.43616
10
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 7, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 1, 36, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("11/weights/read:0", shape=(48, 10), dtype=float32)
Tensor("11/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/10
20
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 7, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:25<01:08, 54.52it/s]0.73
test accuracy:  0.6804
 50%|████████████████████████████████████████████████▉                                                 | 2495/5000 [00:51<00:43, 58.13it/s]0.81
test accuracy:  0.6809
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3744/5000 [01:19<00:22, 56.20it/s]0.82
test accuracy:  0.6781
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4995/5000 [01:45<00:00, 56.17it/s]0.75
test accuracy:  0.6825
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:47<00:00, 46.36it/s]
test accuracy: 
0.6825
train_time_seconds: 110.336857
11
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 7, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 1, 36, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 3, 48, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("12/weights/read:0", shape=(48, 10), dtype=float32)
Tensor("12/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/11
22
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 7, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 1, 36, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:26<01:11, 52.28it/s]0.75
test accuracy:  0.6809
 50%|████████████████████████████████████████████████▉                                                 | 2494/5000 [00:54<00:47, 53.09it/s]0.77
test accuracy:  0.6791
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [01:23<00:23, 53.65it/s]0.78
test accuracy:  0.6858
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [01:51<00:00, 52.99it/s]0.83
test accuracy:  0.6804
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:53<00:00, 44.03it/s]
test accuracy: 
0.6804
train_time_seconds: 116.195177
12
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 7, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 1, 36, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 3, 48, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("13/weights/read:0", shape=(24, 10), dtype=float32)
Tensor("13/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/12
24
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 7, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 1, 36, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 3, 48, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1244/5000 [00:28<01:13, 50.97it/s]0.78
test accuracy:  0.6772
 50%|████████████████████████████████████████████████▉                                                 | 2496/5000 [00:57<00:54, 46.37it/s]0.8
test accuracy:  0.6856
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3745/5000 [01:28<00:25, 49.24it/s]0.71
test accuracy:  0.6828
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4995/5000 [01:57<00:00, 50.79it/s]0.68
test accuracy:  0.6818
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:00<00:00, 41.56it/s]
test accuracy: 
0.6818
train_time_seconds: 122.953414
13
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 7, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 1, 36, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 3, 48, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("14/weights/read:0", shape=(24, 10), dtype=float32)
Tensor("14/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/13
26
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 7, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 1, 36, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 3, 48, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1247/5000 [00:29<01:18, 47.52it/s]0.78
test accuracy:  0.6808
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:00<00:50, 49.46it/s]0.82
test accuracy:  0.6778
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3745/5000 [01:32<00:26, 47.77it/s]0.82
test accuracy:  0.6812
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4995/5000 [02:03<00:00, 48.19it/s]0.84
test accuracy:  0.6819
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:06<00:00,  5.47it/s]
test accuracy: 
0.6819
train_time_seconds: 129.134733
14
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 7, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 1, 36, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 3, 48, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/14/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/14/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("15/weights/read:0", shape=(24, 10), dtype=float32)
Tensor("15/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/14
28
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 3, 36, 24), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 3, 48, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 7, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 1, 48, 64), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 1, 36, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 3, 48, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:31<01:22, 45.22it/s]0.8
test accuracy:  0.6778
 50%|████████████████████████████████████████████████▉                                                 | 2496/5000 [01:03<00:54, 45.85it/s]0.77
test accuracy:  0.6766
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3747/5000 [01:37<00:28, 43.70it/s]0.9
test accuracy:  0.6792
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [02:09<00:00, 45.57it/s]0.82
test accuracy:  0.682
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:12<00:00, 37.81it/s]
test accuracy: 
0.682
train_time_seconds: 135.084592
episode: 10
0
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("1/weights/read:0", shape=(16384, 10), dtype=float32)
Tensor("1/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
 10%|█████████▌                                                                                      | 1993/20000 [00:20<02:19, 129.19it/s]0.56
test accuracy:  0.5001
 20%|███████████████████▏                                                                            | 3994/20000 [00:44<02:03, 129.12it/s]0.45
test accuracy:  0.5024
 30%|████████████████████████████▊                                                                   | 5997/20000 [01:07<01:48, 129.41it/s]0.47
test accuracy:  0.5027
 40%|██████████████████████████████████████▎                                                         | 7992/20000 [01:30<01:33, 128.89it/s]0.57
test accuracy:  0.5206
 50%|███████████████████████████████████████████████▉                                                | 9990/20000 [01:53<01:17, 129.20it/s]0.59
test accuracy:  0.5162
 60%|████████████████████████████████████████████████████████▉                                      | 11991/20000 [02:17<01:01, 129.47it/s]0.51
test accuracy:  0.5059
 70%|██████████████████████████████████████████████████████████████████▍                            | 13991/20000 [02:40<00:46, 129.94it/s]0.44
test accuracy:  0.5075
 80%|███████████████████████████████████████████████████████████████████████████▉                   | 15996/20000 [03:03<00:30, 131.21it/s]0.56
test accuracy:  0.5149
 90%|█████████████████████████████████████████████████████████████████████████████████████▍         | 17988/20000 [03:26<00:15, 129.02it/s]0.54
test accuracy:  0.5201
100%|██████████████████████████████████████████████████████████████████████████████████████████████▉| 19995/20000 [03:50<00:00, 129.29it/s]0.56
test accuracy:  0.5166
100%|████████████████████████████████████████████████████████████████████████████████████████████████| 20000/20000 [03:52<00:00, 86.07it/s]
test accuracy: 
0.5166
train_time_seconds: 234.751475
1
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("2/weights/read:0", shape=(16384, 10), dtype=float32)
Tensor("2/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/1
2
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▎                                                                         | 1243/5000 [00:20<00:49, 75.39it/s]0.68
test accuracy:  0.5851
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [00:41<00:33, 75.17it/s]0.71
test accuracy:  0.6226
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3747/5000 [01:04<00:16, 75.17it/s]0.56
test accuracy:  0.6512
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4994/5000 [01:25<00:00, 75.83it/s]0.67
test accuracy:  0.649
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:27<00:00, 57.01it/s]
test accuracy: 
0.649
train_time_seconds: 90.269141
2
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("3/weights/read:0", shape=(16384, 10), dtype=float32)
Tensor("3/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/2
4
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:27<01:10, 53.33it/s]0.72
test accuracy:  0.6661
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [00:55<00:47, 53.09it/s]0.67
test accuracy:  0.6972
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3745/5000 [01:25<00:23, 53.17it/s]0.67
test accuracy:  0.7024
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [01:53<00:00, 53.94it/s]0.7
test accuracy:  0.7282
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:56<00:00, 42.99it/s]
test accuracy: 
0.7282
train_time_seconds: 119.103193
3
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 1, 64, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("4/weights/read:0", shape=(1296, 10), dtype=float32)
Tensor("4/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/3
6
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:27<01:11, 52.44it/s]0.66
test accuracy:  0.7103
 50%|████████████████████████████████████████████████▉                                                 | 2494/5000 [00:56<00:48, 52.09it/s]0.77
test accuracy:  0.7304
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3744/5000 [01:26<00:23, 53.25it/s]0.83
test accuracy:  0.7429
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [01:55<00:00, 52.29it/s]0.79
test accuracy:  0.7483
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:58<00:00, 42.29it/s]
test accuracy: 
0.7483
train_time_seconds: 120.9592
4
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 1, 64, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("5/weights/read:0", shape=(1296, 10), dtype=float32)
Tensor("5/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/4
8
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 1, 64, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1246/5000 [00:30<01:18, 47.86it/s]0.71
test accuracy:  0.7372
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:01<00:52, 47.93it/s]0.79
test accuracy:  0.7606
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3745/5000 [01:33<00:26, 47.76it/s]0.78
test accuracy:  0.7635
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4996/5000 [02:04<00:00, 47.45it/s]0.82
test accuracy:  0.7721
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:07<00:00, 39.14it/s]
test accuracy: 
0.7721
train_time_seconds: 130.630249
5
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 1, 64, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("6/weights/read:0", shape=(324, 10), dtype=float32)
Tensor("6/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/5
10
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 1, 64, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1246/5000 [00:32<01:23, 44.96it/s]0.8
test accuracy:  0.768
 50%|████████████████████████████████████████████████▉                                                 | 2496/5000 [01:05<00:57, 43.75it/s]0.82
test accuracy:  0.7702
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3746/5000 [01:40<00:28, 44.21it/s]0.75
test accuracy:  0.7724
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4996/5000 [02:13<00:00, 45.86it/s]0.88
test accuracy:  0.7777
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:16<00:00, 36.71it/s]
test accuracy: 
0.7777
train_time_seconds: 139.124231
6
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 1, 64, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 5, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("7/weights/read:0", shape=(36, 10), dtype=float32)
Tensor("7/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/6
12
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 1, 64, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:33<01:30, 41.53it/s]0.79
test accuracy:  0.7079
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [01:08<00:59, 41.98it/s]0.8
test accuracy:  0.7295
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [01:45<00:29, 41.75it/s]0.75
test accuracy:  0.7365
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4996/5000 [02:20<00:00, 41.52it/s]0.78
test accuracy:  0.7442
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:23<00:00, 34.91it/s]
test accuracy: 
0.7442
train_time_seconds: 146.227185
7
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 1, 64, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 5, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("8/weights/read:0", shape=(48, 10), dtype=float32)
Tensor("8/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/7
14
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 1, 64, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 5, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1245/5000 [00:35<01:37, 38.60it/s]0.81
test accuracy:  0.7347
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [01:12<01:02, 39.85it/s]0.73
test accuracy:  0.734
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3747/5000 [01:50<00:31, 40.22it/s]0.76
test accuracy:  0.7421
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [02:27<00:00, 40.12it/s]0.82
test accuracy:  0.7431
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:30<00:00, 33.30it/s]
test accuracy: 
0.7431
train_time_seconds: 153.294147
8
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 1, 64, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 5, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 48, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("9/weights/read:0", shape=(48, 10), dtype=float32)
Tensor("9/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/8
16
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 1, 64, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 5, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:37<01:39, 37.64it/s]0.75
test accuracy:  0.7457
 50%|████████████████████████████████████████████████▉                                                 | 2496/5000 [01:15<01:04, 38.78it/s]0.77
test accuracy:  0.7425
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3747/5000 [01:56<00:34, 36.84it/s]0.82
test accuracy:  0.7476
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [02:34<00:00, 38.83it/s]0.71
test accuracy:  0.7485
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:37<00:00, 31.74it/s]
test accuracy: 
0.7485
train_time_seconds: 160.730877
9
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 1, 64, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 5, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 48, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("10/weights/read:0", shape=(48, 10), dtype=float32)
Tensor("10/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/9
18
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 1, 64, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 5, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 48, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1247/5000 [00:38<01:42, 36.60it/s]0.8
test accuracy:  0.7436
 50%|████████████████████████████████████████████████▉                                                 | 2496/5000 [01:18<01:08, 36.29it/s]0.74
test accuracy:  0.7451
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [02:00<00:35, 35.24it/s]0.82
test accuracy:  0.7505
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4996/5000 [02:40<00:00, 35.65it/s]0.76
test accuracy:  0.7523
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:44<00:00,  3.70it/s]
test accuracy: 
0.7523
train_time_seconds: 167.541455
10
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 1, 64, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 5, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 48, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("11/weights/read:0", shape=(24, 10), dtype=float32)
Tensor("11/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/10
20
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 1, 64, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 5, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 48, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:40<01:50, 34.03it/s]0.87
test accuracy:  0.7494
 50%|████████████████████████████████████████████████▉                                                 | 2498/5000 [01:22<01:13, 34.11it/s]0.77
test accuracy:  0.7523
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3746/5000 [02:05<00:35, 34.88it/s]0.86
test accuracy:  0.7484
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4998/5000 [02:47<00:00, 34.61it/s]0.81
test accuracy:  0.7589
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:51<00:00, 29.24it/s]
test accuracy: 
0.7589
train_time_seconds: 174.39852
11
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 1, 64, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 5, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 48, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("12/weights/read:0", shape=(64, 10), dtype=float32)
Tensor("12/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/11
22
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 1, 64, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 5, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 48, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1246/5000 [00:42<01:55, 32.60it/s]0.81
test accuracy:  0.7459
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:25<01:17, 32.47it/s]0.88
test accuracy:  0.7524
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [02:11<00:37, 33.68it/s]0.86
test accuracy:  0.7607
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [02:54<00:00, 32.95it/s]0.85
test accuracy:  0.7557
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:57<00:00, 28.11it/s]
test accuracy: 
0.7557
train_time_seconds: 181.31143
12
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 1, 64, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 5, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 48, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(3, 7, 64, 24), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("13/weights/read:0", shape=(24, 10), dtype=float32)
Tensor("13/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/12
24
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 1, 64, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 5, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 48, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:43<01:57, 31.99it/s]0.76
test accuracy:  0.7552
 50%|████████████████████████████████████████████████▉                                                 | 2496/5000 [01:28<01:18, 32.01it/s]0.83
test accuracy:  0.7524
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [02:16<00:40, 31.23it/s]0.74
test accuracy:  0.7578
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [03:01<00:00, 31.51it/s]0.8
test accuracy:  0.7529
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [03:04<00:00, 27.08it/s]
test accuracy: 
0.7529
train_time_seconds: 188.177636
13
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 1, 64, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 5, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 48, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(3, 7, 64, 24), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("14/weights/read:0", shape=(24, 10), dtype=float32)
Tensor("14/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/13
26
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 1, 64, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 5, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 48, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(3, 7, 64, 24), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1246/5000 [00:45<02:03, 30.49it/s]0.78
test accuracy:  0.7515
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:31<01:22, 30.42it/s]0.88
test accuracy:  0.7577
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3746/5000 [02:20<00:41, 30.56it/s]0.79
test accuracy:  0.7505
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [03:07<00:00, 31.02it/s]0.82
test accuracy:  0.7523
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [03:11<00:00, 26.17it/s]
test accuracy: 
0.7523
train_time_seconds: 194.636861
14
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 1, 64, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 5, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 48, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(3, 7, 64, 24), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/14/weights/read:0", shape=(5, 1, 24, 64), dtype=float32)
Tensor("global/14/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("15/weights/read:0", shape=(64, 10), dtype=float32)
Tensor("15/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/14
28
Tensor("global/0/weights/read:0", shape=(1, 3, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(5, 1, 64, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 7, 36, 36), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(1, 5, 36, 36), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(7, 3, 36, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 48, 48), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 7, 48, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(3, 7, 64, 24), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(3, 5, 24, 24), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:46<02:06, 29.71it/s]0.83
test accuracy:  0.7631
 50%|████████████████████████████████████████████████▉                                                 | 2498/5000 [01:34<01:23, 29.86it/s]0.82
test accuracy:  0.7575
 60%|██████████████████████████████████████████████████████████▌                                       | 2987/5000 [01:54<01:05, 30.83it/s]I tensorflow/core/common_runtime/gpu/pool_allocator.cc:247] PoolAllocator: After 93724324 get requests, put_count=93724324 evicted_count=23000 eviction_rate=0.000245401 and unsatisfied allocation rate=0.00024555
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [02:24<00:40, 30.85it/s]0.85
test accuracy:  0.7654
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [03:12<00:00, 29.98it/s]0.78
test accuracy:  0.7646
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [03:15<00:00, 25.55it/s]
test accuracy: 
0.7646
train_time_seconds: 199.275297
episode: 11
0
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("1/weights/read:0", shape=(4356, 10), dtype=float32)
Tensor("1/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
 10%|█████████▌                                                                                      | 1995/20000 [00:16<01:34, 189.87it/s]0.45
test accuracy:  0.4636
 20%|███████████████████▏                                                                            | 3986/20000 [00:36<01:22, 193.74it/s]0.58
test accuracy:  0.4981
 30%|████████████████████████████▊                                                                   | 5998/20000 [00:55<01:11, 196.53it/s]0.54
test accuracy:  0.5158
 40%|██████████████████████████████████████▎                                                         | 7981/20000 [01:14<01:01, 196.47it/s]0.6
test accuracy:  0.5166
 50%|███████████████████████████████████████████████▉                                                | 9985/20000 [01:34<00:53, 188.01it/s]0.53
test accuracy:  0.5279
 60%|████████████████████████████████████████████████████████▉                                      | 11996/20000 [01:53<00:41, 193.43it/s]0.55
test accuracy:  0.5287
 70%|██████████████████████████████████████████████████████████████████▍                            | 13989/20000 [02:12<00:31, 192.22it/s]0.5
test accuracy:  0.5288
 80%|███████████████████████████████████████████████████████████████████████████▉                   | 15983/20000 [02:31<00:20, 194.40it/s]0.56
test accuracy:  0.5359
 90%|█████████████████████████████████████████████████████████████████████████████████████▍         | 17997/20000 [02:51<00:10, 189.85it/s]0.46
test accuracy:  0.529
100%|██████████████████████████████████████████████████████████████████████████████████████████████▉| 19984/20000 [03:10<00:00, 194.53it/s]0.59
test accuracy:  0.5321
100%|███████████████████████████████████████████████████████████████████████████████████████████████| 20000/20000 [03:13<00:00, 103.61it/s]
test accuracy: 
0.5321
train_time_seconds: 195.552536
1
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("2/weights/read:0", shape=(4356, 10), dtype=float32)
Tensor("2/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/1
2
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████                                                                         | 1240/5000 [00:15<00:32, 114.84it/s]0.63
test accuracy:  0.5653
 50%|████████████████████████████████████████████████▍                                                | 2495/5000 [00:30<00:21, 115.22it/s]0.62
test accuracy:  0.5893
 75%|████████████████████████████████████████████████████████████████████████▋                        | 3749/5000 [00:48<00:10, 115.71it/s]0.57
test accuracy:  0.6106
100%|████████████████████████████████████████████████████████████████████████████████████████████████▊| 4990/5000 [01:03<00:00, 117.05it/s]0.55
test accuracy:  0.6267
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:06<00:00, 74.98it/s]
test accuracy: 
0.6267
train_time_seconds: 69.382521
2
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("3/weights/read:0", shape=(384, 10), dtype=float32)
Tensor("3/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/2
4
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▏                                                                        | 1246/5000 [00:16<00:36, 101.61it/s]0.67
test accuracy:  0.6068
 50%|████████████████████████████████████████████████▎                                                | 2493/5000 [00:33<00:23, 104.55it/s]0.67
test accuracy:  0.6235
 75%|████████████████████████████████████████████████████████████████████████▌                        | 3739/5000 [00:53<00:12, 104.95it/s]0.75
test accuracy:  0.6345
100%|████████████████████████████████████████████████████████████████████████████████████████████████▉| 4995/5000 [01:10<00:00, 100.23it/s]0.68
test accuracy:  0.644
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:12<00:00, 68.57it/s]
test accuracy: 
0.644
train_time_seconds: 75.640951
3
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("4/weights/read:0", shape=(144, 10), dtype=float32)
Tensor("4/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/3
6
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1247/5000 [00:18<00:42, 88.84it/s]0.61
test accuracy:  0.6213
 50%|████████████████████████████████████████████████▊                                                 | 2493/5000 [00:37<00:27, 90.64it/s]0.63
test accuracy:  0.636
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3745/5000 [00:58<00:13, 91.84it/s]0.64
test accuracy:  0.6492
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4996/5000 [01:17<00:00, 89.08it/s]0.69
test accuracy:  0.6471
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:20<00:00, 62.36it/s]
test accuracy: 
0.6471
train_time_seconds: 82.969728
4
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("5/weights/read:0", shape=(96, 10), dtype=float32)
Tensor("5/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/4
8
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▎                                                                         | 1243/5000 [00:20<00:46, 80.68it/s]0.68
test accuracy:  0.6478
 50%|████████████████████████████████████████████████▊                                                 | 2491/5000 [00:40<00:31, 80.31it/s]0.64
test accuracy:  0.6498
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [01:03<00:15, 79.44it/s]0.64
test accuracy:  0.6644
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [01:23<00:00, 82.54it/s]0.63
test accuracy:  0.6645
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:26<00:00, 57.68it/s]
test accuracy: 
0.6645
train_time_seconds: 89.532943
5
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("6/weights/read:0", shape=(256, 10), dtype=float32)
Tensor("6/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/5
10
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1245/5000 [00:21<00:50, 74.07it/s]0.77
test accuracy:  0.6676
 50%|████████████████████████████████████████████████▉                                                 | 2495/5000 [00:43<00:32, 76.30it/s]0.73
test accuracy:  0.6616
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3747/5000 [01:07<00:18, 69.37it/s]0.75
test accuracy:  0.6665
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▊| 4992/5000 [01:29<00:00, 74.09it/s]0.71
test accuracy:  0.6698
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:31<00:00,  9.88it/s]
test accuracy: 
0.6698
train_time_seconds: 94.407531
6
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 1, 64, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("7/weights/read:0", shape=(64, 10), dtype=float32)
Tensor("7/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/6
12
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:22<00:56, 66.77it/s]0.67
test accuracy:  0.6638
 50%|████████████████████████████████████████████████▊                                                 | 2493/5000 [00:44<00:38, 64.44it/s]0.71
test accuracy:  0.6662
 75%|█████████████████████████████████████████████████████████████████████████▎                        | 3742/5000 [01:09<00:18, 66.36it/s]0.67
test accuracy:  0.6672
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [01:32<00:00, 63.60it/s]0.81
test accuracy:  0.6717
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:34<00:00, 52.88it/s]
test accuracy: 
0.6717
train_time_seconds: 97.012662
7
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 1, 64, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("8/weights/read:0", shape=(24, 10), dtype=float32)
Tensor("8/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/7
14
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 1, 64, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▎                                                                         | 1243/5000 [00:23<00:57, 64.83it/s]0.7
test accuracy:  0.6713
 50%|████████████████████████████████████████████████▉                                                 | 2494/5000 [00:48<00:39, 62.84it/s]0.7
test accuracy:  0.6745
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3747/5000 [01:14<00:21, 58.82it/s]0.76
test accuracy:  0.6755
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4994/5000 [01:38<00:00, 63.92it/s]0.74
test accuracy:  0.6697
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:41<00:00, 49.37it/s]
test accuracy: 
0.6697
train_time_seconds: 103.798132
8
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 1, 64, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("9/weights/read:0", shape=(64, 10), dtype=float32)
Tensor("9/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/8
16
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 1, 64, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:25<01:04, 57.92it/s]0.77
test accuracy:  0.6742
 50%|████████████████████████████████████████████████▉                                                 | 2494/5000 [00:51<00:44, 56.79it/s]0.77
test accuracy:  0.6701
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3746/5000 [01:19<00:21, 58.29it/s]0.73
test accuracy:  0.675
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4994/5000 [01:45<00:00, 57.68it/s]0.74
test accuracy:  0.6755
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:48<00:00,  6.75it/s]
test accuracy: 
0.6755
train_time_seconds: 110.64156
9
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 1, 64, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 3, 64, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("10/weights/read:0", shape=(64, 10), dtype=float32)
Tensor("10/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/9
18
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 1, 64, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:27<01:08, 54.39it/s]0.71
test accuracy:  0.6733
 50%|████████████████████████████████████████████████▉                                                 | 2496/5000 [00:55<00:44, 56.07it/s]0.73
test accuracy:  0.6821
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3747/5000 [01:25<00:23, 52.31it/s]0.74
test accuracy:  0.6761
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4996/5000 [01:52<00:00, 52.62it/s]0.77
test accuracy:  0.6801
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:55<00:00, 43.17it/s]
test accuracy: 
0.6801
train_time_seconds: 118.600052
10
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 1, 64, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 3, 64, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("11/weights/read:0", shape=(64, 10), dtype=float32)
Tensor("11/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/10
20
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 1, 64, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 3, 64, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1245/5000 [00:28<01:12, 51.64it/s]0.68
test accuracy:  0.6862
 50%|████████████████████████████████████████████████▉                                                 | 2498/5000 [00:58<00:45, 55.13it/s]0.77
test accuracy:  0.6854
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3745/5000 [01:30<00:24, 51.55it/s]0.68
test accuracy:  0.6801
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4995/5000 [01:59<00:00, 47.68it/s]0.67
test accuracy:  0.6827
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:02<00:00,  5.20it/s]
test accuracy: 
0.6827
train_time_seconds: 125.625375
11
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 1, 64, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 3, 64, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(5, 7, 64, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("12/weights/read:0", shape=(24, 10), dtype=float32)
Tensor("12/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/11
22
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 1, 64, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 3, 64, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:30<01:17, 48.12it/s]0.66
test accuracy:  0.6805
 50%|████████████████████████████████████████████████▉                                                 | 2498/5000 [01:01<00:52, 47.89it/s]0.71
test accuracy:  0.6862
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [01:34<00:27, 46.29it/s]0.79
test accuracy:  0.6883
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4998/5000 [02:05<00:00, 46.75it/s]0.76
test accuracy:  0.6866
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:07<00:00, 39.08it/s]
test accuracy: 
0.6866
train_time_seconds: 130.953503
12
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 1, 64, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 3, 64, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(5, 7, 64, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("13/weights/read:0", shape=(64, 10), dtype=float32)
Tensor("13/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/12
24
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 1, 64, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 3, 64, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(5, 7, 64, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:31<01:19, 47.20it/s]0.72
test accuracy:  0.6821
 50%|████████████████████████████████████████████████▉                                                 | 2498/5000 [01:03<00:56, 44.24it/s]0.82
test accuracy:  0.6828
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3746/5000 [01:37<00:27, 45.35it/s]0.74
test accuracy:  0.6854
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4995/5000 [02:09<00:00, 45.07it/s]0.75
test accuracy:  0.6825
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:12<00:00,  5.09it/s]
test accuracy: 
0.6825
train_time_seconds: 135.793163
13
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 1, 64, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 3, 64, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(5, 7, 64, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("14/weights/read:0", shape=(24, 10), dtype=float32)
Tensor("14/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/13
26
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 1, 64, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 3, 64, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(5, 7, 64, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1246/5000 [00:32<01:26, 43.61it/s]0.66
test accuracy:  0.6876
 50%|████████████████████████████████████████████████▉                                                 | 2495/5000 [01:06<00:58, 43.17it/s]0.75
test accuracy:  0.6798
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [01:42<00:27, 45.08it/s]0.74
test accuracy:  0.6891
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [02:15<00:00, 44.82it/s]0.76
test accuracy:  0.6904
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:18<00:00, 36.07it/s]
test accuracy: 
0.6904
train_time_seconds: 141.597654
14
{Conv kernel_size:[5, 1] stride:[3, 3] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[1, 7] stride:[2, 2] num_filters:36}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 1, 64, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 3, 64, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(5, 7, 64, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/14/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/14/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("15/weights/read:0", shape=(48, 10), dtype=float32)
Tensor("15/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/14
28
Tensor("global/0/weights/read:0", shape=(5, 1, 3, 36), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(5, 7, 36, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 3, 36, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 7, 24, 36), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 36, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 1, 64, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 3, 64, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(5, 3, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(5, 7, 64, 24), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(3, 5, 64, 24), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1246/5000 [00:34<01:33, 40.11it/s]0.72
test accuracy:  0.687
 50%|████████████████████████████████████████████████▉                                                 | 2495/5000 [01:09<01:01, 40.56it/s]0.69
test accuracy:  0.687
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3747/5000 [01:46<00:30, 40.47it/s]0.86
test accuracy:  0.6871
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4998/5000 [02:21<00:00, 41.01it/s]0.82
test accuracy:  0.6866
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:24<00:00, 34.55it/s]
test accuracy: 
0.6866
train_time_seconds: 147.833069
episode: 12
0
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("1/weights/read:0", shape=(24576, 10), dtype=float32)
Tensor("1/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
 10%|█████████▋                                                                                       | 1991/20000 [00:27<03:12, 93.40it/s]0.46
test accuracy:  0.5149
 20%|███████████████████▍                                                                             | 3998/20000 [00:57<02:51, 93.32it/s]0.49
test accuracy:  0.541
 30%|█████████████████████████████                                                                    | 5998/20000 [01:27<02:28, 94.25it/s]0.61
test accuracy:  0.5455
 40%|██████████████████████████████████████▊                                                          | 7997/20000 [01:57<02:07, 94.39it/s]0.52
test accuracy:  0.5468
 50%|████████████████████████████████████████████████▍                                                | 9997/20000 [02:27<01:47, 93.11it/s]0.55
test accuracy:  0.556
 60%|█████████████████████████████████████████████████████████▌                                      | 11997/20000 [02:56<01:24, 94.49it/s]0.5
test accuracy:  0.546
 70%|███████████████████████████████████████████████████████████████████▏                            | 13996/20000 [03:26<01:04, 92.65it/s]0.57
test accuracy:  0.5511
 80%|████████████████████████████████████████████████████████████████████████████▊                   | 15994/20000 [03:56<00:42, 94.62it/s]0.6
test accuracy:  0.5469
 90%|██████████████████████████████████████████████████████████████████████████████████████▎         | 17993/20000 [04:26<00:21, 94.68it/s]0.55
test accuracy:  0.5547
100%|███████████████████████████████████████████████████████████████████████████████████████████████▉| 19992/20000 [04:56<00:00, 94.18it/s]0.6
test accuracy:  0.5464
100%|████████████████████████████████████████████████████████████████████████████████████████████████| 20000/20000 [04:59<00:00, 66.85it/s]
test accuracy: 
0.5464
train_time_seconds: 301.793481
1
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("2/weights/read:0", shape=(49152, 10), dtype=float32)
Tensor("2/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/1
2
Tensor("global/0/weights/read:0", shape=(7, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1246/5000 [00:32<01:23, 44.69it/s]0.61
test accuracy:  0.567
 50%|████████████████████████████████████████████████▉                                                 | 2496/5000 [01:05<00:56, 44.49it/s]0.6
test accuracy:  0.6037
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3746/5000 [01:40<00:28, 44.62it/s]0.67
test accuracy:  0.6183
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4996/5000 [02:13<00:00, 44.56it/s]0.56
test accuracy:  0.6213
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:16<00:00, 36.50it/s]
test accuracy: 
0.6213
train_time_seconds: 140.106853
2
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("3/weights/read:0", shape=(36864, 10), dtype=float32)
Tensor("3/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/2
4
Tensor("global/0/weights/read:0", shape=(7, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:55<02:34, 24.29it/s]0.6
test accuracy:  0.5824
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:52<01:42, 24.35it/s]0.65
test accuracy:  0.6222
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [02:51<00:51, 24.30it/s]0.62
test accuracy:  0.6363
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [03:48<00:00, 24.60it/s]0.67
test accuracy:  0.6564
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [03:51<00:00,  2.49it/s]
test accuracy: 
0.6564
train_time_seconds: 235.485846
3
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("4/weights/read:0", shape=(16384, 10), dtype=float32)
Tensor("4/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/3
6
Tensor("global/0/weights/read:0", shape=(7, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:59<02:49, 22.19it/s]0.59
test accuracy:  0.6259
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [02:01<01:52, 22.32it/s]0.59
test accuracy:  0.6541
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [03:04<00:55, 22.65it/s]0.65
test accuracy:  0.6794
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [04:05<00:00, 22.48it/s]0.68
test accuracy:  0.6864
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [04:09<00:00,  2.45it/s]
test accuracy: 
0.6864
train_time_seconds: 253.3908
4
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("5/weights/read:0", shape=(16384, 10), dtype=float32)
Tensor("5/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/4
8
Tensor("global/0/weights/read:0", shape=(7, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [01:07<03:09, 19.83it/s]0.74
test accuracy:  0.7015
 50%|████████████████████████████████████████████████▉                                                 | 2498/5000 [02:14<02:05, 19.90it/s]0.71
test accuracy:  0.7141
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [03:24<01:03, 19.79it/s]0.7
test accuracy:  0.7195
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [04:31<00:00, 19.81it/s]0.8
test accuracy:  0.7394
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [04:35<00:00, 18.18it/s]
test accuracy: 
0.7394
train_time_seconds: 279.019578
5
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("6/weights/read:0", shape=(16384, 10), dtype=float32)
Tensor("6/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/5
10
Tensor("global/0/weights/read:0", shape=(7, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [01:13<03:30, 17.83it/s]0.72
test accuracy:  0.718
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [02:28<02:19, 17.88it/s]0.74
test accuracy:  0.7367
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [03:45<01:10, 17.85it/s]0.87
test accuracy:  0.7573
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [05:00<00:00, 17.73it/s]0.82
test accuracy:  0.7691
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [05:04<00:00, 16.43it/s]
test accuracy: 
0.7691
train_time_seconds: 307.785653
6
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("7/weights/read:0", shape=(6144, 10), dtype=float32)
Tensor("7/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/6
12
Tensor("global/0/weights/read:0", shape=(7, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [01:18<03:47, 16.52it/s]0.77
test accuracy:  0.7567
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [02:38<02:31, 16.56it/s]0.76
test accuracy:  0.7775
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [04:00<01:15, 16.48it/s]0.84
test accuracy:  0.7791
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [05:20<00:00, 16.72it/s]0.74
test accuracy:  0.7869
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [05:24<00:00, 15.42it/s]
test accuracy: 
0.7869
train_time_seconds: 327.944295
7
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(1, 3, 24, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("8/weights/read:0", shape=(1728, 10), dtype=float32)
Tensor("8/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/7
14
Tensor("global/0/weights/read:0", shape=(7, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [01:20<03:54, 16.03it/s]0.76
test accuracy:  0.7807
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [02:42<02:34, 16.23it/s]0.73
test accuracy:  0.7956
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [04:06<01:17, 16.18it/s]0.8
test accuracy:  0.7958
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [05:29<00:00, 16.10it/s]0.81
test accuracy:  0.7999
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [05:32<00:00, 15.02it/s]
test accuracy: 
0.7999
train_time_seconds: 336.666106
8
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(1, 3, 24, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("9/weights/read:0", shape=(864, 10), dtype=float32)
Tensor("9/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/8
16
Tensor("global/0/weights/read:0", shape=(7, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(1, 3, 24, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [01:22<03:57, 15.77it/s]0.82
test accuracy:  0.7978
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [02:47<02:38, 15.79it/s]0.82
test accuracy:  0.7991
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [04:14<01:19, 15.80it/s]0.84
test accuracy:  0.8123
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [05:39<00:00, 15.65it/s]0.83
test accuracy:  0.8062
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [05:43<00:00, 14.54it/s]
test accuracy: 
0.8062
train_time_seconds: 347.567693
9
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(1, 3, 24, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("10/weights/read:0", shape=(576, 10), dtype=float32)
Tensor("10/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/9
18
Tensor("global/0/weights/read:0", shape=(7, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(1, 3, 24, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [01:25<04:09, 15.04it/s]0.83
test accuracy:  0.8159
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [02:53<02:42, 15.36it/s]0.86
test accuracy:  0.8132
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [04:23<01:21, 15.29it/s]0.92
test accuracy:  0.8135
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [05:51<00:00, 15.51it/s]0.87
test accuracy:  0.8215
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [05:56<00:00, 14.03it/s]
test accuracy: 
0.8215
train_time_seconds: 360.576911
10
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(1, 3, 24, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 3, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("11/weights/read:0", shape=(256, 10), dtype=float32)
Tensor("11/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/10
20
Tensor("global/0/weights/read:0", shape=(7, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(1, 3, 24, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [01:27<04:08, 15.09it/s]0.89
test accuracy:  0.8039
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [02:57<02:46, 15.06it/s]0.91
test accuracy:  0.8122
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [04:29<01:21, 15.38it/s]0.89
test accuracy:  0.8165
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [05:59<00:00, 15.15it/s]0.84
test accuracy:  0.8224
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [06:04<00:00, 13.72it/s]
test accuracy: 
0.8224
train_time_seconds: 369.017435
11
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(1, 3, 24, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 3, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("12/weights/read:0", shape=(192, 10), dtype=float32)
Tensor("12/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/11
22
Tensor("global/0/weights/read:0", shape=(7, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(1, 3, 24, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 3, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [01:31<04:18, 14.48it/s]0.89
test accuracy:  0.8215
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [03:03<02:53, 14.45it/s]0.91
test accuracy:  0.8218
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [04:38<01:25, 14.57it/s]0.91
test accuracy:  0.8252
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [06:11<00:00, 14.75it/s]0.9
test accuracy:  0.8226
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [06:16<00:00, 13.29it/s]
test accuracy: 
0.8226
train_time_seconds: 380.932144
12
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(1, 3, 24, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 3, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(3, 5, 48, 24), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("13/weights/read:0", shape=(24, 10), dtype=float32)
Tensor("13/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/12
24
Tensor("global/0/weights/read:0", shape=(7, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(1, 3, 24, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 3, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [01:32<04:21, 14.37it/s]0.95
test accuracy:  0.8173
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [03:06<02:59, 13.90it/s]0.92
test accuracy:  0.8233
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [04:43<01:27, 14.23it/s]0.9
test accuracy:  0.8165
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [06:17<00:00, 14.34it/s]0.93
test accuracy:  0.8258
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [06:22<00:00, 13.06it/s]
test accuracy: 
0.8258
train_time_seconds: 387.713952
13
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(1, 3, 24, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 3, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(3, 5, 48, 24), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("14/weights/read:0", shape=(48, 10), dtype=float32)
Tensor("14/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/13
26
Tensor("global/0/weights/read:0", shape=(7, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(1, 3, 24, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 3, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(3, 5, 48, 24), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [01:33<04:24, 14.16it/s]0.86
test accuracy:  0.8261
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [03:10<02:58, 13.98it/s]0.91
test accuracy:  0.826
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [04:49<01:28, 14.13it/s]0.92
test accuracy:  0.8259
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [06:25<00:00, 14.10it/s]0.91
test accuracy:  0.8231
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [06:30<00:00, 12.79it/s]
test accuracy: 
0.8231
train_time_seconds: 395.832171
14
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 5] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(1, 3, 24, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 3, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(3, 5, 48, 24), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/14/weights/read:0", shape=(3, 7, 48, 48), dtype=float32)
Tensor("global/14/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("15/weights/read:0", shape=(48, 10), dtype=float32)
Tensor("15/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/14
28
Tensor("global/0/weights/read:0", shape=(7, 5, 3, 24), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 7, 24, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 36), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 3, 36, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(3, 5, 64, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(1, 3, 24, 48), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(7, 5, 48, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 1, 24, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(1, 3, 64, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(1, 7, 64, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(3, 5, 48, 24), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [01:35<04:27, 14.04it/s]0.9
test accuracy:  0.8254
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [03:12<03:02, 13.68it/s]0.89
test accuracy:  0.8265
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [04:52<01:30, 13.83it/s]0.96
test accuracy:  0.828
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [06:30<00:00, 13.80it/s]0.91
test accuracy:  0.8279
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [06:35<00:00, 12.64it/s]
test accuracy: 
0.8279
train_time_seconds: 400.415569
episode: 13
0
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("1/weights/read:0", shape=(49152, 10), dtype=float32)
Tensor("1/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
 10%|█████████▋                                                                                       | 1993/20000 [00:37<04:39, 64.46it/s]0.38
test accuracy:  0.4255
 20%|███████████████████▎                                                                             | 3993/20000 [01:19<04:09, 64.13it/s]0.47
test accuracy:  0.4518
 30%|█████████████████████████████                                                                    | 5999/20000 [02:04<03:47, 61.67it/s]0.39
test accuracy:  0.4475
 40%|██████████████████████████████████████▊                                                          | 7995/20000 [02:47<03:12, 62.47it/s]0.48
test accuracy:  0.4501
 50%|████████████████████████████████████████████████▍                                                | 9995/20000 [03:30<02:44, 60.94it/s]0.52
test accuracy:  0.4578
 60%|█████████████████████████████████████████████████████████▌                                      | 11995/20000 [04:11<02:05, 63.72it/s]0.5
test accuracy:  0.4577
 70%|███████████████████████████████████████████████████████████████████▏                            | 13995/20000 [04:53<01:33, 64.54it/s]0.48
test accuracy:  0.4579
 80%|████████████████████████████████████████████████████████████████████████████▊                   | 15995/20000 [05:34<01:01, 64.70it/s]0.52
test accuracy:  0.4548
 90%|██████████████████████████████████████████████████████████████████████████████████████▍         | 17995/20000 [06:15<00:31, 64.67it/s]0.44
test accuracy:  0.4668
100%|███████████████████████████████████████████████████████████████████████████████████████████████▉| 19995/20000 [06:57<00:00, 63.75it/s]0.46
test accuracy:  0.457
100%|████████████████████████████████████████████████████████████████████████████████████████████████| 20000/20000 [07:00<00:00, 47.57it/s]
test accuracy: 
0.457
train_time_seconds: 423.685491
1
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("2/weights/read:0", shape=(49152, 10), dtype=float32)
Tensor("2/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/1
2
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1247/5000 [00:38<01:40, 37.17it/s]0.41
test accuracy:  0.4849
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [01:19<01:07, 36.80it/s]0.47
test accuracy:  0.5094
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3747/5000 [02:02<00:34, 36.54it/s]0.5
test accuracy:  0.5351
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [02:43<00:00, 37.10it/s]0.65
test accuracy:  0.5454
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:47<00:00, 29.94it/s]
test accuracy: 
0.5454
train_time_seconds: 170.708714
2
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("3/weights/read:0", shape=(24576, 10), dtype=float32)
Tensor("3/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/2
4
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:54<02:27, 25.41it/s]0.54
test accuracy:  0.5183
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:50<01:40, 25.01it/s]0.58
test accuracy:  0.5522
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [02:48<00:49, 25.29it/s]0.57
test accuracy:  0.5838
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [03:44<00:00, 25.15it/s]0.6
test accuracy:  0.6168
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [03:48<00:00,  2.14it/s]
test accuracy: 
0.6168
train_time_seconds: 232.744899
3
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("4/weights/read:0", shape=(65536, 10), dtype=float32)
Tensor("4/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/3
6
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [01:13<03:27, 18.09it/s]0.47
test accuracy:  0.5571
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [02:28<02:19, 17.87it/s]0.56
test accuracy:  0.5629
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [03:46<01:08, 18.30it/s]0.62
test accuracy:  0.5933
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [05:02<00:00, 18.05it/s]0.56
test accuracy:  0.6197
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [05:07<00:00, 16.28it/s]
test accuracy: 
0.6197
train_time_seconds: 312.28516
4
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("5/weights/read:0", shape=(24576, 10), dtype=float32)
Tensor("5/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/4
8
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [01:30<04:09, 15.05it/s]0.59
test accuracy:  0.5588
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [03:02<02:47, 14.93it/s]0.67
test accuracy:  0.6299
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [04:36<01:24, 14.76it/s]0.81
test accuracy:  0.6596
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [06:10<00:00, 14.68it/s]0.76
test accuracy:  0.6832
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [06:15<00:00, 13.33it/s]
test accuracy: 
0.6832
train_time_seconds: 380.18293
5
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("6/weights/read:0", shape=(65536, 10), dtype=float32)
Tensor("6/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/5
10
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [01:49<05:15, 11.89it/s]0.65
test accuracy:  0.6234
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [03:43<03:28, 12.02it/s]0.62
test accuracy:  0.6636
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [05:36<01:45, 11.87it/s]0.71
test accuracy:  0.6763
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [07:27<00:00, 11.88it/s]0.68
test accuracy:  0.701
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [07:32<00:00, 11.05it/s]
test accuracy: 
0.701
train_time_seconds: 458.000325
6
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 7, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("7/weights/read:0", shape=(49152, 10), dtype=float32)
Tensor("7/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/6
12
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [02:13<06:26,  9.71it/s]0.62
test accuracy:  0.6313
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [04:29<04:21,  9.55it/s]0.66
test accuracy:  0.664
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [06:47<02:10,  9.56it/s]0.67
test accuracy:  0.6632
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [09:04<00:00,  9.60it/s]0.71
test accuracy:  0.6982
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [09:10<00:00,  1.73s/it]
test accuracy: 
0.6982
train_time_seconds: 555.525463
7
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 7, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 48, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("8/weights/read:0", shape=(2904, 10), dtype=float32)
Tensor("8/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/7
14
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 7, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [02:14<06:30,  9.60it/s]0.63
test accuracy:  0.6915
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [04:31<04:18,  9.69it/s]0.65
test accuracy:  0.7135
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [06:51<02:24,  8.67it/s]0.81
test accuracy:  0.7299
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [09:09<00:00,  9.24it/s]0.78
test accuracy:  0.7279
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [09:15<00:00,  1.72s/it]
test accuracy: 
0.7279
train_time_seconds: 560.548419
8
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 7, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 48, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(5, 1, 24, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("9/weights/read:0", shape=(7744, 10), dtype=float32)
Tensor("9/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/8
16
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 7, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 48, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [02:19<06:40,  9.37it/s]0.77
test accuracy:  0.7239
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [04:42<04:28,  9.31it/s]0.77
test accuracy:  0.7437
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [07:07<02:14,  9.31it/s]0.76
test accuracy:  0.7474
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [09:28<00:00,  9.32it/s]0.77
test accuracy:  0.7507
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [09:34<00:00,  1.78s/it]
test accuracy: 
0.7507
train_time_seconds: 580.015269
9
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 7, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 48, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(5, 1, 24, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 3, 64, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("10/weights/read:0", shape=(2304, 10), dtype=float32)
Tensor("10/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/9
18
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 7, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 48, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(5, 1, 24, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [02:20<06:56,  9.00it/s]0.72
test accuracy:  0.7575
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [04:44<04:25,  9.42it/s]0.75
test accuracy:  0.7538
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [07:08<02:10,  9.56it/s]0.78
test accuracy:  0.7551
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [09:31<00:00,  9.41it/s]0.78
test accuracy:  0.7635
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [09:36<00:00,  1.79s/it]
test accuracy: 
0.7635
train_time_seconds: 582.523946
10
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 7, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 48, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(5, 1, 24, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 3, 64, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("11/weights/read:0", shape=(1728, 10), dtype=float32)
Tensor("11/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/10
20
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 7, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 48, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(5, 1, 24, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 3, 64, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [02:22<06:53,  9.07it/s]0.82
test accuracy:  0.7752
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [04:47<04:36,  9.05it/s]0.82
test accuracy:  0.7788
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [07:15<02:17,  9.09it/s]0.78
test accuracy:  0.7775
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [09:41<00:00,  9.09it/s]0.86
test accuracy:  0.7871
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [09:47<00:00,  1.90s/it]
test accuracy: 
0.7871
train_time_seconds: 593.147839
11
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 7, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 48, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(5, 1, 24, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 3, 64, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 7, 48, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("12/weights/read:0", shape=(1728, 10), dtype=float32)
Tensor("12/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/11
22
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 7, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 48, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(5, 1, 24, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 3, 64, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [02:23<07:51,  7.95it/s]0.88
test accuracy:  0.7865
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [04:53<04:38,  8.98it/s]0.84
test accuracy:  0.7766
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [07:23<02:20,  8.93it/s]0.84
test accuracy:  0.7917
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [09:52<00:00,  8.89it/s]0.89
test accuracy:  0.7917
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [09:58<00:00,  1.97s/it]
test accuracy: 
0.7917
train_time_seconds: 605.146061
12
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 7, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 48, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(5, 1, 24, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 3, 64, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 7, 48, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(1, 3, 48, 48), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("13/weights/read:0", shape=(192, 10), dtype=float32)
Tensor("13/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/12
24
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 7, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 48, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(5, 1, 24, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 3, 64, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 7, 48, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [02:25<07:00,  8.93it/s]0.91
test accuracy:  0.7873
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [04:56<05:18,  7.85it/s]0.87
test accuracy:  0.7948
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [07:29<02:20,  8.92it/s]0.83
test accuracy:  0.7918
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [10:00<00:00,  8.81it/s]0.86
test accuracy:  0.7929
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [10:06<00:00,  2.00s/it]
test accuracy: 
0.7929
train_time_seconds: 613.195018
13
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 7, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 48, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(5, 1, 24, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 3, 64, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 7, 48, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(1, 3, 48, 48), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("14/weights/read:0", shape=(96, 10), dtype=float32)
Tensor("14/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/13
26
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 7, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 48, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(5, 1, 24, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 3, 64, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 7, 48, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(1, 3, 48, 48), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [02:29<07:00,  8.91it/s]0.89
test accuracy:  0.794
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [05:01<04:48,  8.66it/s]0.92
test accuracy:  0.8025
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [07:38<02:22,  8.80it/s]0.91
test accuracy:  0.7973
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [10:11<00:00,  8.78it/s]0.87
test accuracy:  0.7979
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [10:17<00:00,  2.03s/it]
test accuracy: 
0.7979
train_time_seconds: 624.450053
14
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:24}
{Conv kernel_size:[1, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[5, 1] stride:[1, 1] num_filters:64}
{Conv kernel_size:[1, 3] stride:[2, 2] num_filters:64}
{Conv kernel_size:[7, 3] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[1, 3] stride:[3, 3] num_filters:48}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 7, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 48, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(5, 1, 24, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 3, 64, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 7, 48, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(1, 3, 48, 48), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/14/weights/read:0", shape=(5, 7, 24, 36), dtype=float32)
Tensor("global/14/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("15/weights/read:0", shape=(144, 10), dtype=float32)
Tensor("15/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/14
28
Tensor("global/0/weights/read:0", shape=(7, 1, 3, 48), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(7, 1, 48, 48), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 64, 24), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(1, 5, 24, 64), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(3, 7, 64, 48), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 48, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(5, 1, 24, 64), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(1, 3, 64, 64), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(7, 3, 64, 48), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(3, 7, 48, 48), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(1, 3, 48, 48), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(5, 7, 48, 24), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [02:31<07:16,  8.59it/s]0.89
test accuracy:  0.7949
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [05:06<04:51,  8.58it/s]0.89
test accuracy:  0.7947
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [07:44<02:28,  8.43it/s]0.84
test accuracy:  0.8026
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [10:19<00:00,  8.51it/s]0.94
test accuracy:  0.8027
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [10:26<00:00,  2.02s/it]
test accuracy: 
0.8027
train_time_seconds: 632.775648
episode: 14
0
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("1/weights/read:0", shape=(16384, 10), dtype=float32)
Tensor("1/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
 10%|█████████▌                                                                                      | 1999/20000 [00:22<02:17, 131.37it/s]0.52
test accuracy:  0.4551
 20%|███████████████████▏                                                                            | 3994/20000 [00:47<02:02, 130.70it/s]0.52
test accuracy:  0.4899
 30%|████████████████████████████▋                                                                   | 5987/20000 [01:11<01:50, 126.71it/s]0.46
test accuracy:  0.4965
 40%|██████████████████████████████████████▎                                                         | 7992/20000 [01:36<01:30, 132.46it/s]0.51
test accuracy:  0.5118
 50%|███████████████████████████████████████████████▉                                                | 9992/20000 [02:01<01:19, 126.12it/s]0.48
test accuracy:  0.5042
 60%|████████████████████████████████████████████████████████▉                                      | 11998/20000 [02:26<01:03, 126.17it/s]0.51
test accuracy:  0.5111
 70%|██████████████████████████████████████████████████████████████████▍                            | 13992/20000 [02:49<00:45, 130.99it/s]0.56
test accuracy:  0.5136
 80%|███████████████████████████████████████████████████████████████████████████▉                   | 15987/20000 [03:11<00:31, 127.55it/s]0.61
test accuracy:  0.5008
 90%|█████████████████████████████████████████████████████████████████████████████████████▍         | 17989/20000 [03:34<00:15, 131.25it/s]0.53
test accuracy:  0.509
100%|██████████████████████████████████████████████████████████████████████████████████████████████▉| 19988/20000 [03:56<00:00, 125.19it/s]0.57
test accuracy:  0.5038
100%|████████████████████████████████████████████████████████████████████████████████████████████████| 20000/20000 [03:59<00:00, 83.66it/s]
test accuracy: 
0.5038
train_time_seconds: 241.766849
1
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("2/weights/read:0", shape=(1296, 10), dtype=float32)
Tensor("2/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/1
2
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████                                                                         | 1240/5000 [00:13<00:30, 122.81it/s]0.52
test accuracy:  0.4974
 50%|████████████████████████████████████████████████▍                                                | 2498/5000 [00:27<00:20, 124.11it/s]0.49
test accuracy:  0.5287
 75%|████████████████████████████████████████████████████████████████████████▍                        | 3737/5000 [00:43<00:10, 126.26it/s]0.47
test accuracy:  0.5403
100%|████████████████████████████████████████████████████████████████████████████████████████████████▊| 4990/5000 [00:56<00:00, 122.64it/s]0.57
test accuracy:  0.5618
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [00:59<00:00, 84.55it/s]
test accuracy: 
0.5618
train_time_seconds: 61.325157
2
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 1, 36, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("3/weights/read:0", shape=(576, 10), dtype=float32)
Tensor("3/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/2
4
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████                                                                         | 1240/5000 [00:15<00:36, 104.27it/s]0.53
test accuracy:  0.5261
 50%|████████████████████████████████████████████████▍                                                | 2497/5000 [00:31<00:23, 106.70it/s]0.48
test accuracy:  0.5472
 75%|████████████████████████████████████████████████████████████████████████▋                        | 3748/5000 [00:48<00:11, 105.12it/s]0.68
test accuracy:  0.56
100%|████████████████████████████████████████████████████████████████████████████████████████████████▊| 4991/5000 [01:04<00:00, 103.60it/s]0.68
test accuracy:  0.5569
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:06<00:00, 75.25it/s]
test accuracy: 
0.5569
train_time_seconds: 68.673364
3
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 1, 36, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("4/weights/read:0", shape=(432, 10), dtype=float32)
Tensor("4/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/3
6
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 1, 36, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1246/5000 [00:17<00:40, 93.35it/s]0.6
test accuracy:  0.5666
 50%|████████████████████████████████████████████████▊                                                 | 2491/5000 [00:34<00:26, 95.38it/s]0.61
test accuracy:  0.5721
 75%|█████████████████████████████████████████████████████████████████████████▎                        | 3743/5000 [00:53<00:13, 90.41it/s]0.6
test accuracy:  0.5848
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4998/5000 [01:11<00:00, 98.58it/s]0.64
test accuracy:  0.5852
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:13<00:00, 68.18it/s]
test accuracy: 
0.5852
train_time_seconds: 75.605909
4
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 1, 36, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("5/weights/read:0", shape=(324, 10), dtype=float32)
Tensor("5/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/4
8
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 1, 36, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▎                                                                         | 1241/5000 [00:18<00:46, 81.10it/s]0.67
test accuracy:  0.5912
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [00:38<00:31, 79.75it/s]0.58
test accuracy:  0.6007
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3747/5000 [00:59<00:15, 81.24it/s]0.68
test accuracy:  0.6067
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4997/5000 [01:18<00:00, 80.46it/s]0.67
test accuracy:  0.6172
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:21<00:00, 61.60it/s]
test accuracy: 
0.6172
train_time_seconds: 83.560825
5
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 1, 36, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 7, 36, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("6/weights/read:0", shape=(216, 10), dtype=float32)
Tensor("6/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/5
10
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 1, 36, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▎                                                                         | 1243/5000 [00:20<00:52, 72.06it/s]0.71
test accuracy:  0.6129
 50%|████████████████████████████████████████████████▉                                                 | 2498/5000 [00:41<00:32, 76.65it/s]0.59
test accuracy:  0.6142
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3746/5000 [01:04<00:17, 73.52it/s]0.66
test accuracy:  0.6153
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▊| 4992/5000 [01:25<00:00, 71.58it/s]0.72
test accuracy:  0.6248
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:28<00:00,  9.60it/s]
test accuracy: 
0.6248
train_time_seconds: 90.652484
6
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 1, 36, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 7, 36, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(5, 3, 24, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("7/weights/read:0", shape=(576, 10), dtype=float32)
Tensor("7/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/6
12
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 1, 36, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 7, 36, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:22<00:58, 63.90it/s]0.66
test accuracy:  0.6217
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [00:44<00:36, 69.18it/s]0.66
test accuracy:  0.6261
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3746/5000 [01:09<00:18, 67.55it/s]0.67
test accuracy:  0.6247
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [01:32<00:00, 68.46it/s]0.73
test accuracy:  0.6316
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:34<00:00, 52.81it/s]
test accuracy: 
0.6316
train_time_seconds: 97.225366
7
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 1, 36, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 7, 36, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(5, 3, 24, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("8/weights/read:0", shape=(24, 10), dtype=float32)
Tensor("8/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/7
14
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 1, 36, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 7, 36, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(5, 3, 24, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1245/5000 [00:23<00:58, 63.90it/s]0.65
test accuracy:  0.6329
 50%|████████████████████████████████████████████████▉                                                 | 2499/5000 [00:47<00:41, 60.90it/s]0.78
test accuracy:  0.6358
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3746/5000 [01:13<00:19, 63.55it/s]0.7
test accuracy:  0.6325
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▊| 4993/5000 [01:37<00:00, 64.22it/s]0.69
test accuracy:  0.6417
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:40<00:00,  8.13it/s]
test accuracy: 
0.6417
train_time_seconds: 102.948534
8
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 1, 36, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 7, 36, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(5, 3, 24, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("9/weights/read:0", shape=(24, 10), dtype=float32)
Tensor("9/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/8
16
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 1, 36, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 7, 36, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(5, 3, 24, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1244/5000 [00:25<01:08, 55.22it/s]0.7
test accuracy:  0.6402
 50%|████████████████████████████████████████████████▉                                                 | 2495/5000 [00:50<00:44, 56.74it/s]0.65
test accuracy:  0.6356
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3744/5000 [01:18<00:21, 59.28it/s]0.65
test accuracy:  0.632
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4996/5000 [01:44<00:00, 56.20it/s]0.72
test accuracy:  0.6385
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:47<00:00, 46.66it/s]
test accuracy: 
0.6385
train_time_seconds: 109.923462
9
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 1, 36, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 7, 36, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(5, 3, 24, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("10/weights/read:0", shape=(48, 10), dtype=float32)
Tensor("10/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/9
18
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 1, 36, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 7, 36, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(5, 3, 24, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:26<01:09, 53.81it/s]0.77
test accuracy:  0.6403
 50%|████████████████████████████████████████████████▉                                                 | 2496/5000 [00:54<00:45, 54.75it/s]0.77
test accuracy:  0.6362
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3745/5000 [01:23<00:22, 54.74it/s]0.72
test accuracy:  0.6447
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4995/5000 [01:50<00:00, 56.60it/s]0.7
test accuracy:  0.6394
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:53<00:00, 44.06it/s]
test accuracy: 
0.6394
train_time_seconds: 116.377505
10
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 1, 36, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 7, 36, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(5, 3, 24, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("11/weights/read:0", shape=(64, 10), dtype=float32)
Tensor("11/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/10
20
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 1, 36, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 7, 36, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(5, 3, 24, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1244/5000 [00:28<01:11, 52.56it/s]0.75
test accuracy:  0.6366
 50%|████████████████████████████████████████████████▉                                                 | 2498/5000 [00:57<00:47, 52.34it/s]0.62
test accuracy:  0.634
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [01:27<00:22, 54.79it/s]0.68
test accuracy:  0.6438
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4996/5000 [01:56<00:00, 53.35it/s]0.72
test accuracy:  0.645
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [01:59<00:00, 41.92it/s]
test accuracy: 
0.645
train_time_seconds: 122.191046
11
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 1, 36, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 7, 36, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(5, 3, 24, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(5, 7, 64, 36), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("12/weights/read:0", shape=(36, 10), dtype=float32)
Tensor("12/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/11
22
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 1, 36, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 7, 36, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(5, 3, 24, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1249/5000 [00:30<01:19, 47.23it/s]0.76
test accuracy:  0.6379
 50%|████████████████████████████████████████████████▉                                                 | 2496/5000 [01:00<00:48, 51.67it/s]0.78
test accuracy:  0.6428
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3748/5000 [01:33<00:26, 47.85it/s]0.76
test accuracy:  0.6451
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [02:03<00:00, 48.22it/s]0.7
test accuracy:  0.6406
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:06<00:00, 39.52it/s]
test accuracy: 
0.6406
train_time_seconds: 129.449899
12
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 1, 36, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 7, 36, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(5, 3, 24, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(5, 7, 64, 36), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(3, 7, 36, 24), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("13/weights/read:0", shape=(24, 10), dtype=float32)
Tensor("13/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/12
24
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 1, 36, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 7, 36, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(5, 3, 24, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(5, 7, 64, 36), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1248/5000 [00:31<01:20, 46.54it/s]0.73
test accuracy:  0.6345
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:02<00:54, 46.18it/s]0.67
test accuracy:  0.6362
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3745/5000 [01:37<00:28, 43.59it/s]0.82
test accuracy:  0.6427
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4999/5000 [02:08<00:00, 47.56it/s]0.78
test accuracy:  0.6429
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:11<00:00, 37.96it/s]
test accuracy: 
0.6429
train_time_seconds: 134.766114
13
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 1, 36, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 7, 36, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(5, 3, 24, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(5, 7, 64, 36), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(3, 7, 36, 24), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(7, 3, 24, 24), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("14/weights/read:0", shape=(24, 10), dtype=float32)
Tensor("14/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/13
26
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 1, 36, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 7, 36, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(5, 3, 24, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(5, 7, 64, 36), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(3, 7, 36, 24), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1246/5000 [00:32<01:24, 44.48it/s]0.66
test accuracy:  0.6403
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:05<00:56, 44.21it/s]0.75
test accuracy:  0.6416
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3749/5000 [01:41<00:30, 41.38it/s]0.69
test accuracy:  0.6424
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4998/5000 [02:14<00:00, 44.01it/s]0.74
test accuracy:  0.643
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:17<00:00, 36.27it/s]
test accuracy: 
0.643
train_time_seconds: 140.90735
14
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[1, 5] stride:[3, 3] num_filters:36}
{Conv kernel_size:[3, 1] stride:[2, 2] num_filters:64}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
{Conv kernel_size:[7, 5] stride:[1, 1] num_filters:36}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:24}
{Conv kernel_size:[5, 3] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 3] stride:[3, 3] num_filters:24}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[3, 7] stride:[1, 1] num_filters:48}
{Conv kernel_size:[3, 5] stride:[1, 1] num_filters:64}
{Conv kernel_size:[5, 7] stride:[1, 1] num_filters:36}
{Conv kernel_size:[3, 7] stride:[2, 2] num_filters:24}
{Conv kernel_size:[7, 3] stride:[2, 2] num_filters:24}
{Conv kernel_size:[7, 1] stride:[1, 1] num_filters:48}
I tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0)
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 1, 36, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 7, 36, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(5, 3, 24, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(5, 7, 64, 36), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(3, 7, 36, 24), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(7, 3, 24, 24), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/14/weights/read:0", shape=(7, 1, 24, 48), dtype=float32)
Tensor("global/14/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("15/weights/read:0", shape=(48, 10), dtype=float32)
Tensor("15/biases/read:0", shape=(10,), dtype=float32)
WARNING:tensorflow:From /home/albert/git/network_architecture_search/network.py:102 in __init__.: initialize_all_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.
Instructions for updating:
Use `tf.global_variables_initializer` instead.
Network Initialized
global/14
28
Tensor("global/0/weights/read:0", shape=(3, 1, 3, 64), dtype=float32)
Tensor("global/0/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/1/weights/read:0", shape=(1, 5, 64, 36), dtype=float32)
Tensor("global/1/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/2/weights/read:0", shape=(3, 1, 36, 64), dtype=float32)
Tensor("global/2/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/3/weights/read:0", shape=(7, 1, 64, 48), dtype=float32)
Tensor("global/3/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/4/weights/read:0", shape=(7, 5, 48, 36), dtype=float32)
Tensor("global/4/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/5/weights/read:0", shape=(5, 7, 36, 24), dtype=float32)
Tensor("global/5/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/6/weights/read:0", shape=(5, 3, 24, 64), dtype=float32)
Tensor("global/6/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/7/weights/read:0", shape=(5, 3, 64, 24), dtype=float32)
Tensor("global/7/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/8/weights/read:0", shape=(3, 7, 24, 24), dtype=float32)
Tensor("global/8/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/9/weights/read:0", shape=(3, 7, 24, 48), dtype=float32)
Tensor("global/9/BatchNorm/beta/read:0", shape=(48,), dtype=float32)
Tensor("global/10/weights/read:0", shape=(3, 5, 48, 64), dtype=float32)
Tensor("global/10/BatchNorm/beta/read:0", shape=(64,), dtype=float32)
Tensor("global/11/weights/read:0", shape=(5, 7, 64, 36), dtype=float32)
Tensor("global/11/BatchNorm/beta/read:0", shape=(36,), dtype=float32)
Tensor("global/12/weights/read:0", shape=(3, 7, 36, 24), dtype=float32)
Tensor("global/12/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
Tensor("global/13/weights/read:0", shape=(7, 3, 24, 24), dtype=float32)
Tensor("global/13/BatchNorm/beta/read:0", shape=(24,), dtype=float32)
 25%|████████████████████████▍                                                                         | 1245/5000 [00:34<01:26, 43.18it/s]0.8
test accuracy:  0.6411
 50%|████████████████████████████████████████████████▉                                                 | 2497/5000 [01:08<00:59, 42.22it/s]0.7
test accuracy:  0.6328
 75%|█████████████████████████████████████████████████████████████████████████▍                        | 3747/5000 [01:45<00:29, 42.95it/s]0.67
test accuracy:  0.6452
100%|█████████████████████████████████████████████████████████████████████████████████████████████████▉| 4998/5000 [02:20<00:00, 41.33it/s]0.75
test accuracy:  0.6448
100%|██████████████████████████████████████████████████████████████████████████████████████████████████| 5000/5000 [02:23<00:00, 34.80it/s]
test accuracy: 
0.6448
train_time_seconds: 146.804826
